{"data":{"site":{"siteMetadata":{"title":"NoCoder Blog","author":"Jason Yang"}},"markdownRemark":{"id":"a14e90b7-4875-5922-ab93-63a928c4db66","excerpt":"小伙伴们中秋节快乐！终于可以放松几天，这两天带着老婆孩子玩疯了，满成都到处跑，当然 绝不能落下，只是晚到了一天。（算法题做的很烂，一点点调试出来的） Algorithm Longest Common Prefix Review Understanding the Proxy Design Pattern https…","html":"<blockquote>\n<p>小伙伴们中秋节快乐！终于可以放松几天，这两天带着老婆孩子玩疯了，满成都到处跑，当然<code class=\"language-text\">ARTS</code>绝不能落下，只是晚到了一天。（算法题做的很烂，一点点调试出来的）</p>\n</blockquote>\n<h2>Algorithm</h2>\n<h3>Longest Common Prefix</h3>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">package</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>nocoder<span class=\"token punctuation\">.</span>leetcode<span class=\"token punctuation\">.</span>solution</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">/**\n * Write a function to find the longest common prefix string amongst an array of strings.\n * &lt;p>\n * If there is no common prefix, return an empty string \"\".\n * &lt;p>\n * Example 1:\n * &lt;p>\n * Input: [\"flower\",\"flow\",\"flight\"]\n * Output: \"fl\"\n * Example 2:\n * &lt;p>\n * Input: [\"dog\",\"racecar\",\"car\"]\n * Output: \"\"\n * Explanation: There is no common prefix among the input strings.\n * Note:\n * &lt;p>\n * All given inputs are in lowercase letters a-z.\n *\n * @author jason\n * @date 2018/9/23.\n */</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">LongestCommonPrefix</span> <span class=\"token punctuation\">{</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">String</span> <span class=\"token function\">longestCommonPrefix</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> strs<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token class-name\">String</span> commonPrefix <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>strs <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">||</span> strs<span class=\"token punctuation\">.</span>length <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">return</span> commonPrefix<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        \n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>strs<span class=\"token punctuation\">.</span>length <span class=\"token operator\">==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            commonPrefix <span class=\"token operator\">=</span> strs<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">return</span> commonPrefix<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        \n        <span class=\"token comment\">// i: 代表数组下标</span>\n        <span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">// x: 数组元素中的字符串的下标</span>\n        <span class=\"token keyword\">int</span> x <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">&lt;</span> strs<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>x <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> strs<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">length</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> <span class=\"token punctuation\">(</span>x <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> strs<span class=\"token punctuation\">[</span>i <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">length</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token keyword\">return</span> commonPrefix<span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n            <span class=\"token comment\">// 获取数组中下标为i字符串,并截取(x, x+1)位置的字符</span>\n            <span class=\"token class-name\">String</span> s <span class=\"token operator\">=</span> strs<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">substring</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> x <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token comment\">// 将s与下一个字符串中的相同位置的字符进行比较</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">.</span><span class=\"token function\">equals</span><span class=\"token punctuation\">(</span>strs<span class=\"token punctuation\">[</span>i <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">substring</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> x <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>i <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token punctuation\">(</span>strs<span class=\"token punctuation\">.</span>length <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                    commonPrefix <span class=\"token operator\">+=</span> s<span class=\"token punctuation\">;</span>\n                    <span class=\"token comment\">// 字符串下标右移一位</span>\n                    x<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n                    <span class=\"token comment\">// 重置数组下标</span>\n                    i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n                    i<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span>\n            <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token keyword\">return</span> commonPrefix<span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">return</span> commonPrefix<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> arr1 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">{</span><span class=\"token string\">\"flower\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"flow\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"flight\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> arr2 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">{</span><span class=\"token string\">\"a\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"a\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token function\">longestCommonPrefix</span><span class=\"token punctuation\">(</span>arr1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token function\">longestCommonPrefix</span><span class=\"token punctuation\">(</span>arr2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2>Review</h2>\n<h3>Understanding the Proxy Design Pattern</h3>\n<blockquote>\n<p><a href=\"https://medium.com/@mithunsasidharan/understanding-the-proxy-design-pattern-5e63fe38052a\">https://medium.com/@mithunsasidharan/understanding-the-proxy-design-pattern-5e63fe38052a</a></p>\n</blockquote>\n<p>又一篇印度阿三的博客文章，哈哈，理解一下代理模式，作者列举了两个例子。</p>\n<p>一个是新郎新娘之间的对话，中间有个Aunty在传话，她可以保护新娘免受新郎的一些令人反感的问题，也可以修改新郎的问题，或者修改新娘的回答。去新娘娘家接亲，在印度是这样，在中国也差不多吧，非得一大帮人给你在中间搅和一下，哈哈。</p>\n<p>另一个例子是ATM作为银行支行的代理，来处理银行业务，比如取钱，查余额，当然ATM机没本事处理所有的银行业务，在实现Bank接口的某些方法时，作了简化或者其他处理，比如修改个人信息，可能只会提示一下用户，请持银行卡和证件到柜台操作。</p>\n<ul>\n<li>\n<p>Subject (Bank) : 银行通用接口</p>\n</li>\n<li>\n<p>Real Subject (Bank Branch) : 实现接口的Real Subject</p>\n</li>\n<li>\n<p>Proxy (ATM) : 代理类</p>\n</li>\n</ul>\n<p>代理模式的适用场景：</p>\n<ul>\n<li>存在重量级对象，希望实现更简单的版本</li>\n<li>不需要重量级对象的全部功能</li>\n<li>想要限制对重量级对象的访问</li>\n<li>创建重量级对象时有时间延迟或者非常复杂的时候</li>\n</ul>\n<p>几个缺点：</p>\n<ul>\n<li>身份比较  ：不能进行身份比较，因为不知道确切的Real Subject，只是代理人。</li>\n<li>歧义  ：客户可能不知道它现在访问的Real Subject与前一个Subject不同。</li>\n<li>安全问题：因为客户端不知道代理正在做什么，除了调用Real Subject。</li>\n</ul>\n<h2>Tip</h2>\n<p>新建的一个Springboot项目，准备部署到测试环境，<code class=\"language-text\">java -jar xxx.jar</code>运行，得到如下提示</p>\n<blockquote>\n<p>Failed to load Main-Class manifest attribute from xxx.jar</p>\n</blockquote>\n<p>问题在于<code class=\"language-text\">pom.xml</code>中，我虽然引入了<code class=\"language-text\">spring-boot-maven-plugin</code> 却没有配置<code class=\"language-text\">repackage</code>,正确的配置如下</p>\n<div class=\"gatsby-highlight\" data-language=\"xml\"><pre class=\"language-xml\"><code class=\"language-xml\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>plugin</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">></span></span>org.springframework.boot<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">></span></span>spring-boot-maven-plugin<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>configuration</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>executable</span><span class=\"token punctuation\">></span></span>true<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>executable</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>configuration</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>executions</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>execution</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>goals</span><span class=\"token punctuation\">></span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>goal</span><span class=\"token punctuation\">></span></span>repackage<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>goal</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>goals</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>execution</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>executions</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>plugin</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p>附上官方文档：\n<a href=\"https://docs.spring.io/spring-boot/docs/current/reference/html/build-tool-plugins-maven-plugin.html\">68. Spring Boot Maven Plugin</a></p>\n<h2>Share</h2>\n<blockquote>\n<p>代理模式（Proxy Pattern）：静态代理 - 最易懂的设计模式解析\n<a href=\"https://www.jianshu.com/p/a8aa6851e09e\">https://www.jianshu.com/p/a8aa6851e09e</a></p>\n</blockquote>","frontmatter":{"title":"ARTS-12","date":"2018-09-29 14:52:20"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/ARTS-12/","previous":{"fields":{"slug":"/some-tips/"},"frontmatter":{"title":"近期接触的技术点总结"}},"next":{"fields":{"slug":"/ARTS-13/"},"frontmatter":{"title":"ARTS-13"}}}}