{"data":{"site":{"siteMetadata":{"title":"NoCoder Blog","author":"Jason Yang"}},"markdownRemark":{"id":"92dcbd4a-e3a4-5184-bed5-6c4a29c83c67","excerpt":"…","html":"<p><img src=\"https://raw.githubusercontent.com/jasonyang86/nocoder/master/data/images/design-pattern/sunwukong_sixears.jpeg\"></p>\n<blockquote>\n<p>本文以西游记中的“真假美猴王”为例，一起温习一下装饰器模式的使用场景及具体实现过程。   </p>\n</blockquote>\n<p>真假美猴王的故事就不讲了，就算我标题党了吧。\n我们的目的是要把一个猴子类包装成孙悟空和六耳猕猴，但是不能改变猴子类本身的结构。\n简单描述一下装饰过程：</p>\n<ul>\n<li>首先定义一个猴子接口类，猴子具有<code class=\"language-text\">introduce()</code>方法，用于让猴子嗞哩哇啦的说话介绍自己；</li>\n<li>定义一个普通的猴子类，实现猴子接口类，重载<code class=\"language-text\">introduce()</code>方法，介绍一下自己，例如：“我是个会说话的猴子！”；</li>\n<li>定义一个抽象类，实现猴子接口，作为抽象装饰器类，因为要装饰猴子，所以需要有一个接收猴子类的构造方法；</li>\n<li>定义具体的装饰器类，继承抽象装饰器类，实现具体的装饰方法，这里我们需要定义两个具体的装饰器类，一个是孙悟空装饰器，一个是六耳猕猴装饰器，在各自的类里增加展示自己技能的描述方法，例如“我会七十二变”等；</li>\n</ul>\n<p>过程大概就上面这么几步，接着咱们就开始coding！</p>\n<p>1、首先是定义一个猴子接口，泛代表各种猴类。<code class=\"language-text\">IMonkey.java</code></p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">interface</span> <span class=\"token class-name\">IMonkey</span><span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">/**\n     * 猴子自我介绍\n    /*\n    void introduce();\n}</span></code></pre></div>\n<p>2、定义猴子实现类，表示一个普通的猴子。<code class=\"language-text\">Monkey.java</code></p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Monkey</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">IMonkey</span><span class=\"token punctuation\">{</span>\n    <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">introduce</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"我是一个会说话的猴子！\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>3、定义抽象装饰器类。<code class=\"language-text\">AbstractMonkeyDecorator.java</code></p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">abstract</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">AbstractMonkeyDecorator</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">IMonkey</span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">protected</span> <span class=\"token class-name\">IMonkey</span> monkey<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">AbstractMonkeyDecorator</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">IMonkey</span> monkey<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>monkey <span class=\"token operator\">=</span> monkey<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">introduce</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        monkey<span class=\"token punctuation\">.</span><span class=\"token function\">introduce</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>4、定义具体的装饰类，用于将普通的猴子包装成孙悟空或六耳猕猴。</p>\n<ul>\n<li>\n<p>先来一个孙悟空的装饰类<code class=\"language-text\">SunWuKongDecorator.java</code></p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">SunWuKongDecorator</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">AbstractMonkeyDecorator</span><span class=\"token punctuation\">{</span>\n<span class=\"token keyword\">public</span> <span class=\"token class-name\">SunWuKongDecorator</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">IMonkey</span> monkey<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>monkey<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token annotation punctuation\">@Override</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">introduce</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// 调用monkey自身的方法</span>\n    monkey<span class=\"token punctuation\">.</span><span class=\"token function\">introduce</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// 调用装饰方法</span>\n    <span class=\"token function\">decorate</span><span class=\"token punctuation\">(</span>monkey<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">private</span> <span class=\"token keyword\">void</span> <span class=\"token function\">decorate</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">IMonkey</span> monkey<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"我是美猴王，我会七十二变！\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"我师傅是大唐高僧！\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n</li>\n<li>\n<p>再来一个六耳猕猴的装饰类<code class=\"language-text\">SixEarsMonkeyDecorator.java</code></p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">SixEarsMonkeyDecorator</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">AbstractMonkeyDecorator</span><span class=\"token punctuation\">{</span>\n<span class=\"token keyword\">public</span> <span class=\"token class-name\">SixEarsMonkeyDecorator</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">IMonkey</span> monkey<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>monkey<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token annotation punctuation\">@Override</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">introduce</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// 调用monkey自身的方法</span>\n    monkey<span class=\"token punctuation\">.</span><span class=\"token function\">introduce</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// 调用装饰方法</span>\n    <span class=\"token function\">decorate</span><span class=\"token punctuation\">(</span>monkey<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// 具体的装饰方法实现逻辑</span>\n<span class=\"token keyword\">private</span> <span class=\"token keyword\">void</span> <span class=\"token function\">decorate</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">IMonkey</span> monkey<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"我才是美猴王，我会七十二变！\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"大唐高僧是我师傅！\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n</li>\n</ul>\n<p>5、测试程序</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// 首先看看一个普通的猴子的自我介绍</span>\n    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"使用装饰器前的猴子：\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\">Monkey</span> monkey <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Monkey</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    monkey<span class=\"token punctuation\">.</span><span class=\"token function\">introduce</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// 使用孙悟空装饰器装饰猴子</span>\n    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"使用孙悟空装饰器装饰后的猴子：\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\">SunWuKongDecorator</span> swkDecorator <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">SunWuKongDecorator</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Monkey</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    swkDecorator<span class=\"token punctuation\">.</span><span class=\"token function\">introduce</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// 使用六耳猕猴装饰器装饰猴子</span>\n    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"使用六耳猕猴装饰器装饰后的猴子：\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\">SixEarsMonkeyDecorator</span> semDecorator <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">SixEarsMonkeyDecorator</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Monkey</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    semDecorator<span class=\"token punctuation\">.</span><span class=\"token function\">introduce</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>6、输出结果</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\">使用装饰器前的猴子：我是一个会说话的猴子！\n使用孙悟空装饰器装饰后的猴子：我是一个会说话的猴子！我是美猴王，我会七十二变！我师傅是大唐高僧！\n使用六耳猕猴装饰器装饰后的猴子：我是一个会说话的猴子！我才是美猴王，我会七十二变！大唐高僧是我师傅！</code></pre></div>\n<p>总结：上面的例子中，我们并没有对Monkey类本身进行改造，而是采用装饰器包装的方式为Monkey增加了新的功能，这种方式可以动态的为实体类增加功能，比继承更灵活，且装饰类和被装饰类互不影响，可以各自扩展。</p>","frontmatter":{"title":"装饰器模式之真假美猴王","date":"2018-05-19 17:49:08"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/monkey-decorator-pattern/","previous":{"fields":{"slug":"/Integrate-an-h2-database-in-your-springboot-app/"},"frontmatter":{"title":"Integrate an H2 Database in Your Spring Boot App"}},"next":{"fields":{"slug":"/running-your-springboot-application/"},"frontmatter":{"title":"Running Your Spring Boot Application"}}}}