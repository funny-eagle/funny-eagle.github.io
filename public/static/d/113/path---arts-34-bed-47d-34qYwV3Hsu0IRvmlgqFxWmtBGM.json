{"data":{"site":{"siteMetadata":{"title":"NoCoder Blog","author":"Jason Yang"}},"markdownRemark":{"id":"d09e459a-08d0-5b93-ac21-63c024344e50","excerpt":"Algorithm:  35. Search Insert Position Review:  Gateway Aggregation pattern Tip: Spring Cloud Gateway 的使用 Share:  Cloud Design Patterns Algorithm Review Gateway…","html":"<ul>\n<li>Algorithm: <a href=\"https://leetcode.com/problems/search-insert-position/\">35. Search Insert Position</a></li>\n<li>Review: <a href=\"https://docs.microsoft.com/en-us/azure/architecture/patterns/gateway-aggregation\">Gateway Aggregation pattern</a></li>\n<li>Tip: Spring Cloud Gateway 的使用</li>\n<li>Share: <a href=\"https://docs.microsoft.com/en-us/azure/architecture/patterns/\">Cloud Design Patterns</a></li>\n</ul>\n<h2>Algorithm</h2>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">package</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>nocoder<span class=\"token punctuation\">.</span>leetcode<span class=\"token punctuation\">.</span>solution</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">/**\n * 35. Search Insert Position\n * &lt;p>\n * Given a sorted array and a target value, return the index if the target is found.\n * &lt;p>\n * If not, return the index where it would be if it were inserted in order.\n * &lt;p>\n * You may assume no duplicates in the array.\n * &lt;p>\n * Example 1:\n * &lt;p>\n * Input: [1,3,5,6], 5\n * Output: 2\n * Example 2:\n * &lt;p>\n * Input: [1,3,5,6], 2\n * Output: 1\n * Example 3:\n * &lt;p>\n * Input: [1,3,5,6], 7\n * Output: 4\n * Example 4:\n * &lt;p>\n * Input: [1,3,5,6], 0\n * Output: 0\n *\n * @author jason\n * @date 2019/3/23.\n */</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">SearchInsertPosition</span> <span class=\"token punctuation\">{</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> nums <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">{</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">int</span> t1 <span class=\"token operator\">=</span> <span class=\"token number\">4</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token function\">searchInsert</span><span class=\"token punctuation\">(</span>nums<span class=\"token punctuation\">,</span> t1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">int</span> t2 <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token function\">searchInsert</span><span class=\"token punctuation\">(</span>nums<span class=\"token punctuation\">,</span> t2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">int</span> t3 <span class=\"token operator\">=</span> <span class=\"token number\">7</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token function\">searchInsert</span><span class=\"token punctuation\">(</span>nums<span class=\"token punctuation\">,</span> t3<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">int</span> t4 <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token function\">searchInsert</span><span class=\"token punctuation\">(</span>nums<span class=\"token punctuation\">,</span> t4<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">/**\n     * 使用二分法，查找目标数的位置，\n     * 如果在数组中找到了目标数，则返回目标数的下标；\n     * 如果找不到目标数，则返回最后一次循环结束后的开始位置(即 start 的值)\n     * @param nums\n     * @param target\n     * @return\n     */</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">int</span> <span class=\"token function\">searchInsert</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> nums<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> target<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">int</span> start <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">int</span> end <span class=\"token operator\">=</span> nums<span class=\"token punctuation\">.</span>length<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span>start <span class=\"token operator\">&lt;=</span> end<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">int</span> middle <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>start <span class=\"token operator\">+</span> end <span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"middle: \"</span><span class=\"token operator\">+</span>middle<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>nums<span class=\"token punctuation\">[</span>middle<span class=\"token punctuation\">]</span> <span class=\"token operator\">></span> target<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n                end <span class=\"token operator\">=</span> middle <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>nums<span class=\"token punctuation\">[</span>middle<span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;</span> target<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n                start <span class=\"token operator\">=</span> middle <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n                <span class=\"token keyword\">return</span> middle<span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">return</span> start<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2>Review</h2>\n<h3><a href=\"https://docs.microsoft.com/en-us/azure/architecture/patterns/gateway-aggregation\">Gateway Aggregation pattern</a></h3>\n<ul>\n<li>使用网关将多个请求聚合到一个请求中</li>\n<li>用于当客户端必须对不同的后端系统进行多次调用的场景</li>\n<li>使用网关来减少客户端和服务之间的干扰。网关接收客户端请求，将请求分派给各种后端系统，然后聚合结果并将它们发送回请求客户端</li>\n<li>Instead of building aggregation into the gateway, consider placing an aggregation service behind the gateway. Request aggregation will likely have different resource requirements than other services in the gateway and may impact the gateway’s routing and offloading functionality.</li>\n</ul>\n<h2>Tip</h2>\n<h3><a href=\"https://spring.io/guides/gs/gateway/#scratch\">Spring Cloud Gateway 的使用</a></h3>\n<p>Spring Cloud Gateway 的功能</p>\n<ul>\n<li>基于Spring Framework 5，Project Reactor和Spring Boot 2.0构建</li>\n<li>能够匹配任何请求属性上的路由。</li>\n<li>能够添加<code class=\"language-text\">predicate</code>和<code class=\"language-text\">filter</code>，根据特定的条件路由。</li>\n<li><code class=\"language-text\">Hystrix</code> 断路器集成。</li>\n<li><code class=\"language-text\">Spring Cloud DiscoveryClient</code>集成</li>\n<li>易于编写<code class=\"language-text\">predicate</code>和<code class=\"language-text\">cilter</code></li>\n<li>请求率限制</li>\n<li>路径重写</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">package</span> gateway<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>boot</span><span class=\"token punctuation\">.</span><span class=\"token class-name\">SpringApplication</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>boot<span class=\"token punctuation\">.</span>autoconfigure</span><span class=\"token punctuation\">.</span><span class=\"token class-name\">SpringBootApplication</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>boot<span class=\"token punctuation\">.</span>context<span class=\"token punctuation\">.</span>properties</span><span class=\"token punctuation\">.</span><span class=\"token class-name\">ConfigurationProperties</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>boot<span class=\"token punctuation\">.</span>context<span class=\"token punctuation\">.</span>properties</span><span class=\"token punctuation\">.</span><span class=\"token class-name\">EnableConfigurationProperties</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>cloud<span class=\"token punctuation\">.</span>gateway<span class=\"token punctuation\">.</span>route</span><span class=\"token punctuation\">.</span><span class=\"token class-name\">RouteLocator</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>cloud<span class=\"token punctuation\">.</span>gateway<span class=\"token punctuation\">.</span>route<span class=\"token punctuation\">.</span>builder</span><span class=\"token punctuation\">.</span><span class=\"token class-name\">RouteLocatorBuilder</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>context<span class=\"token punctuation\">.</span>annotation</span><span class=\"token punctuation\">.</span><span class=\"token class-name\">Bean</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>web<span class=\"token punctuation\">.</span>bind<span class=\"token punctuation\">.</span>annotation</span><span class=\"token punctuation\">.</span><span class=\"token class-name\">RequestMapping</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>web<span class=\"token punctuation\">.</span>bind<span class=\"token punctuation\">.</span>annotation</span><span class=\"token punctuation\">.</span><span class=\"token class-name\">RestController</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">reactor<span class=\"token punctuation\">.</span>core<span class=\"token punctuation\">.</span>publisher</span><span class=\"token punctuation\">.</span><span class=\"token class-name\">Mono</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token annotation punctuation\">@SpringBootApplication</span>\n<span class=\"token annotation punctuation\">@RestController</span>\n<span class=\"token annotation punctuation\">@EnableConfigurationProperties</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Application</span><span class=\"token punctuation\">.</span><span class=\"token class-name\">UriConfiguration</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Application</span> <span class=\"token punctuation\">{</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token class-name\">SpringApplication</span><span class=\"token punctuation\">.</span><span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Application</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">,</span> args<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">/**\n     * 访问超时后的后备方案fallback\n     * @return\n     */</span>\n    <span class=\"token annotation punctuation\">@RequestMapping</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/fallback\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">Mono</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">></span></span> <span class=\"token function\">fallback</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"fallback...\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token class-name\">Mono</span><span class=\"token punctuation\">.</span><span class=\"token function\">just</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"fallback\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">/**\n     * RouteLocator 用于创建路由\n     * RouteLocatorBuilder 允许在路由中添加 predicate 和 filter，以便根据特定条件路由\n     * UriConfiguration 从配置中获取URL\n     * @param builder\n     * @return\n     */</span>\n    <span class=\"token annotation punctuation\">@Bean</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">RouteLocator</span> <span class=\"token function\">myRoutes</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">RouteLocatorBuilder</span> builder<span class=\"token punctuation\">,</span> <span class=\"token class-name\">UriConfiguration</span> uriConfiguration<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        <span class=\"token class-name\">String</span> httpUri <span class=\"token operator\">=</span> uriConfiguration<span class=\"token punctuation\">.</span><span class=\"token function\">getHttpbin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> builder<span class=\"token punctuation\">.</span><span class=\"token function\">routes</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">.</span><span class=\"token function\">route</span><span class=\"token punctuation\">(</span>p <span class=\"token operator\">-></span> p\n                        <span class=\"token punctuation\">.</span><span class=\"token function\">path</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/get\"</span><span class=\"token punctuation\">)</span>\n                        <span class=\"token punctuation\">.</span><span class=\"token function\">filters</span><span class=\"token punctuation\">(</span>f <span class=\"token operator\">-></span> f<span class=\"token punctuation\">.</span><span class=\"token function\">addRequestHeader</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hello\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"World\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n                        <span class=\"token punctuation\">.</span><span class=\"token function\">uri</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"http://httpbin.org:80\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n                <span class=\"token comment\">/**\n                 * 使用curl 发起请求，header 中包含 Host: *.hystrix.com，否则请求不会被路由\n                 * $ curl --dump-header - --header 'Host: www.hystrix.com' http://localhost:8080/delay/3\n                 * 注：使用 --dump-header 查看响应的headers\n                 * --dump-heaer 后面的 - 是为了告知 cURL 将headers 打印出来\n                 */</span>\n                <span class=\"token punctuation\">.</span><span class=\"token function\">route</span><span class=\"token punctuation\">(</span>p <span class=\"token operator\">-></span> p\n                        <span class=\"token punctuation\">.</span><span class=\"token function\">host</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"*.hystrix.com\"</span><span class=\"token punctuation\">)</span>\n                        <span class=\"token punctuation\">.</span><span class=\"token function\">filters</span><span class=\"token punctuation\">(</span>f <span class=\"token operator\">-></span> f<span class=\"token punctuation\">.</span><span class=\"token function\">hystrix</span><span class=\"token punctuation\">(</span>config <span class=\"token operator\">-></span> config\n                                <span class=\"token punctuation\">.</span><span class=\"token function\">setName</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"mycmd\"</span><span class=\"token punctuation\">)</span>\n                                <span class=\"token punctuation\">.</span><span class=\"token function\">setFallbackUri</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"forward:/fallback\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n                        <span class=\"token punctuation\">.</span><span class=\"token function\">uri</span><span class=\"token punctuation\">(</span>httpUri<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">.</span><span class=\"token function\">build</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token annotation punctuation\">@ConfigurationProperties</span>\n    <span class=\"token keyword\">class</span> <span class=\"token class-name\">UriConfiguration</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> httpbin <span class=\"token operator\">=</span> <span class=\"token string\">\"http://httpbin.org:80\"</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">public</span> <span class=\"token class-name\">String</span> <span class=\"token function\">getHttpbin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">return</span> httpbin<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">setHttpbin</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> httpbin<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>httpbin <span class=\"token operator\">=</span> httpbin<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2>Share</h2>\n<h3><a href=\"https://docs.microsoft.com/en-us/azure/architecture/patterns/\">Cloud Design Patterns</a></h3>\n<p>微软的文章，介绍了34种云服务的设计模式。</p>","frontmatter":{"title":"ARTS-34","date":"2019-03-16 18:41:22"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/ARTS-34/","previous":{"fields":{"slug":"/ARTS-33/"},"frontmatter":{"title":"ARTS-33"}},"next":{"fields":{"slug":"/ARTS-35/"},"frontmatter":{"title":"ARTS35"}}}}