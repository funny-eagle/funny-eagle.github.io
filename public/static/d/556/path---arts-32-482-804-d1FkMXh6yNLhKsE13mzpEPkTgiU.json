{"data":{"site":{"siteMetadata":{"title":"NoCoder Blog","author":"Jason Yang"}},"markdownRemark":{"id":"c4c9be7a-c983-5f8f-8fbe-3aab97bada97","excerpt":"Algorithm: 977. Squares of a Sorted Array Review:  Readme Driven Development Tip: Docker 容器中centos的编码问题 Share: 开源项目的选择和使用 Algorithm Review Readme Driven…","html":"<ul>\n<li>Algorithm:<a href=\"https://leetcode.com/problems/squares-of-a-sorted-array/\">977. Squares of a Sorted Array</a></li>\n<li>Review: <a href=\"http://tom.preston-werner.com/2010/08/23/readme-driven-development.html\">Readme Driven Development</a></li>\n<li>Tip: Docker 容器中centos的编码问题</li>\n<li>Share: 开源项目的选择和使用</li>\n</ul>\n<h2>Algorithm</h2>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">package</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>nocoder<span class=\"token punctuation\">.</span>leetcode<span class=\"token punctuation\">.</span>solution</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">/**\n * 977. Squares of a Sorted Array\n * &lt;p>\n * Given an array of integers A sorted in non-decreasing order,\n * return an array of the squares of each number, also in sorted non-decreasing order.\n * &lt;p>\n * Example 1:\n * &lt;p>\n * Input: [-4,-1,0,3,10]\n * Output: [0,1,9,16,100]\n * Example 2:\n * &lt;p>\n * Input: [-7,-3,2,3,11]\n * Output: [4,9,9,49,121]\n * &lt;p>\n * &lt;p>\n * Note:\n * &lt;p>\n * 1 &lt;= A.length &lt;= 10000\n * -10000 &lt;= A[i] &lt;= 10000\n * A is sorted in non-decreasing order.\n *\n * @author yangjinlong\n */</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">SquaresOfASortedArray</span> <span class=\"token punctuation\">{</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> arr <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">{</span><span class=\"token operator\">-</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">sortedSquares</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token function\">sortedSquares</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token class-name\">A</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> arr <span class=\"token operator\">=</span> <span class=\"token function\">powArray</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">A</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">sort</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> arr<span class=\"token punctuation\">.</span>length <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> arr<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token function\">powArray</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> arr<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> arr<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            arr<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span> <span class=\"token class-name\">Math</span><span class=\"token punctuation\">.</span><span class=\"token function\">pow</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">return</span> arr<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">sort</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> arr<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> head<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> tail<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>head <span class=\"token operator\">>=</span> tail <span class=\"token operator\">||</span> arr <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">||</span> arr<span class=\"token punctuation\">.</span>length <span class=\"token operator\">&lt;=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> head<span class=\"token punctuation\">,</span> j <span class=\"token operator\">=</span> tail<span class=\"token punctuation\">,</span> pivot <span class=\"token operator\">=</span> arr<span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span>head <span class=\"token operator\">+</span> tail<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">&lt;=</span> j<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;</span> pivot<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token operator\">++</span>i<span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n            <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">></span> pivot<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token operator\">--</span>j<span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">&lt;</span> j<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token keyword\">int</span> t <span class=\"token operator\">=</span> arr<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n                arr<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> arr<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n                arr<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> t<span class=\"token punctuation\">;</span>\n                <span class=\"token operator\">++</span>i<span class=\"token punctuation\">;</span>\n                <span class=\"token operator\">--</span>j<span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">==</span> j<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token operator\">++</span>i<span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token function\">sort</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">,</span> head<span class=\"token punctuation\">,</span> j<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">sort</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">,</span> tail<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2>Review</h2>\n<h3><a href=\"http://tom.preston-werner.com/2010/08/23/readme-driven-development.html\">Readme Driven Development</a></h3>\n<p><strong>RDD 开发</strong>的几个优势</p>\n<ul>\n<li>最为重要的一点是，给自己一次重新审视项目，又无需每次为了改变主意而去修改代码而花去开销的机会，例如整体应该如何组织、公用API里到底应该包含哪些东西。还记得第一次写自动化测试代码，意识到揪出全部的错误从而防止那些问题悄悄跑进代码里去吗？在项目真正编码前写一个Readme的感觉是如出一辙的。</li>\n<li>为了明确应该实现什么而去写Readme会产生一些副产品，会得到一份写的非常棒的文档。当在项目伊始，也就是兴奋度和动机处于最高的阶段，写一个文档会十分容易。事后再补Readme将是一种绝对的障碍，并且会发现遗漏了许多重要的细节。</li>\n<li>如果与一群开发者一起协同工作，将会发现会从Readme收益颇多。如果其他成员在尚未完成项目前便可以读到这份Readme，他们将大可放心的在将与项目有交互的代码上开始工作。如果没有预先定义好的接口，团队只能顺序地编码或者面临重新实现大量代码的窘境。</li>\n<li>基于白纸黑字的讨论将会容易的多，而在一个没有任何成文内容的讨论话题上，事情往往会演变成争论不休。把建议的解决方案写下来这样一个简单的行动，代表了一个具体的想法，从而能被讨论，迭代发展下去。</li>\n</ul>\n<h2>Tip</h2>\n<h3>Docker 容器中centos的编码问题</h3>\n<p>前几天项目中有个微信提现的BUG，微信端返回“持卡人姓名不正确”，检查了接口调用方式，参数以及种种检查和测试之后，发现同样的代码本地是可以调通的，只有 docker 环境下会出问题，于是把问题定位偏向了编码问题，开始 code review，发现了这样一行代码<code class=\"language-text\">estr = RSAUtil.encrypt(data.getBytes(), pub, 2048, 11, rsa);</code>，问题基本定位到了，<code class=\"language-text\">data</code> 是个<code class=\"language-text\">String</code>，在调用<code class=\"language-text\">data.getBytes()</code> 方法是并未指定字符集，在开发的本地环境，编码环境已经设置为<code class=\"language-text\">UTF-8</code>，所以可以编码不会有问题，但是在测试环境上，Docker 的镜像内包含了一个centos，<code class=\"language-text\">Dockerfile</code>中并未指定系统的字符集，默认为<code class=\"language-text\">POSIX</code>，所以在<code class=\"language-text\">data.getBytes()</code> 的时候，会使用<code class=\"language-text\">POSIX</code>来编码，于是就乱码了。</p>\n<p>解决办法有两种：</p>\n<p>1、修改代码，指定字符集 <code class=\"language-text\">data.getBytes(&quot;UTF-8&quot;)</code></p>\n<p>2、在<code class=\"language-text\">Dockerfile</code>中添加一行<code class=\"language-text\">ENV LANG C.UTF-8</code>指定系统的默认字符集</p>\n<h2>Share</h2>\n<h3>开源项目的选择和使用</h3>\n<p>项目中经常会使用开源的项目或者库，选择和使用开源项目，我们要关注哪些重要的点，我主要参考了<a href=\"https://time.geekbang.org/column/article/13043\">再谈开源项目：如何选择、使用以及二次开发？</a>这边文章，整理了一张图，把几个关键的点记录下来。</p>\n<p><img src=\"https://raw.githubusercontent.com/yangjinlong86/arts/master/2019/images/select%20and%20use%20opensource%20projects.png\" alt=\"开源项目的选择和使用\"></p>","frontmatter":{"title":"ARTS-32","date":"2019-03-02 18:41:22"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/ARTS32/","previous":{"fields":{"slug":"/ARTS31/"},"frontmatter":{"title":"ARTS-31"}},"next":{"fields":{"slug":"/ARTS33/"},"frontmatter":{"title":"ARTS33"}}}}