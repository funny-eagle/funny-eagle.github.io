{"data":{"site":{"siteMetadata":{"title":"NoCoder Blog","author":"Jason Yang"}},"markdownRemark":{"id":"8d39ed41-5000-5c04-a93e-75652374b09c","excerpt":"Algorithm Review Announcing Stack Overflow for Teams you can ask questions that will only be visible to members of your team, company, or organization…","html":"<h2>Algorithm</h2>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">package</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>nocoder<span class=\"token punctuation\">.</span>leetcode<span class=\"token punctuation\">.</span>solution</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">/**\n * 136. Single Number\n * Given a non-empty array of integers, every element appears twice except for one. Find that single one.\n *\n * Note:\n *\n * Your algorithm should have a linear runtime complexity. Could you implement it without using extra memory?\n *\n * Example 1:\n *\n * Input: [2,2,1]\n * Output: 1\n * Example 2:\n *\n * Input: [4,1,2,1,2]\n * Output: 4\n *\n * @author yangjinlong\n * @date 2018-12-06\n */</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">SingleNumber</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">int</span> <span class=\"token function\">singleNumber</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> nums<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">int</span> result <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">:</span> nums<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            result <span class=\"token operator\">^=</span> i<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">return</span> result<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> arr1 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">{</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> arr2 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">{</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token function\">singleNumber</span><span class=\"token punctuation\">(</span>arr1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token function\">singleNumber</span><span class=\"token punctuation\">(</span>arr2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2>Review</h2>\n<p><a href=\"https://www.joelonsoftware.com/2018/05/03/announcing-stack-overflow-for-teams/\">Announcing Stack Overflow for Teams</a></p>\n<blockquote>\n<p>you can ask questions that will only be visible to members of your team, company, or organization.</p>\n</blockquote>\n<p>既可以面向团队提问，又可以面向世界提问</p>\n<h2>Tip</h2>\n<h3>Spring Cloud Ribbon 负载均衡重试机制</h3>\n<h4>1、升级 Spring Cloud 版本</h4>\n<blockquote>\n<p>从 <code class=\"language-text\">Camden-SR2</code> 开始，Spring Cloud 整合了 <code class=\"language-text\">Spring Retry</code> 来增强 <code class=\"language-text\">RestTemplate</code> 的重试能力，通过简单的配置即可实现服务访问重试策略。我们项目中的 <code class=\"language-text\">Spring Cloud</code> 版本选择从 <code class=\"language-text\">Brixton.RELEASE</code> 升级至 <code class=\"language-text\">Camden-SR3</code>。</p>\n</blockquote>\n<p>pom.xml 中，将 <code class=\"language-text\">spring-cloud-dependencies</code> 的 <code class=\"language-text\">version</code> 修改为 <code class=\"language-text\">Camden.SR3</code></p>\n<div class=\"gatsby-highlight\" data-language=\"xml\"><pre class=\"language-xml\"><code class=\"language-xml\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependencyManagement</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependencies</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">></span></span>org.springframework.cloud<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">></span></span>spring-cloud-dependencies<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>version</span><span class=\"token punctuation\">></span></span>Camden.SR3<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>version</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>type</span><span class=\"token punctuation\">></span></span>pom<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>type</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>scope</span><span class=\"token punctuation\">></span></span>import<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>scope</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependencies</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependencyManagement</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<h4>2、增加配置文件</h4>\n<div class=\"gatsby-highlight\" data-language=\"conf\"><pre class=\"language-conf\"><code class=\"language-conf\"># 开启重试机制，默认是false\nspring.cloud.loadbalancer.retry.enabled=true\n# 对所有操作请求都进行重试\nribbon.OkToRetryOnAllOperations=true</code></pre></div>\n<h3><code class=\"language-text\">Ribbon</code> 负载均衡重试配置文件说明</h3>\n<div class=\"gatsby-highlight\" data-language=\"conf\"><pre class=\"language-conf\"><code class=\"language-conf\"># 开启重试机制，默认是false\nspring.cloud.loadbalancer.retry.enabled=true\n\n# 请求连接的超时时间\nribbon.ConnectTimeout=250\n\n# 请求处理的超时时间，使用SimpleClientHttpRequestFactory时，不用配置\nribbon.ReadTimeout=1000\n\n# 对所有操作请求都进行重试\nribbon.OkToRetryOnAllOperations=true\n\n# 切换实例的重试次数，默认为1，可使用默认值\nribbon.MaxAutoRetriesNextServer=2\n\n# 对当前实例的重试次数，默认为1，可使用默认值\nribbon.MaxAutoRetries=1</code></pre></div>\n<p><code class=\"language-text\">RestTemplate</code> 默认使用的是 <code class=\"language-text\">ClientHttpRequestFactory</code> 是 <code class=\"language-text\">SimpleClientHttpRequestFactory</code>， 此时 <code class=\"language-text\">ribbon.ConnectTimeout</code> ，<code class=\"language-text\">ribbon.ReadTimeout</code> 这两个参数配置是不生效的。</p>\n<p><img src=\"https://raw.githubusercontent.com/yangjinlong86/nocoder/master/data/images/201812/RestTemplate-SimpleClientHttpRequestFactory.png\" alt=\"SimpleClientHttpRequestFactory\"></p>\n<p>如需设置 <code class=\"language-text\">connectTimeout</code>，需要手动创建 <code class=\"language-text\">SimpleClientHttpRequestFactory</code> 实例，注入 <code class=\"language-text\">RestTemplate</code> 构造方法中。</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@Bean</span>\n    <span class=\"token annotation punctuation\">@LoadBalanced</span>\n    <span class=\"token class-name\">RestTemplate</span> <span class=\"token function\">restTemplate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token class-name\">SimpleClientHttpRequestFactory</span> factory <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">SimpleClientHttpRequestFactory</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        factory<span class=\"token punctuation\">.</span><span class=\"token function\">setConnectTimeout</span><span class=\"token punctuation\">(</span><span class=\"token number\">250</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">RestTemplate</span> restTemplate <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">RestTemplate</span><span class=\"token punctuation\">(</span>factory<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">//自定义响应错误处理</span>\n        restTemplate<span class=\"token punctuation\">.</span><span class=\"token function\">setErrorHandler</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">LibraryResponseErrorHandler</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> restTemplate<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span></code></pre></div>\n<p>另一种实现，把 <code class=\"language-text\">ribbon.httpclient.enabled</code> 设置为 <code class=\"language-text\">true</code>，<code class=\"language-text\">RestTemplate</code> 的 <code class=\"language-text\">ClientHttpRequestFactory</code> 就会使用 <code class=\"language-text\">RibbonClientHttpRequestFactory</code>，此时 <code class=\"language-text\">ribbon.ConnectTimeout</code> ，<code class=\"language-text\">ribbon.ReadTimeout</code> 这两个参数配置会生效（注： <code class=\"language-text\">SpringCloud</code> 版本：<code class=\"language-text\">Camden.SR3</code>）。</p>\n<h2>Share</h2>\n<p>twitter上看到一个好玩的东西</p>\n<p><a href=\"https://app.bytescout.com/sql-trainer/index.html\">ByteScout SQL Trainer</a></p>","frontmatter":{"title":"ARTS-22","date":"2018-12-01 18:41:22"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/ARTS22/","previous":{"fields":{"slug":"/ARTS20-20181118/"},"frontmatter":{"title":"ARTS20-20181118"}},"next":{"fields":{"slug":"/ARTS23/"},"frontmatter":{"title":"ARTS-23"}}}}