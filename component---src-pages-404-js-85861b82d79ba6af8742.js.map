{"version":3,"file":"component---src-pages-404-js-85861b82d79ba6af8742.js","mappings":"yIAoCA,IAjCeA,IAAoC,IAAnC,SAAEC,EAAQ,MAAEC,EAAK,SAAEC,GAAUH,EAC3C,MACMI,EAD6B,MAChBH,EAASI,SAC5B,IAAIC,EAgBJ,OAbEA,EADEF,EAEAG,EAAAA,cAAA,MAAIC,UAAU,gBACZD,EAAAA,cAACE,EAAAA,KAAI,CAACC,GAAG,KAAKR,IAKhBK,EAAAA,cAACE,EAAAA,KAAI,CAACD,UAAU,mBAAmBE,GAAG,KACnC,KAAOR,GAMZK,EAAAA,cAAA,OAAKC,UAAU,iBAAiB,oBAAmBJ,GACjDG,EAAAA,cAAA,UAAQC,UAAU,iBAAiBF,GACnCC,EAAAA,cAAA,UAAQI,OAAK,EAACC,IAAI,gGAAgGC,YAAY,cAC9HN,EAAAA,cAAA,YAAOJ,GACPI,EAAAA,cAAA,cAAQ,MACH,IAAIO,MAAOC,cAAc,eAC5B,IACAR,EAAAA,cAAA,KAAGS,KAAK,4BAA2B,WAEjC,C,+CCiBV,IAvCYhB,IAAuC,IAADiB,EAAAC,EAAAC,EAAA,IAArC,YAAEC,EAAW,MAAElB,EAAK,SAAEC,GAAUH,EAC3C,MAAM,KAAEqB,IAASC,EAAAA,EAAAA,gBAAe,cAgB1BC,EAAkBH,GAAeC,EAAKG,aAAaJ,YACnDK,EAAgC,QAApBR,EAAGI,EAAKG,oBAAY,IAAAP,OAAA,EAAjBA,EAAmBf,MAExC,OACEK,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAAA,aAAQkB,EAAkBvB,EAAK,MAAMuB,EAAiBvB,GACtDK,EAAAA,cAAA,QAAMmB,KAAK,cAAcC,QAASJ,IAClChB,EAAAA,cAAA,QAAMqB,SAAS,WAAWD,QAASzB,IACnCK,EAAAA,cAAA,QAAMqB,SAAS,iBAAiBD,QAASJ,IACzChB,EAAAA,cAAA,QAAMqB,SAAS,UAAUD,QAAQ,YACjCpB,EAAAA,cAAA,QAAMmB,KAAK,eAAeC,QAAQ,YAClCpB,EAAAA,cAAA,QACEmB,KAAK,kBACLC,SAA0B,QAAjBT,EAAAG,EAAKG,oBAAY,IAAAN,GAAQ,QAARC,EAAjBD,EAAmBW,cAAM,IAAAV,OAAR,EAAjBA,EAA2BW,UAAO,KAE7CvB,EAAAA,cAAA,QAAMmB,KAAK,gBAAgBC,QAASzB,IACpCK,EAAAA,cAAA,QAAMmB,KAAK,sBAAsBC,QAASJ,IACzCpB,EACA,C,kGCvCP,MAWa4B,EAAOA,IAAMxB,EAAAA,cAACyB,EAAAA,EAAG,CAAC9B,MAAM,mBAErC,UAbqBF,IAAyB,IAAxB,KAAEiC,EAAI,SAAEhC,GAAUD,EACtC,MAAMkC,EAAYD,EAAKZ,KAAKG,aAAatB,MAEzC,OACEK,EAAAA,cAAC4B,EAAAA,EAAM,CAAClC,SAAUA,EAAUC,MAAOgC,GACjC3B,EAAAA,cAAA,UAAI,kBACJA,EAAAA,cAAA,SAAG,2DACI,C","sources":["webpack://nocoder-blog/./src/components/layout.js","webpack://nocoder-blog/./src/components/seo.js","webpack://nocoder-blog/./src/pages/404.js"],"sourcesContent":["import * as React from \"react\"\nimport { Link } from \"gatsby\"\n\nconst Layout = ({ location, title, children }) => {\n  const rootPath = `${__PATH_PREFIX__}/`\n  const isRootPath = location.pathname === rootPath\n  let header\n\n  if (isRootPath) {\n    header = (\n      <h1 className=\"main-heading\">\n        <Link to=\"/\">{title}</Link>\n      </h1>\n    )\n  } else {\n    header = (\n      <Link className=\"header-link-home\" to=\"/\">\n        {\"← \" + title}\n      </Link>\n    )\n  }\n\n  return (\n    <div className=\"global-wrapper\" data-is-root-path={isRootPath}>\n      <header className=\"global-header\">{header}</header>\n      <script async src=\"https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-1730830298664620\" crossorigin=\"anonymous\"></script>\n      <main>{children}</main>\n      <footer>\n        © {new Date().getFullYear()}, Built with\n        {` `}\n        <a href=\"https://www.gatsbyjs.com\">Gatsby</a>\n      </footer>\n    </div>\n  )\n}\n\nexport default Layout\n","/**\n * SEO component that queries for data with\n * Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\n */\n\nimport * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nconst Seo = ({ description, title, children }) => {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            social {\n              twitter\n            }\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n  const defaultTitle = site.siteMetadata?.title\n\n  return (\n    <>\n      <title>{defaultTitle ? `${title} | ${defaultTitle}` : title}</title>\n      <meta name=\"description\" content={metaDescription} />\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={metaDescription} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta name=\"twitter:card\" content=\"summary\" />\n      <meta\n        name=\"twitter:creator\"\n        content={site.siteMetadata?.social?.twitter || ``}\n      />\n      <meta name=\"twitter:title\" content={title} />\n      <meta name=\"twitter:description\" content={metaDescription} />\n      {children}\n    </>\n  )\n}\n\nexport default Seo\n","import * as React from \"react\"\nimport { graphql } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\n\nconst NotFoundPage = ({ data, location }) => {\n  const siteTitle = data.site.siteMetadata.title\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <h1>404: Not Found</h1>\n      <p>You just hit a route that doesn&#39;t exist... the sadness.</p>\n    </Layout>\n  )\n}\n\nexport const Head = () => <Seo title=\"404: Not Found\" />\n\nexport default NotFoundPage\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n  }\n`\n"],"names":["_ref","location","title","children","isRootPath","pathname","header","React","className","Link","to","async","src","crossorigin","Date","getFullYear","href","_site$siteMetadata","_site$siteMetadata2","_site$siteMetadata2$s","description","site","useStaticQuery","metaDescription","siteMetadata","defaultTitle","name","content","property","social","twitter","Head","Seo","data","siteTitle","Layout"],"sourceRoot":""}