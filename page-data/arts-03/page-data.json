{"componentChunkName":"component---src-templates-blog-post-js","path":"/arts-03/","result":{"data":{"site":{"siteMetadata":{"title":"Funny Eagle","author":"Jason Yang"}},"markdownRemark":{"id":"cfc50994-7331-530b-9745-cbb7024b5ef8","excerpt":"Algorithm Longest Substring Without Repeating Characters Review Top 10 Best Practices for Jenkins P…","html":"<h2 id=\"algorithm\" style=\"position:relative;\"><a href=\"#algorithm\" aria-label=\"algorithm permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Algorithm</h2>\n<p>Longest Substring Without Repeating Characters</p>\n<deckgo-highlight-code language=\"java\" terminal=\"carbon\" theme=\"one-dark\" line-numbers=\"true\"  >\n          <code slot=\"code\">package org.nocoder.leetcode.solution;\n\nimport java.util.HashSet;\n\n/**\n * 3. Longest Substring Without Repeating Characters\n * Given a string, find the length of the longest substring without repeating characters.\n * Examples:\n * Given &quot;abcabcbb&quot;, the answer is &quot;abc&quot;, which the length is 3.\n * Given &quot;bbbbb&quot;, the answer is &quot;b&quot;, with the length of 1.\n * Given &quot;pwwkew&quot;, the answer is &quot;wke&quot;, with the length of 3. Note that the answer must be a substring, &quot;pwke&quot; is a subsequence and not a substring.\n *\n * @author jason\n * @date 18/7/23.\n */\npublic class LongestSubstringWithoutRepeatingCharacters {\n    public static int lengthOfLongestSubstring(String s) {\n        int res = 0, left = 0, right = 0;\n        HashSet&lt;Character&gt; t = new HashSet&lt;&gt;();\n        while (right &lt; s.length()) {\n            if (!t.contains(s.charAt(right))) {\n                t.add(s.charAt(right++));\n                res = Math.max(res, t.size());\n            } else {\n                t.remove(s.charAt(left++));\n            }\n        }\n        return res;\n    }\n\n    public static void main(String[] args) {\n        String s1 = &quot;abcabcbb&quot;;\n        // expect: 3, actual: 3\n        System.out.println(lengthOfLongestSubstring(s1));\n\n        String s2 = &quot;pwwkew&quot;;\n        // expect: 3, actual: 3\n        System.out.println(lengthOfLongestSubstring(s2));\n    }\n}\n</code>\n        </deckgo-highlight-code>\n<h2 id=\"review\" style=\"position:relative;\"><a href=\"#review\" aria-label=\"review permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Review</h2>\n<h3 id=\"top-10-best-practices-for-jenkins-pipeline-plugin\" style=\"position:relative;\"><a href=\"#top-10-best-practices-for-jenkins-pipeline-plugin\" aria-label=\"top 10 best practices for jenkins pipeline plugin permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Top 10 Best Practices for Jenkins Pipeline Plugin</h3>\n<p><a href=\"https://www.cloudbees.com/blog/top-10-best-practices-jenkins-pipeline-plugin\">https://www.cloudbees.com/blog/top-10-best-practices-jenkins-pipeline-plugin</a></p>\n<ul>\n<li>Use the real Jenkins Pipeline</li>\n<li>Develop your pipeline as code</li>\n<li>All work within a stage</li>\n<li>All material work within a node</li>\n<li>Work you can within a parallel step</li>\n<li>Acquire nodes within parallel steps</li>\n<li>Use input within a node block</li>\n<li>Wrap your inputs in a timeout</li>\n<li>Don’t set environment variables with env global variable</li>\n<li>Prefer stashing files to archiving</li>\n</ul>\n<h2 id=\"tip\" style=\"position:relative;\"><a href=\"#tip\" aria-label=\"tip permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Tip</h2>\n<h3 id=\"ci--cd-with-jenkins-pipline\" style=\"position:relative;\"><a href=\"#ci--cd-with-jenkins-pipline\" aria-label=\"ci  cd with jenkins pipline permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>CI &#x26; CD with Jenkins pipline</h3>\n<deckgo-highlight-code language=\"shell\" terminal=\"carbon\" theme=\"one-dark\" line-numbers=\"true\"  >\n          <code slot=\"code\">node {\n   stage(&#39;Preparation&#39;) {\n      git credentialsId: &#39;gitlab&#39;, url: &#39;https://gitlab.com/yangjinlong86/springboot-docker.git&#39;\n   }\n\n   stage(&#39;Maven Package&#39;){\n       def mvnHome = tool name: &#39;maven3&#39;, type: &#39;maven&#39;\n       def mvnCMD = &quot;${mvnHome}/bin/mvn&quot;\n       sh &quot;${mvnCMD} clean package&quot;\n   }\n\n   stage(&#39;Docker Build Image&#39;){\n       sh &quot;docker build -t yangjinlong/springboot-docker:1.0.0 .&quot;\n   }\n\n   stage(&#39;Docker Push Image&#39;){\n       withCredentials([string(credentialsId: &#39;docker-hub-password&#39;, variable: &#39;dockerHubPassword&#39;)]) {\n           sh &quot;docker login -u yangjinlong -p ${dockerHubPassword}&quot;\n       }\n       sh &quot;docker push yangjinlong/springboot-docker:1.0.0&quot;\n   }\n\n   stage(&#39;Docker Run Container on Test Server&#39;){\n       def dockerRun = &#39;docker run -p 9901:9901 --name dockerapp -d yangjinlong/springboot-docker:1.0.0&#39;\n       sshagent([&#39;test-server&#39;]) {\n            sh &quot;ssh -o StrictHostKeyChecking=no jason@192.168.0.111 ${dockerRun}&quot;\n        }\n   }\n   \n}</code>\n        </deckgo-highlight-code>\n<ul>\n<li>在jenkins的系统设置增加JAVA_HOME变量</li>\n<li>pipline语法，带变量的命令必须使用双引号 <code>sh \"${mvnCMD} clean package\"</code></li>\n<li>docker build没有权限问题，将jenkins用户加入docker用户组</li>\n<li>绑定加密变量 <code>withCredentials: Bind credentials to variables</code></li>\n<li>使用 ssh agent plugin</li>\n</ul>\n<h2 id=\"share\" style=\"position:relative;\"><a href=\"#share\" aria-label=\"share permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Share</h2>\n<p>这周基本上一直在搞自动化，折腾了gitlab，docker，nexus3，jenkins，最后选用了pipline来做CI 和CD，\n完工之后基本和下图一致，大概说明一下步骤：</p>\n<p>1.Developer 将代码 push 到Gitlab；</p>\n<p>2.Jenkins 从Gitlab pull 最新的代码，通过checkstyle，findbugs，pmd进行代码质量检查，生成检查报告；</p>\n<p>3.Jenkins 使用 Maven 命令进行构建；</p>\n<p>4.Jenkins 使用 Docker 命令进行镜像构建，并推送到 nexus3 docker 私有仓库；</p>\n<p>5.Jenkins 使用ssh命令登录到服务器，并使用Docker命令拉取镜像并启动。</p>\n<p><img src=\"https://raw.githubusercontent.com/yangjinlong86/nocoder/master/data/images/201807/jenkins-pipline.jpeg\" alt=\"\"></p>","tableOfContents":"<ul>\n<li>\n<p><a href=\"#algorithm\">Algorithm</a></p>\n</li>\n<li>\n<p><a href=\"#review\">Review</a></p>\n<ul>\n<li><a href=\"#top-10-best-practices-for-jenkins-pipeline-plugin\">Top 10 Best Practices for Jenkins Pipeline Plugin</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#tip\">Tip</a></p>\n<ul>\n<li><a href=\"#ci--cd-with-jenkins-pipline\">CI &#x26; CD with Jenkins pipline</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#share\">Share</a></p>\n</li>\n</ul>","frontmatter":{"title":"ARTS 第 3 周","tags":["coding","arts"],"description":"Algorithm, Reiview, Tip and Share","date":"2018-07-22"}}},"pageContext":{"slug":"/arts-03/","previous":{"fields":{"slug":"/arts-02/"},"frontmatter":{"title":"ARTS 第 2 周","tags":["coding","arts"],"slug":""}},"next":{"fields":{"slug":"/open-mysql-binlog-for-mac/"},"frontmatter":{"title":"Mac 下 MySQL 开启 binlog","tags":["coding"],"slug":""}}}},"staticQueryHashes":["2052298874"],"slicesMap":{}}