{"componentChunkName":"component---src-templates-blog-post-js","path":"/arts-09/","result":{"data":{"site":{"siteMetadata":{"title":"Funny Eagle","author":"Jason Yang"}},"markdownRemark":{"id":"0546eea5-dd32-5549-a2d4-3a03cab78c9b","excerpt":"Algorithm Palindrome Number Review Using Command Pattern in Java https://medium.com/@p.osinaga/usin…","html":"<h2 id=\"algorithm\" style=\"position:relative;\"><a href=\"#algorithm\" aria-label=\"algorithm permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Algorithm</h2>\n<h3 id=\"palindrome-number\" style=\"position:relative;\"><a href=\"#palindrome-number\" aria-label=\"palindrome number permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Palindrome Number</h3>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">package</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>nocoder<span class=\"token punctuation\">.</span>leetcode<span class=\"token punctuation\">.</span>solution</span><span class=\"token punctuation\">;</span>\r\n\r\n<span class=\"token comment\">/**\r\n * 9.Palindrome Number\r\n * &lt;p>\r\n * Determine whether an integer is a palindrome. An integer is a palindrome when it reads the same backward as forward.\r\n * &lt;p>\r\n * Example 1:\r\n * &lt;p>\r\n * Input: 121\r\n * Output: true\r\n * Example 2:\r\n * &lt;p>\r\n * Input: -121\r\n * Output: false\r\n * Explanation: From left to right, it reads -121. From right to left, it becomes 121-. Therefore it is not a palindrome.\r\n * Example 3:\r\n * &lt;p>\r\n * Input: 10\r\n * Output: false\r\n * Explanation: Reads 01 from right to left. Therefore it is not a palindrome.\r\n * Follow up:\r\n * &lt;p>\r\n * Coud you solve it without converting the integer to a string?\r\n *\r\n * @author jason\r\n * @date 18/9/1.\r\n */</span>\r\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">PalindromeNumber</span> <span class=\"token punctuation\">{</span>\r\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">boolean</span> <span class=\"token function\">isPalindrome</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> x<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>x <span class=\"token operator\">&lt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n            <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token punctuation\">}</span>\r\n\r\n        <span class=\"token keyword\">int</span> div <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>x <span class=\"token operator\">/</span> div <span class=\"token operator\">>=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n            div <span class=\"token operator\">*=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token punctuation\">}</span>\r\n\r\n        <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>x <span class=\"token operator\">!=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n            <span class=\"token keyword\">int</span> left <span class=\"token operator\">=</span> x <span class=\"token operator\">/</span> div<span class=\"token punctuation\">;</span>\r\n            <span class=\"token keyword\">int</span> right <span class=\"token operator\">=</span> x <span class=\"token operator\">%</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span>\r\n\r\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>left <span class=\"token operator\">!=</span> right<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n                <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\r\n            <span class=\"token punctuation\">}</span>\r\n\r\n            x <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>x <span class=\"token operator\">%</span> div<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span>\r\n            div <span class=\"token operator\">/=</span> <span class=\"token number\">100</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token punctuation\">}</span>\r\n\r\n        <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token punctuation\">}</span>\r\n\r\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\r\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">PalindromeNumber</span><span class=\"token punctuation\">.</span><span class=\"token function\">isPalindrome</span><span class=\"token punctuation\">(</span><span class=\"token number\">121</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">PalindromeNumber</span><span class=\"token punctuation\">.</span><span class=\"token function\">isPalindrome</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">121</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">PalindromeNumber</span><span class=\"token punctuation\">.</span><span class=\"token function\">isPalindrome</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token punctuation\">}</span>\r\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2 id=\"review\" style=\"position:relative;\"><a href=\"#review\" aria-label=\"review permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Review</h2>\n<h3 id=\"using-command-pattern-in-java\" style=\"position:relative;\"><a href=\"#using-command-pattern-in-java\" aria-label=\"using command pattern in java permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Using Command Pattern in Java</h3>\n<blockquote>\n<p><a href=\"https://medium.com/@p.osinaga/using-command-pattern-in-java-6fd6bb36fd42\">https://medium.com/@p.osinaga/using-command-pattern-in-java-6fd6bb36fd42</a></p>\n</blockquote>\n<p>命令模式属于行为型模式，将请求封装成对象，以便使用不同的请求、队列或者日志来参数化其它对象。命令模式也可以支持撤销操作。</p>\n<p><img src=\"https://raw.githubusercontent.com/yangjinlong86/nocoder/master/data/images/design-pattern/command.jpeg\" alt=\"command\"></p>\n<p>文中作者用 从 AppleStore 中选购商品为例，演示了命令模式在java中的使用，<code class=\"language-text\">Store</code>类来记录购买哪些<code class=\"language-text\">Product</code>和然后执行<code class=\"language-text\">BuyProduct</code>和<code class=\"language-text\">SellProduct</code>命令，相当于把多个命令记录下来，然后顺序执行这些命令，这些命令可以组合、复用。</p>\n<p>PS: <code class=\"language-text\">BuyProduct</code>类里居然调用的<code class=\"language-text\">product</code>的<code class=\"language-text\">sell()</code>方法，这个老外太TM不认真了。</p>\n<h2 id=\"tip\" style=\"position:relative;\"><a href=\"#tip\" aria-label=\"tip permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Tip</h2>\n<p>两个小坑</p>\n<ol>\n<li>一个 vue 项目 执行<code class=\"language-text\">npm run dev</code> 提示有几个 modules 和 dependencies 找不到，之前在 windows 下build run 都是没问题的，换了 ubuntu 之后，就运行不起来，检查后发现这几个路径的大小没写对，在 linux 环境下引入 module 和 dependencies 是要区分大小写的。当然这也是开发人员书写不规范问题，引入文件应当与实际文件大小写保持一致才是。</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">ERROR  Failed to compile with 5 errors\r\n\r\nThese dependencies were not found:\r\n\r\n* @/components/login/Login.css in ./src/router/index.js\r\n* @/components/library/LibraryMaintain/LibraryMaintain.vue in ./src/router/index.js\r\n* @/components/webmanagement/details/Details.vue in ./src/router/index.js\r\n\r\nTo install them, you can run: npm install --save @/components/login/Login.css @/components/library/LibraryMaintain/LibraryMaintain.vue @/components/webmanagement/details/Details.vue\r\n\r\n\r\nThese relative modules were not found:\r\n\r\n* ../../common/infoWindowLight.js in ./~/_babel-loader@7.1.5@babel-loader/lib!./~/_vue-loader@13.7.3@vue-loader/lib/selector.js?type=script&amp;index=0!./src/components/common/scatterMap.vue\r\n* ../../common/infoWindow.js in ./~/_babel-loader@7.1.5@babel-loader/lib!./~/_vue-loader@13.7.3@vue-loader/lib/selector.js?type=script&amp;index=0!./src/components/common/scatterMap.vue</code></pre></div>\n<p>2.为一个项目配置了nginx转发，80端口转发到8075端口，直接用ip访问，上传图片大小超过1M就会抛 <code class=\"language-text\">413 request entity too large</code>，修改nginx配置文件 <code class=\"language-text\">client_max_body_size=20M</code>，默认配置大小为1M，超过就会抛上述异常。</p>\n<h2 id=\"share\" style=\"position:relative;\"><a href=\"#share\" aria-label=\"share permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Share</h2>\n<h3 id=\"command-pattern\" style=\"position:relative;\"><a href=\"#command-pattern\" aria-label=\"command pattern permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Command Pattern</h3>\n<p>命令模式，我觉得还是比较好理解的，《大话设计模式》里作者用买烤羊肉串和《Head First 设计模式》的餐厅点餐的例子、遥控器的例子，足以让我们很好的理解这个模式的使用了。例如餐厅里，顾客（Client）创建一个订单，订单里的菜品就是由一个个的命令（Command）组成，交给服务员（Invoker），将订单拿走交给厨师（Receiver），厨师按菜单制做菜品，相当于顺序执行命令。项目中，我们使用Apache Chain，结合责任链和命令模式，来处理队列请求，我们老大很喜欢用这个Chain，放在下次arts的share来写一下Apache Chain以及责任链模式。</p>","tableOfContents":"<ul>\n<li>\n<p><a href=\"#algorithm\">Algorithm</a></p>\n<ul>\n<li><a href=\"#palindrome-number\">Palindrome Number</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#review\">Review</a></p>\n<ul>\n<li><a href=\"#using-command-pattern-in-java\">Using Command Pattern in Java</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#tip\">Tip</a></p>\n</li>\n<li>\n<p><a href=\"#share\">Share</a></p>\n<ul>\n<li><a href=\"#command-pattern\">Command Pattern</a></li>\n</ul>\n</li>\n</ul>","frontmatter":{"title":"ARTS 第9周：回文数算法、命令模式解析、Vue与Nginx配置技巧","tags":["coding","arts"],"description":"本周ARTS包含LeetCode回文数算法解析、Java命令模式应用与实例分析、以及Vue项目Linux环境部署和Nginx配置优化技巧。","date":"2018-09-01"}}},"pageContext":{"slug":"/arts-09","previous":{"fields":{"slug":"/arts-08"},"frontmatter":{"title":"ARTS 第8周：字符串转整数算法、Docker网络模式、观察者模式实践","tags":["coding","arts"],"slug":"/arts-08"}},"next":{"fields":{"slug":"/arts-10"},"frontmatter":{"title":"ARTS 第10周：罗马数字转整数、Apache Commons Chain、Web存储与责任链模式","tags":["coding","arts"],"slug":"/arts-10"}}}},"staticQueryHashes":["2052298874"],"slicesMap":{}}