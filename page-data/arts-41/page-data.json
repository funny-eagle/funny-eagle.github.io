{"componentChunkName":"component---src-templates-blog-post-js","path":"/arts-41/","result":{"data":{"site":{"siteMetadata":{"title":"Funny Eagle","author":"Jason Yang"}},"markdownRemark":{"id":"9ef8137d-cea6-555e-8d6f-567183c919bd","excerpt":"Algorithm: 144. Binary Tree Preorder Traversal Review: Why you should use GatsbyJS to build static …","html":"<blockquote>\n<ul>\n<li>Algorithm: 144. Binary Tree Preorder Traversal</li>\n<li>Review: Why you should use GatsbyJS to build static sites</li>\n<li>Tip: TBD</li>\n<li>Share: 漂在旧金山</li>\n</ul>\n</blockquote>\n<h2 id=\"algorithm\" style=\"position:relative;\"><a href=\"#algorithm\" aria-label=\"algorithm permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Algorithm</h2>\n<h3 id=\"144binary-tree-preorder-traversal\" style=\"position:relative;\"><a href=\"#144binary-tree-preorder-traversal\" aria-label=\"144binary tree preorder traversal permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>144.Binary Tree Preorder Traversal</h3>\n<p>Given a binary tree, return the <em>preorder</em> traversal of its nodes’ values.</p>\n<p><strong>Example:</strong></p>\n<pre><code>Input: [1,null,2,3]\n   1\n    \\\n     2\n    /\n   3\n\nOutput: [1,2,3]\n</code></pre>\n<p><strong>Follow up:</strong> Recursive solution is trivial, could you do it iteratively?</p>\n<p><strong>Solution</strong></p>\n<pre><code class=\"language-java\">package org.nocoder.leetcode.solution;\n\nimport org.nocoder.leetcode.solution.common.TreeNode;\n\nimport java.util.ArrayList;\nimport java.util.List;\nimport java.util.Stack;\n\n/**\n * 144. Binary Tree Preorder Traversal\n * &#x3C;p>\n * https://leetcode.com/problems/binary-tree-preorder-traversal/\n *\n * @author jason\n * @date 2019/6/18.\n */\npublic class BinaryTreePreorderTraversal {\n    public static List&#x3C;Integer> preorderTraversal(TreeNode root) {\n        List&#x3C;Integer> list = new ArrayList&#x3C;>();\n        if (root == null) {\n            return list;\n        }\n\n        Stack&#x3C;TreeNode> stack = new Stack&#x3C;>();\n        stack.push(root);\n\n        while (!stack.isEmpty()) {\n            TreeNode node = stack.pop();\n            list.add(node.val);\n            if (node.right != null) {\n                stack.push(node.right);\n            }\n\n            if (node.left != null) {\n                stack.push(node.left);\n            }\n        }\n\n        return list;\n    }\n\n    public static TreeNode buildTreeNode() {\n        TreeNode root = new TreeNode(3);\n        root.left = new TreeNode(2);\n        root.right = new TreeNode(4);\n        root.right.left = new TreeNode(1);\n        return root;\n    }\n\n    public static void main(String[] args) {\n        List&#x3C;Integer> list = preorderTraversal(buildTreeNode());\n        System.out.println(list);\n    }\n}\n</code></pre>\n<h2 id=\"review\" style=\"position:relative;\"><a href=\"#review\" aria-label=\"review permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Review</h2>\n<h3 id=\"why-you-should-use-gatsbyjs-to-build-static-sites\" style=\"position:relative;\"><a href=\"#why-you-should-use-gatsbyjs-to-build-static-sites\" aria-label=\"why you should use gatsbyjs to build static sites permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://medium.com/free-code-camp/why-you-should-use-gatsbyjs-to-build-static-sites-4f90eb6d1a7b\">Why you should use GatsbyJS to build static sites</a></h3>\n<p>Gatsby 是一个很棒的静态网站生成框架，基于 react.js，并且使用GraphQL，可以快速根据markdown文件生成静态网站，速度很快，开发体验非常棒，当然学习 gatsby 最直接的地方还是官网，<a href=\"https://www.gatsbyjs.org/tutorial/\">官网教程</a>写的很详细，跟着一步一步做就行，我自己的博客<a href=\"http://nocoder.org\">Nocoder</a>已经从springboot版本改成了gatsby静态网站了，确实，从开发、部署到访问体验都非常好。</p>\n<p>medium 上的这篇 why you should use gatsbyJS to build static sites 讲到了 gatsby 的简介、特征、插件、样式以及gatsby内部的工作流程，是快速了解 gatsby 的一篇不错的文章。</p>\n<h2 id=\"tip\" style=\"position:relative;\"><a href=\"#tip\" aria-label=\"tip permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Tip</h2>\n<p>TBD</p>\n<h2 id=\"share\" style=\"position:relative;\"><a href=\"#share\" aria-label=\"share permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Share</h2>\n<p>漂在旧金山 ：<a href=\"http://www.ruanyifeng.com/blog/2018/08/san-francisco.html\">http://www.ruanyifeng.com/blog/2018/08/san-francisco.html</a></p>\n<blockquote>\n<p>旧金山是美国房价最高的城市，因为它就在硅谷旁边，有大量的科技公司。</p>\n<p>每年，无数年轻人涌向那里，寻找自己的梦想，结果形成了一个类似”北漂”的特殊群体。</p>\n</blockquote>\n<p>这并非一篇很励志的文章，只是可以了解一下他们的环境，文中的哥们儿最终放弃了编程。而我认为，可以做自己喜欢的事情，是一种莫大的幸福。</p>","tableOfContents":"<ul>\n<li>\n<p><a href=\"#algorithm\">Algorithm</a></p>\n<ul>\n<li><a href=\"#144binary-tree-preorder-traversal\">144.Binary Tree Preorder Traversal</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#review\">Review</a></p>\n<ul>\n<li><a href=\"#why-you-should-use-gatsbyjs-to-build-static-sites\">Why you should use GatsbyJS to build static sites</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#tip\">Tip</a></p>\n</li>\n<li>\n<p><a href=\"#share\">Share</a></p>\n</li>\n</ul>","frontmatter":{"title":"ARTS 第41周","tags":["coding","arts"],"description":"Algorithm, Reiview, Tip and Share","date":"2019-06-22"}}},"pageContext":{"slug":"/arts-41/","previous":{"fields":{"slug":"/arts-40/"},"frontmatter":{"title":"ARTS 第40周","tags":["coding","arts"],"slug":""}},"next":{"fields":{"slug":"/bye-june/"},"frontmatter":{"title":"你好 七月！","tags":["life"],"slug":""}}}},"staticQueryHashes":["2052298874"],"slicesMap":{}}