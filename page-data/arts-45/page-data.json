{"componentChunkName":"component---src-templates-blog-post-js","path":"/arts-45/","result":{"data":{"site":{"siteMetadata":{"title":"Funny Eagle","author":"Jason Yang"}},"markdownRemark":{"id":"cc29ff7a-75fe-5364-99ac-c5a0909e6a76","excerpt":"Algorithm Review React Components Components 像方法一样返回HTML元素。 Components 是独立的、可重用的。它们的作用与js function …","html":"<h2 id=\"algorithm\" style=\"position:relative;\"><a href=\"#algorithm\" aria-label=\"algorithm permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Algorithm</h2>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">package</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>nocoder<span class=\"token punctuation\">.</span>codeabbey</span><span class=\"token punctuation\">;</span>\r\n\r\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Scanner</span></span><span class=\"token punctuation\">;</span>\r\n\r\n<span class=\"token comment\">/**\r\n * https://www.codeabbey.com/index/task_view/sums-in-loop\r\n */</span>\r\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">SumsInLoop</span> <span class=\"token punctuation\">{</span>\r\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n        <span class=\"token class-name\">Scanner</span> scanner <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Scanner</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>in<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token keyword\">int</span> total <span class=\"token operator\">=</span> scanner<span class=\"token punctuation\">.</span><span class=\"token function\">nextInt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        scanner<span class=\"token punctuation\">.</span><span class=\"token function\">nextLine</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n        <span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> arr <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span>total<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> total<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n            arr<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> scanner<span class=\"token punctuation\">.</span><span class=\"token function\">nextLine</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token punctuation\">}</span>\r\n\r\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> arr<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n            <span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> nums <span class=\"token operator\">=</span> arr<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token string\">\" \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n            <span class=\"token keyword\">int</span> sum <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\r\n            <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> j <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;</span> nums<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n                <span class=\"token keyword\">int</span> intValue <span class=\"token operator\">=</span> <span class=\"token class-name\">Integer</span><span class=\"token punctuation\">.</span><span class=\"token function\">parseInt</span><span class=\"token punctuation\">(</span>nums<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n                sum <span class=\"token operator\">+=</span> intValue<span class=\"token punctuation\">;</span>\r\n            <span class=\"token punctuation\">}</span>\r\n            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span>sum <span class=\"token operator\">+</span> <span class=\"token string\">\" \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token punctuation\">}</span>\r\n\r\n        scanner<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token punctuation\">}</span>\r\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2 id=\"review\" style=\"position:relative;\"><a href=\"#review\" aria-label=\"review permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Review</h2>\n<p><strong>React Components</strong></p>\n<p>Components 像方法一样返回HTML元素。</p>\n<p>Components 是独立的、可重用的。它们的作用与js function 类似，但是独立工作并返回 HTML。</p>\n<p>Components 有两种类型，Class Components 和 Function Compoments。</p>\n<blockquote>\n<p>在较老的React中，你可能会发现主要使用的是Class组建。现在建议使用Function组件和Hooks，它们是在React16.8中添加的。</p>\n</blockquote>\n<p>React组件的名称必须以大写字母开头。</p>\n<h3 id=\"class-component\" style=\"position:relative;\"><a href=\"#class-component\" aria-label=\"class component permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Class Component</h3>\n<p>类组件必须包含extends React.Component 语句。这个语句创建一个React.Component的继承者，可以访问React.Component的方法。</p>\n<p>组件还需要一个render()方法，该方法返回HTML。</p>\n<p>创建一个名为Car的类组件：</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Car</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\r\n\r\n    <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\r\n        <span class=\"token keyword\">return</span> <span class=\"token operator\">&lt;</span>h2<span class=\"token operator\">></span>Hi<span class=\"token punctuation\">,</span> <span class=\"token constant\">I</span> am a Car<span class=\"token operator\">!</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>h2<span class=\"token operator\">></span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token punctuation\">}</span>\r\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3 id=\"function-component\" style=\"position:relative;\"><a href=\"#function-component\" aria-label=\"function component permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Function Component</h3>\n<p>Function 组件也返回HTML，它的行为与类组件非常类似，但是Function组件可以用更少的代码实现，更容易理解。</p>\n<p>创建一个名为Car的Function组件</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">Car</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\r\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">return</span> <span class=\"token operator\">&lt;</span>h2<span class=\"token operator\">></span>Hi<span class=\"token punctuation\">,</span> <span class=\"token constant\">I</span> am a Car<span class=\"token operator\">!</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>h2<span class=\"token operator\">></span><span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3 id=\"rendering-a-component\" style=\"position:relative;\"><a href=\"#rendering-a-component\" aria-label=\"rendering a component permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Rendering a Component</h3>\n<p>现在有一个名为Car的组件，返回一个<code class=\"language-text\">&lt;h2></code>元素。</p>\n<p>在程序中使用这个组件爱你，语法类似HTML:<code class=\"language-text\">&lt;Car/></code></p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">ReactDOM<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&lt;</span>Car<span class=\"token operator\">/</span><span class=\"token operator\">></span><span class=\"token punctuation\">,</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'root'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3 id=\"props\" style=\"position:relative;\"><a href=\"#props\" aria-label=\"props permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Props</h3>\n<p>组件可以作为<code class=\"language-text\">props</code>传递，代表properties。</p>\n<p>Props 类似于方法参数，可以将它们作为属性传递到组件中。</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">Car</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\r\n    <span class=\"token keyword\">return</span> <span class=\"token operator\">&lt;</span>h2<span class=\"token operator\">></span><span class=\"token constant\">I</span> am a <span class=\"token punctuation\">{</span>props<span class=\"token punctuation\">.</span>color<span class=\"token punctuation\">}</span> Car<span class=\"token operator\">!</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>h2<span class=\"token operator\">></span>\r\n<span class=\"token punctuation\">}</span>\r\n\r\nReactDOM<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&lt;</span>Car color<span class=\"token operator\">=</span><span class=\"token string\">\"red\"</span><span class=\"token operator\">/</span><span class=\"token operator\">></span><span class=\"token punctuation\">,</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'root'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre></div>\n<h3 id=\"components-in-components\" style=\"position:relative;\"><a href=\"#components-in-components\" aria-label=\"components in components permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Components in Components</h3>\n<p>我们可以引用其他组件中的组件</p>\n<p>使用Garage组件中的Car组件</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">Car</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\r\n    <span class=\"token keyword\">return</span> <span class=\"token operator\">&lt;</span>h2<span class=\"token operator\">></span><span class=\"token constant\">I</span> am a Car<span class=\"token operator\">!</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>h2<span class=\"token operator\">></span>\r\n<span class=\"token punctuation\">}</span>\r\n\r\n<span class=\"token comment\">// 车库</span>\r\n<span class=\"token keyword\">function</span> <span class=\"token function\">Garage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\r\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\r\n        <span class=\"token operator\">&lt;</span><span class=\"token operator\">></span>\r\n            <span class=\"token operator\">&lt;</span>h1<span class=\"token operator\">></span>Who lives <span class=\"token keyword\">in</span> my Garage<span class=\"token operator\">?</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>h1<span class=\"token operator\">></span>\r\n            <span class=\"token operator\">&lt;</span>Car <span class=\"token operator\">/</span><span class=\"token operator\">></span>\r\n        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span><span class=\"token operator\">></span>\r\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span>\r\n\r\nReactDOM<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&lt;</span>Garage<span class=\"token operator\">/</span><span class=\"token operator\">></span><span class=\"token punctuation\">,</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'root'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3 id=\"components-in-files\" style=\"position:relative;\"><a href=\"#components-in-files\" aria-label=\"components in files permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Components in Files</h3>\n<p>React 都是关于重用代码，并且建议将组件拆分到单独的文件中。</p>\n<p>为此，创建一个扩展名为js的新文件，并将代码放进去。</p>\n<p>创建一个Car.js文件</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">Car</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\r\n    <span class=\"token keyword\">return</span> <span class=\"token operator\">&lt;</span>h2<span class=\"token operator\">></span>Hi <span class=\"token punctuation\">,</span> <span class=\"token constant\">I</span> am a Car<span class=\"token operator\">!</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>h2<span class=\"token operator\">></span>\r\n<span class=\"token punctuation\">}</span>\r\n\r\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> Car<span class=\"token punctuation\">;</span></code></pre></div>\n<p>为了能够使用Car组件，必须在程序import这个文件。</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token keyword\">import</span> ReactDOM <span class=\"token keyword\">from</span> <span class=\"token string\">'react-dom'</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token keyword\">import</span> Car <span class=\"token keyword\">from</span> <span class=\"token string\">'./Car.js'</span><span class=\"token punctuation\">;</span>\r\n\r\nReactDOM<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&lt;</span>Car<span class=\"token operator\">/</span><span class=\"token operator\">></span><span class=\"token punctuation\">,</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'root'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h2 id=\"tip\" style=\"position:relative;\"><a href=\"#tip\" aria-label=\"tip permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Tip</h2>\n<p>默认情况下，用<code class=\"language-text\">sudo dnf update</code> 或 <code class=\"language-text\">sudo yum update</code>后，会将Linux内核一起更新，过一段时间，grub2 就会生成好几个启动项，如果更新内核后使用系统没有问题，就可以把旧的内核删除。</p>\n<p>我遇到的问题是，每次更新内核后，都需要重新安装显卡驱动，不然进不了GUI，这个很烦人，浪费时间，搞得我每次都有冲动重装系统。今天更新到5.15.12，又进不了桌面了，还好grub2可以让我选择从5.15.11启动。</p>\n<blockquote>\n<p>TMD，装win算了，至少没这么多麻烦…然后我就去搜win10镜像了…\r\n行了吧你，Windows用不了几天你必然折腾回Linux，谁叫你爱折腾呢…\r\n好吧，还是不要逃避问题…</p>\n</blockquote>\n<p>冷静了一会儿，网上搜索试验了一番，把不用的内核都删除，然后dnf更新时排除内核，即不升级内核。</p>\n<p>使用<code class=\"language-text\">uname -r</code> 查看当前使用的内核</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token punctuation\">[</span>yangjl@fedora ~<span class=\"token punctuation\">]</span>$ <span class=\"token function\">uname</span> <span class=\"token parameter variable\">-r</span>\r\n<span class=\"token number\">5.15</span>.11-200.fc35.x86_64</code></pre></div>\n<p>使用<code class=\"language-text\">rpm -aq|grep kernel</code>查看已经安装的内核</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token punctuation\">[</span>yangjl@fedora ~<span class=\"token punctuation\">]</span>$ <span class=\"token function\">sudo</span> <span class=\"token function\">rpm</span> <span class=\"token parameter variable\">-aq</span> <span class=\"token operator\">|</span> <span class=\"token function\">grep</span> kernel\r\nlibreport-plugin-kerneloops-2.15.2-6.fc35.x86_64\r\nabrt-addon-kerneloops-2.14.6-9.fc35.x86_64\r\nkernel-headers-5.15.4-200.fc35.x86_64\r\nkernel-srpm-macros-1.0-6.fc35.noarch\r\nkernel-core-5.15.11-200.fc35.x86_64\r\nkernel-modules-5.15.11-200.fc35.x86_64\r\nkernel-5.15.11-200.fc35.x86_64\r\nkernel-modules-extra-5.15.11-200.fc35.x86_64\r\nkernel-devel-5.15.11-200.fc35.x86_64\r\nkernel-devel-5.15.12-200.fc35.x86_64</code></pre></div>\n<p>保留当前使用的内核，删除不用的内核 <code class=\"language-text\">sudo dnf remove -y kernel-core-5.15.12*</code></p>\n<p><code class=\"language-text\">dnf</code> 和 <code class=\"language-text\">yum</code> 更新时可以使用exclude命令排除你不希望更新的package，例如更新除了firefox以外的所有package，可以这样</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token function\">sudo</span> dnf update <span class=\"token parameter variable\">--exclude</span><span class=\"token operator\">=</span>firefox\r\n<span class=\"token function\">sudo</span> yum update <span class=\"token parameter variable\">--exclude</span><span class=\"token operator\">=</span>firefox</code></pre></div>\n<p>再比如更新除了内核以外的所有package：</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token function\">sudo</span> dnf update <span class=\"token parameter variable\">--exclude</span><span class=\"token operator\">=</span>kernel*\r\n<span class=\"token function\">sudo</span> yum update <span class=\"token parameter variable\">--exclude</span><span class=\"token operator\">=</span>kernel*</code></pre></div>\n<p>如果觉得麻烦，在fedora下，可以通过修改<code class=\"language-text\">/etc/dnf/dnf.conf</code>，在<code class=\"language-text\">[main]</code>下添加<code class=\"language-text\">exclude=kernel*</code>,这样在使用<code class=\"language-text\">dnf update</code>和<code class=\"language-text\">yum update</code>时会排除kernel package 的更新。</p>\n<p>/etc/dnf/dnf.conf</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token punctuation\">[</span>main<span class=\"token punctuation\">]</span>\r\n<span class=\"token assign-left variable\">gpgcheck</span><span class=\"token operator\">=</span><span class=\"token number\">1</span>\r\n<span class=\"token assign-left variable\">installonly_limit</span><span class=\"token operator\">=</span><span class=\"token number\">3</span>\r\n<span class=\"token assign-left variable\">clean_requirements_on_remove</span><span class=\"token operator\">=</span>True\r\n<span class=\"token assign-left variable\">best</span><span class=\"token operator\">=</span>False\r\n<span class=\"token assign-left variable\">skip_if_unavailable</span><span class=\"token operator\">=</span>True\r\n<span class=\"token assign-left variable\">exclude</span><span class=\"token operator\">=</span>kernel*</code></pre></div>\n<p>参考文献</p>\n<p><a href=\"https://chewett.co.uk/blog/800/exclude-fedora-packages-updating-dnf-yum/\">https://chewett.co.uk/blog/800/exclude-fedora-packages-updating-dnf-yum/</a>\r\n<a href=\"https://laplacence.github.io/2017/02/27/Fedora_delete_redundancy_kernel/\">https://laplacence.github.io/2017/02/27/Fedora_delete_redundancy_kernel/</a></p>\n<h2 id=\"share\" style=\"position:relative;\"><a href=\"#share\" aria-label=\"share permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Share</h2>\n<p>GO编程模式 ： 泛型编程 <a href=\"https://coolshell.cn/articles/21615.html\">https://coolshell.cn/articles/21615.html</a></p>","tableOfContents":"<ul>\n<li>\n<p><a href=\"#algorithm\">Algorithm</a></p>\n</li>\n<li>\n<p><a href=\"#review\">Review</a></p>\n<ul>\n<li><a href=\"#class-component\">Class Component</a></li>\n<li><a href=\"#function-component\">Function Component</a></li>\n<li><a href=\"#rendering-a-component\">Rendering a Component</a></li>\n<li><a href=\"#props\">Props</a></li>\n<li><a href=\"#components-in-components\">Components in Components</a></li>\n<li><a href=\"#components-in-files\">Components in Files</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#tip\">Tip</a></p>\n</li>\n<li>\n<p><a href=\"#share\">Share</a></p>\n</li>\n</ul>","frontmatter":{"title":"ARTS 第45周：求和算法、React组件、系统内核更新与Go泛型编程","tags":["coding","arts"],"description":"本周ARTS包含CodeAbbey求和算法解析、React组件详解、Fedora系统内核更新与清理方法，以及Go泛型编程模式分享。","date":"2021-09-08"}}},"pageContext":{"slug":"/arts-45","previous":{"fields":{"slug":"/arts-44"},"frontmatter":{"title":"ARTS 第44周：最后一个单词长度算法、Java字节码入门、剪贴板工具与持续练习","tags":["coding","arts"],"slug":"/arts-44"}},"next":{"fields":{"slug":"/basic-of-network"},"frontmatter":{"title":"必须要掌握的网络通信原理","tags":["coding"],"slug":"/basic-of-network"}}}},"staticQueryHashes":["2052298874"],"slicesMap":{}}