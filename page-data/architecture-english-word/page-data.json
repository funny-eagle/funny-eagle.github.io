{"componentChunkName":"component---src-templates-blog-post-js","path":"/architecture-english-word/","result":{"data":{"site":{"siteMetadata":{"title":"Funny Eagle","author":"Jason Yang"}},"markdownRemark":{"id":"38215512-8df9-5311-b289-8ea32c74f8c5","excerpt":"专业英语词汇汇总： architect 架构，架构师 architecture 架构 analysis 分析 architecture 架构 design 设计 development 开发 tes…","html":"<p>专业英语词汇汇总：</p>\n<ul>\n<li>architect 架构，架构师</li>\n<li>architecture 架构</li>\n<li>analysis 分析</li>\n<li>architecture 架构</li>\n<li>design 设计</li>\n<li>development 开发</li>\n<li>testing 测试</li>\n<li>system analysis 系统分析</li>\n<li>system architecture 系统架构</li>\n<li>system design 系统设计</li>\n<li>system development 系统开发</li>\n<li>system testing 系统测试</li>\n<li>system design strategies 系统设计策略</li>\n<li>devide-and-conquer strategy 分而治之策略</li>\n<li>stepwise refinement strategy 逐步求精策略</li>\n<li>top-down strategy 自顶向下策略</li>\n<li>bottom-up strategy 自底向上策略</li>\n<li>iterative and incremental approach 迭代增量方法</li>\n<li>system design methods 系统设计方法</li>\n<li>function-oriented design 面向功能的设计方法</li>\n<li>structured design (SD) 结构化设计方法</li>\n<li>data structure-centered design 数据结构为中心的设计方法</li>\n<li>object-oriented design (OOD) 面向对象的设计方法</li>\n<li>component-based software design (CBSD) 基于组件的软件设计方法</li>\n<li>component-based design (CBD) 基于组件的设计方法</li>\n<li>architecture-based software design (ABSD) 基于架构的软件设计方法</li>\n<li>aspect-oriented design 面向切面的设计方法</li>\n<li>service-oriented design 面向服务的设计方法</li>\n<li>key issues in software design 软件设计中的关键问题</li>\n<li>function concerns 功能关注点</li>\n<li>quality concerns 质量关注点</li>\n<li>concurrency 并发性</li>\n<li>control and handling of events 事件的控制和处理</li>\n<li>data persistence 数据持久化</li>\n<li>distribution of components 组件分布，组件分配</li>\n<li>error and exception handling and fault tolerance 错误和异常的处理以及容错</li>\n<li>interaction and presentation 交互和展示</li>\n<li>safty and security 安全和安全性</li>\n<li>software structure and architecture 软件结构和体系结构</li>\n<li>architecture 体系结构，架构</li>\n<li>software design at different levels of abstraction 不同抽象层次的软件设计</li>\n<li>architectural design 结构设计，架构设计</li>\n<li>architectural styles 架构风格</li>\n<li>detailed design 详细设计</li>\n<li>design patterns 设计模式</li>\n<li>architectural structures and viewpoints 架构结构和视角</li>\n<li>viewpoint 视角</li>\n<li>different high-level facets of a software design 软件设计中不同的高层级方面</li>\n<li>view 视图</li>\n<li>logical view 逻辑视图</li>\n<li>process view 过程视图</li>\n<li>physical view 物理视图</li>\n<li>development view 开发视图</li>\n<li>behavioral view 行为视图</li>\n<li>functional view 功能视图</li>\n<li>structural view 结构视图</li>\n<li>data modeling view 数据模型视图</li>\n<li>architectural styles 架构风格</li>\n<li>providing the software’s high-level organization 提供软件的高层级组织</li>\n<li>Dataflow Systems 数据流风格</li>\n<li>Batch Sequential 批处理</li>\n<li>Pipes and Filters 管道过滤器</li>\n<li>Call-and-Return Systems 调用返回风格</li>\n<li>Main Program and Subroutine 主程序子程序</li>\n<li>Object-Oriented Systems 面向对象的系统</li>\n<li>Hierarchical Layers 层次结构</li>\n<li>Independent Components 独立构建风格</li>\n<li>Communicating Processes 进程通信</li>\n<li>Event Systems 事件驱动</li>\n<li>Virtual Machines 虚拟机风格</li>\n<li>Interpreters 解释器</li>\n<li>Rule-Based Systems 基于规则的系统</li>\n<li>Repositories 仓库风格</li>\n<li>(Data-Centered Systems) 数据共享风格</li>\n<li>Databases 数据库</li>\n<li>Blackboards 黑板</li>\n<li>Hypertext Systems 超文本系统</li>\n<li>a common solution 常见的解决方案，普遍的解决方案</li>\n<li>a common problem 常见的问题，普遍的问题</li>\n<li>a given context 给定的上下文，给定的情境，给定的情况</li>\n<li>design patterns 设计模式</li>\n<li>a common solution to a common problem in a given context 在给定的上下文下，对于常见问题的普遍解决方案</li>\n<li>software’s organization details at a lower level 较低层级的软件组织细节</li>\n<li>creational patterns 创建型模式</li>\n<li>structural patterns 结构性模式</li>\n<li>behavioral patterns 行为型模式</li>\n<li>creational patterns 创建型模式</li>\n<li>Abstract Factory 抽象工厂</li>\n<li>Builder 建造者</li>\n<li>Factory Method 工厂方法</li>\n<li>Prototype 原型</li>\n<li>Singleton 单例</li>\n<li>structural patterns 结构性模式</li>\n<li>Adapter 适配器</li>\n<li>Bridge 桥接</li>\n<li>Composite 组合</li>\n<li>Decorator 装饰</li>\n<li>Facade 外观</li>\n<li>Flyweight 享元</li>\n<li>Proxy 代理</li>\n<li>bahavioral patterns 行为型模式</li>\n<li>Chain of Resposibility 责任链</li>\n<li>Command 命令</li>\n<li>Interpreter 解释器</li>\n<li>Iterator 迭代器</li>\n<li>Mediator 中介者</li>\n<li>Memento 备忘录</li>\n<li>Observer 观察者</li>\n<li>State 状态</li>\n<li>Strategy 策略</li>\n<li>Template Method 模板方法</li>\n<li>Visitor 访问者</li>\n<li>architecture design decisions 架构设计决策</li>\n<li>architectural decisions 架构决策</li>\n<li>system quality attributes 系统质量属性</li>\n<li>architecture design strategies 架构设计策略</li>\n<li>the impact on quality attributes 对质量属性产生的影响，与质量属性的冲突，对质量属性的冲击</li>\n<li>tradeoffs among competing quality attributes 相互矛盾的质量属性间的权衡</li>\n<li>quantity attributes 质量属性</li>\n<li>performance 性能</li>\n<li>availability 可用性</li>\n<li>security 安全性</li>\n<li>modifiablity 可修改性</li>\n<li>maintainability 可维护性</li>\n<li>scalability 可扩展性</li>\n<li>portability 可移植性</li>\n<li>functionality 功能性</li>\n<li>reliability 可靠性</li>\n<li>faulttolerance 容错</li>\n<li>robustness 健壮性</li>\n<li>changeability 可变性</li>\n<li>testability 可测试性</li>\n<li>interoperability 互操作性</li>\n<li>software design artifacts 软件设计制品</li>\n<li>software design notations 软件设计记录</li>\n<li>static view 静态视图</li>\n<li>structural view 结构视图</li>\n<li>describe structural organization 描述结构的组织</li>\n<li>dynamic view 动态视图</li>\n<li>behavioral view 行为视图</li>\n<li>represent software behavior 展示软件行为</li>\n<li>Software Design Notations</li>\n<li>structural descriptions 结构描述</li>\n<li>static view 静态视图</li>\n<li>structural view 结构视图</li>\n<li>architecture description language, ADL 架构描述语言</li>\n<li>class and object diagrams 类图和对象图</li>\n<li>component diagrams 组件图</li>\n<li>class responsibility collaborator cards, CRCs 类职责协作卡</li>\n<li>deployment diagrams 部署图</li>\n<li>entity-relationship diagrams, ERDs 实体关系图，实体联系图</li>\n<li>interface description languages, IDLs 接口描述语言</li>\n<li>structure charts, SCs 结构图</li>\n<li>Software Design Notations</li>\n<li>behavioral descriptions 行为描述</li>\n<li>dynamic view 动态视图</li>\n<li>behavioral view 行为试图</li>\n<li>activity diagrams 活动图</li>\n<li>communication diagrams 通信图</li>\n<li>data flow diagrams, DFDs 数据流图</li>\n<li>decision tables and diagrams 决策表和决策图，判定表和判定图</li>\n<li>flowcharts 流程图</li>\n<li>sequence diagrams 时序图</li>\n<li>state transition and state chart diagrams 状态转换和状态图</li>\n<li>formal specification languages 形式化描述语言</li>\n<li>pseudo codes 伪代码</li>\n<li>program design languages, PDLs 程序设计语言</li>\n<li>Software Engineering</li>\n<li>software engineering methods 软件工程方法</li>\n<li>heuristic methods 启发方法，启发式方法，探索方法，探索式方法</li>\n<li>structured analysis and design methods 结构化分析和设计方法</li>\n<li>data modeling methods 数据建模方法</li>\n<li>object-oriented analysis and design methods 面向对象的分析和设计方法</li>\n<li>formal methods 形式方法，形式化方法</li>\n<li>prototyping methods 原型方法</li>\n<li>agile methods 敏捷方法</li>\n<li>rapid software development methods, RAD 快速软件开发方法</li>\n<li>extreme programming, XP 极限编程</li>\n<li>scrum 敏捷开发</li>\n<li>feature-driven development, FDD 功能驱动开发</li>\n<li>Software Engineering</li>\n<li>software development life cycle, SDLC 软件开发生命周期</li>\n<li>classical 经典的</li>\n<li>traditional 传统的</li>\n<li>classical SDLC 经典软件开发生命周期</li>\n<li>traditional SDLC 传统软件开发生命周期</li>\n<li>big bang model 大爆炸模型</li>\n<li>waterfall model 瀑布模型</li>\n<li>incremental model 增量模型</li>\n<li>prototyping model 原型模型</li>\n<li>v-shaped model V 模型</li>\n<li>sequential 顺序的，连续的</li>\n<li>iterative 迭代的，重复的，反复的</li>\n<li>incremental 增量的，递增的</li>\n<li>rapid 快速的</li>\n<li>Software Engineering</li>\n<li>Prototyping Model 原型模型</li>\n<li>rapid throwaway prototyping 快速抛弃原型</li>\n<li>evolutionaly prototyping 进化原型</li>\n<li>incremental prototyping 增量原型</li>\n<li>extreme prototyping 极限原型</li>\n<li>Waterfall Model 瀑布模型</li>\n<li>classical waterfall model 经典瀑布模型</li>\n<li>iterative waterfall model 迭代瀑布模型</li>\n<li>spiral model 螺旋模型</li>\n<li>Incremental Model 增量模型</li>\n<li>staged delivery model 阶段交付模型</li>\n<li>parallel development model 并行开发模型</li>\n<li>unified process model 统一过程模型</li>\n<li>Software Engineering</li>\n<li>SDLC 软件开发生命周期</li>\n<li>Big Bang Model 大爆炸模型</li>\n<li>Waterfall Model 瀑布模型</li>\n<li>Fountain Model 喷泉模型</li>\n<li>V Model,V-Shaped Model V 模型</li>\n<li>W Model,W-Shaped Model W 模型</li>\n<li>Iterative Model 迭代模型</li>\n<li>Prototyping Model 原型模型</li>\n<li>Rapid Prototyping Model 快速原型模型</li>\n<li>Incremental Model 增量模型</li>\n<li>Spiral Model 螺旋模型</li>\n<li>Rapid Application Development Model，RAD Model 快速应用开发模型</li>\n<li>Unified Process Model 统一过程模型</li>\n<li>Rational Unified Process Model, RUP Model Rational 统一过程模型</li>\n<li>Agile Model 敏捷模型</li>\n<li>SCRUM Model 敏捷模型，SCRUM 模型，SCRUM 敏捷模型</li>\n<li>DevOps Model DevOps 模型</li>\n<li>Lean Model 精益模型</li>\n<li>Software Engineering</li>\n<li>software engineering 软件工程</li>\n<li>process 过程</li>\n<li>methods 方法</li>\n<li>tools 工具</li>\n<li>software engineering features 软件工程特性</li>\n<li>models 模型</li>\n<li>methods 方法</li>\n<li>tools 工具</li>\n<li>metrics 度量</li>\n<li>standards 标准</li>\n<li>software engineering management 软件工程管理</li>\n<li>initiation and scope definition 启动和范围定义</li>\n<li>software project planning 软件项目计划</li>\n<li>software project enactment 软件项目实施</li>\n<li>review and evaluation 回顾和评价</li>\n<li>closure 关闭，终止，结束</li>\n<li>software engineering measurement 软件工程度量，软件工程测量</li>\n<li>software engineering tools 软件工程工具</li>\n<li>Software Engineering</li>\n<li>software engineering methods 软件工程方法</li>\n<li>Heuristic methods 启发式方法</li>\n<li>structured methods 结构化方法</li>\n<li>data-oriented methods 面向数据的方法</li>\n<li>object-oriented methods 面向对象的方法</li>\n<li>domain-specific methods 领域特定方法</li>\n<li>Formal methods 形式化方法</li>\n<li>specification languages and notations 规范语言和符号</li>\n<li>program refinement and derivation 程序精炼和推导</li>\n<li>formal verification 形式验证，形式证明</li>\n<li>logical inference 逻辑推理</li>\n<li>Prototyping methods 原型方法</li>\n<li>prototyping style 原型设计风格</li>\n<li>prototyping target 原型设计目标</li>\n<li>prototyping evaluation techniques 原型评估技术</li>\n<li>Agile methods 敏捷方法</li>\n<li>rapid software development, RAD 快速应用开发</li>\n<li>extreme programming, XP 极限编程</li>\n<li>scrum Scrum 方法</li>\n<li>feature-driven development, FDD 功能驱动开发</li>\n<li>Software Engineering</li>\n<li>software engineering tools 软件工程工具</li>\n<li>software requirements tools 软件需求工具</li>\n<li>software design tools 软件设计工具</li>\n<li>software construction tools 软件构造工具</li>\n<li>software testing tools 软件测试工具</li>\n<li>software maintenance tools 软件维护工具</li>\n<li>software engineering process tools 软件工程过程工具</li>\n<li>software quality tools 软件质量工具</li>\n<li>software configuration management tools 软件配置管理工具</li>\n<li>software engineering management tools 软件工程管理工具</li>\n<li>infrastructure support tools 基础设施支持工具</li>\n<li>Software Engineering</li>\n<li>software engineering process 软件工程过程</li>\n<li>software life cycles 软件生命周期</li>\n<li>software development life cycle, SDLC 软件开发生命周期</li>\n<li>software product life cycle, SPLC 软件产品生命周期</li>\n<li>categories of software processes 软件过程类别</li>\n<li>primary processes 主要过程</li>\n<li>supporting processes 支持过程</li>\n<li>organizational processes 组织过程</li>\n<li>cross-project processes 跨项目过程</li>\n<li>Software Engineering</li>\n<li>software modeling 软件建模</li>\n<li>modeling principles 建模原则</li>\n<li>types of models 模型类型</li>\n<li>analysis of models 模型分析</li>\n<li>software engineering methods 软件工程方法</li>\n<li>modeling principles 建模原则</li>\n<li>model the essentials 仅建必要模型</li>\n<li>provide perspective 提供视角</li>\n<li>enable effective communications 赋能有效沟通</li>\n<li>properties and expression of models 模型的属性和表达</li>\n<li>completeness 完整性</li>\n<li>consistency 一致性</li>\n<li>correctness 正确性</li>\n<li>Software Engineering</li>\n<li>types of modeling 建模类型</li>\n<li>information modeling 信息建模</li>\n<li>behavioral modeling 行为建模</li>\n<li>structure modeling 结构建模</li>\n<li>information modeling 信息建模</li>\n<li>focus on data and information 关注数据和信息</li>\n<li>identify and define a set of {} on data entities 识别和定义数据实体的{}集合</li>\n<li>concepts 概念</li>\n<li>properties 属性</li>\n<li>relations 关系</li>\n<li>constraints 约束</li>\n<li>semantic or conceptual information model 语义或概念信息模型</li>\n<li>from problem perspective 从问题视角</li>\n<li>provide formalism and context 提供形式体系和上下文</li>\n<li>subsequent transformations 随后的转换</li>\n<li>lead to elaboration as implemented in the software 引导在软件中的实现细化</li>\n<li>logical data models 逻辑数据模型</li>\n<li>physical data models 物理数据模型</li>\n<li>Software Engineering</li>\n<li>behavioral modeling 行为建模</li>\n<li>identify and define functions 识别并定义功能</li>\n<li>state machines 状态机</li>\n<li>a collection of defined states, events and transitions 已定义状态、事件和转换的集合</li>\n<li>control-flow 控制流</li>\n<li>a sequence of events causes processes to be activated or deactivated 一系列事件导致处理被激活或停止</li>\n<li>data-flow</li>\n<li>a sequence of steps where data moves through processes toward data stores or data sinks 数据经过处理流向数据存储或数据接收器的一系列步骤</li>\n<li>structure modeling 结构建模</li>\n<li>illustrate the physical or logical composition 阐明物理或逻辑组成</li>\n<li>composition of software from its various component parts 通过构件部件组成的软件构成</li>\n<li>establish defined boundary between software and environment 在软件和环境之间建立已定义的边界</li>\n<li>common structural constructs 常见的结构构造</li>\n<li>composition, decomposition, generalization, specialization of entities 实体的组成、分解、泛化、特化</li>\n<li>identification of relevent relations and cardinality between entities 识别实体之间的相关关系和基数</li>\n<li>definition of process or functional interfaces 过程或功能接口的定义</li>\n<li>Software Engineering</li>\n<li>analysis of models 模型分析</li>\n<li>analyzing for completeness 完整性分析</li>\n<li>analyzing for consistency 一致性分析</li>\n<li>analyzing for correctness 正确性分析</li>\n<li>traceablity 可追溯性，可追踪性，可跟踪性</li>\n<li>interaction analysis 交互分析</li>\n<li>Data Architecture 数据架构</li>\n<li>Data Modeling and Design 数据建模与设计</li>\n<li>Data Storage and Operations 数据存储与操作</li>\n<li>Data Security 数据安全性</li>\n<li>Data Integration and Interoperability 数据集成和互操作性</li>\n<li>Document and Content Management 文档与内容管理</li>\n<li>Reference and Master Data 参考和主数据</li>\n<li>Data Warehousing and Business Intelligence 数据仓库和商业智能</li>\n<li>Metadata Management 元数据管理</li>\n<li>Data Quality 数据质量</li>\n<li>Big Data and Data Science 大数据与数据科学</li>\n<li>Data Management 数据管理</li>\n<li>Data Handling Ethics 数据处理伦理</li>\n<li>Data Governance 数据治理，数据管控</li>\n<li>Data Management Maturity Assessment 数据管理成熟度评估</li>\n<li>Data Management Organization and Role Expectations 数据管理中组织和角色期望</li>\n<li>Data Management and Organizational Change Management 数据管理和组织变更管理</li>\n<li>Data Modeling &#x26; Design</li>\n<li>Types of Data that are Modeled 需要建模的数据的类型</li>\n<li>category information 类别信息</li>\n<li>resource information 资源信息</li>\n<li>business event information 业务事件信息</li>\n<li>detail transaction information 详细事务信息</li>\n<li>Data Model Components 数据模型组件</li>\n<li>entity 实体</li>\n<li>relationship 关系</li>\n<li>attribute 属性</li>\n<li>domain 域，值域</li>\n<li>Data Modeling &#x26; Design</li>\n<li>Normalization 范式，标准化</li>\n<li>First normal form, 1NF 1 范式</li>\n<li>Second normal form, 2NF 2 范式</li>\n<li>Third normal form, 3NF 3 范式</li>\n<li>Boyce/Codd normal form, BCNF BC 范式</li>\n<li>Fourth normal form, 4NF 4 范式</li>\n<li>Fifth normal form 5NF 5 范式</li>\n<li>Abstraction 抽象，抽象概念，提取</li>\n<li>from concepts or subjects 从概念或主题</li>\n<li>the removal of details 移除细节，删除细节</li>\n<li>preserving the important properties and essential nature 保留重要属性和必要本质</li>\n<li>in such a way to broaden applicability to a wide class of situations 通过这种方法来扩大对各类情况的适用性</li>\n<li>Generalization 泛化，普遍化，一般化</li>\n<li>groups the common attributes and relationships of entities 对实体的公共属性和关系进行分组</li>\n<li>groups into subtype entities 分组到子类型实体</li>\n<li>Specialization 具体化，特化，特殊化</li>\n<li>separates distinguishing attributes within an entity 在一个实体中分离有区别的属性</li>\n<li>separates into subtype entities 分离到子类型实体</li>\n<li>Subtypes 子类型</li>\n<li>can be created using roles or classification 可以使用角色或分类创建</li>\n<li>to separate instances of an entity into groups by function 按功能将一个实体的实例分成组</li>\n<li>reduces redundancy on a data model 减少数据模型上的冗余</li>\n<li>makes a data model easier to communicate similarities across 使数据模型更容易交流相似之处</li>\n<li>Subtyping Relationship 子类型化的关系</li>\n<li>implies that all the properties from the supertype are inherited by the subtype 暗示着超类型的所有属性都由子类型继承</li>\n<li>Data Modeling &#x26; Design</li>\n<li>Data Modeling and Design Activities： 数据建模和设计活动</li>\n<li>1 Plan for Data Modeling 数据建模计划</li>\n<li>evaluate organizational requirements 评估组织的需求</li>\n<li>create standards 创建标准</li>\n<li>determine data model storage 确定数据模型存储</li>\n<li>define the deliverables 定义交付物</li>\n<li>diagrams 图解，图表，示意图</li>\n<li>definitions 定义</li>\n<li>issues and outstanding questions 问题和未决问题</li>\n<li>lineage 数据血统，数据族系</li>\n<li>2 Build the Data Model 构建数据模型</li>\n<li>Forward Engineering 正向工程</li>\n<li>Conceptual Data Modeling 概念数据建模</li>\n<li>Select Scheme 选择方案</li>\n<li>Select Notation 选择记号法</li>\n<li>Complete Inital CDM 完成初始概念数据模型</li>\n<li>Incorporate Enterprise Terminology 结合企业术语</li>\n<li>Obtain Sign-off 获得批准</li>\n<li>Logical Data Modeling 逻辑数据建模</li>\n<li>Analyze Information Requirements 分析信息需求</li>\n<li>Analyze Existing Documentation 分析现有文档</li>\n<li>Add Associative Entities 添加关联实体</li>\n<li>Add Attributes 添加属性</li>\n<li>Assign Domains 分配值域</li>\n<li>Assign Keys 分配键</li>\n<li>Physical Data Modeling 物理数据建模</li>\n<li>Resolve Logical Abstractions 解析逻辑抽象，分解逻辑抽象</li>\n<li>Add Attribute Details 添加属性的细节</li>\n<li>Add Reference Data Objects 添加引用数据对象</li>\n<li>Assign Surrogate Keys 指定代理键</li>\n<li>Denormalize for Performance 通过反范式化优化性能</li>\n<li>Index for Performance 通过索引优化性能</li>\n<li>Partition for Performance 通过分区优化性能</li>\n<li>Create Views 创建视图</li>\n<li>Reverse Engineering 逆向工程</li>\n<li>Data Storage and Operations数据存储和操作</li>\n<li>Database Storage Media数据库存储媒体</li>\n<li>Disk 磁盘</li>\n<li>Storage Area Network, SAN 存储区域网</li>\n<li>In-Memory 内存</li>\n<li>Columnar Compression Solution 列式压缩解决方案</li>\n<li>Flash Memory 闪速存储器</li>\n<li>Database Environments数据库环境</li>\n<li>Production Environment 生产环境</li>\n<li>Pre-production Environments 预生产环境</li>\n<li>Development Environment 开发环境</li>\n<li>Test Environment 测试环境</li>\n<li>Sandboxes 沙箱，沙盒</li>\n<li>Experimental Environment 实验环境</li>\n<li>Database Organization数据结构</li>\n<li>Hierarchical 分层结构</li>\n<li>Relational 关系结构</li>\n<li>Multi-Dimentional 多维结构</li>\n<li>Temporal 时间结构</li>\n<li>Valid Time 有效时间</li>\n<li>Transaction Time 事务时间</li>\n<li>Non-rational 非关系结构</li>\n<li>Column-Oriented 面向列</li>\n<li>Spatial 空间</li>\n<li>Object / Multi-Media 对象/多媒体</li>\n<li>Flat File Database 文件数据库</li>\n<li>Key-Value Pair 键值对</li>\n<li>Triplestore 三元组存储</li>\n<li>Data Storage and Operations 数据存储和操作</li>\n<li>Data Storage and Operations Activities数据存储和操作活动</li>\n<li>Manage Database Technology 管理数据库技术</li>\n<li>understand database technology characteristics 了解数据库技术的特点</li>\n<li>evaluate database technology 评估数据库技术</li>\n<li>manage and monitor database technology 管理和监控数据库技术</li>\n<li>Manage Databases 管理数据库</li>\n<li>understand requirements 了解需求</li>\n<li>define storage requirements 定义存储要求</li>\n<li>identify usage patterns 识别使用模式</li>\n<li>define access requirements 定义访问要求</li>\n<li>plan for business continuity 计划业务连续性</li>\n<li>make backups 备份</li>\n<li>recover data 恢复数据</li>\n<li>Develop database instances 开发数据库实例</li>\n<li>manage the physical storage environment 管理物理存储环境</li>\n<li>manage database access controls 管理数据库访问控制</li>\n<li>create storage containers 创建存储容器</li>\n<li>implement physical data models 实现物理数据模型</li>\n<li>load data 加载数据</li>\n<li>manage data replication 管理数据复制</li>\n<li>Manage Database Performance 管理数据库性能</li>\n<li>set database performance service levels 设置数据库性能服务级别</li>\n<li>manage database availability 管理数据库可用性</li>\n<li>manage database execution 管理数据库执行</li>\n<li>maintain database performance service levels 维护数据库性能和服务级别</li>\n<li>transaction performance vs. batch performance 事务性能与批处理性能</li>\n<li>issue remediation 问题补救</li>\n<li>maintain alternate environments 维护备用环境</li>\n<li>Manage Test Data Sets 管理测试数据集</li>\n<li>Manage Data Migration 管理数据迁移</li>\n<li>Data Security 数据安全</li>\n<li>Goals目标</li>\n<li>enabling appropriate access and preventing inappropriate access to enterprise data assets 确保对企业数据资产的适当访问并防止不适当的访问</li>\n<li>enabling compliance with regulations and policies for privacy, protection, and confidentiality 确保遵守有关隐私、保护和保密的法规和政策</li>\n<li>ensuring that stakeholder requirements for privacy and confidentiality are met 确保满足利益相关者的隐私和保密要求</li>\n<li>Principles原则</li>\n<li>collaboration 协作</li>\n<li>enterprise approach 企业方法</li>\n<li>proactive management 主动管理</li>\n<li>clear accountability 明确的责任</li>\n<li>metadata-driven 元数据驱动</li>\n<li>reduce risk by reducing exposure 通过减少接触降低风险</li>\n</ul>","tableOfContents":"","frontmatter":{"title":"系统架构设计师-英语词汇","tags":["coding"],"description":"系统架构设计师英语词汇","date":"2024-02-27"}}},"pageContext":{"slug":"/architecture-english-word","previous":{"fields":{"slug":"/Introduction-to-spring-cloud-load-balancer"},"frontmatter":{"title":"Spring Cloud Load Balancer 简介","tags":["coding"],"slug":"/Introduction-to-spring-cloud-load-balancer"}},"next":{"fields":{"slug":"/architecture-case-analysis"},"frontmatter":{"title":"系统架构设计师-案例分析","tags":["coding"],"slug":"/architecture-case-analysis"}}}},"staticQueryHashes":["2052298874"],"slicesMap":{}}