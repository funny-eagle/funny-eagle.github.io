{"componentChunkName":"component---src-templates-blog-post-js","path":"/python-factorail/","result":{"data":{"site":{"siteMetadata":{"title":"Jason Yang's Website","author":"Jason Yang"}},"markdownRemark":{"id":"a1e3056c-ebbf-50d6-81c9-14b5c41310ee","excerpt":"递归简单说来就是调用自身的意思。 来看一个幽默的定义： recursion \\ri-‘k&r-zh&n\\ n : see recursion （递归[名词]：见递归） 一、计算n的阶乘 n的阶乘定义…","html":"<p><strong>递归</strong>简单说来就是调用自身的意思。</p>\n<p>来看一个幽默的定义：</p>\n<blockquote>\n<p><strong>recursion</strong> <em>\\ri-‘k&#x26;r-zh&#x26;n\\</em> n : see recursion</p>\n</blockquote>\n<p>（递归[名词]：见递归）</p>\n<h2 id=\"一计算n的阶乘\" style=\"position:relative;\"><a href=\"#%E4%B8%80%E8%AE%A1%E7%AE%97n%E7%9A%84%E9%98%B6%E4%B9%98\" aria-label=\"一计算n的阶乘 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>一、计算n的阶乘</h2>\n<blockquote>\n<p><code>n</code>的阶乘定义为 <code>n \\* (n-1) \\* (n-2) \\* ... \\* 1</code>。</p>\n</blockquote>\n<p><strong>使用循环实现</strong></p>\n<deckgo-highlight-code language=\"python\" terminal=\"carbon\" theme=\"one-dark\" line-numbers=\"true\"  >\n          <code slot=\"code\">def factorial(n):\n  result = n\n  for i in range(1, n):\n    result *= i #依次与1至n-1的数相乘\n  return result</code>\n        </deckgo-highlight-code>\n<blockquote>\n<p>首先，把数字<code>n</code>赋值给<code>result</code>，然后<code>result</code>依次与<code>1</code>～<code>n-1</code>的数相乘，最后返回结果。</p>\n</blockquote>\n<p>阶乘的数学定义：</p>\n<ul>\n<li>1的阶乘是1；</li>\n<li>大于1的数n的阶乘是n乘n-1的阶乘。</li>\n</ul>\n<p><strong>使用递归实现</strong></p>\n<deckgo-highlight-code language=\"python\" terminal=\"carbon\" theme=\"one-dark\" line-numbers=\"true\"  >\n          <code slot=\"code\">def factorial(n):\n  if n == 1:\n    return 1\n  else:\n    return n * factorial(n-1)</code>\n        </deckgo-highlight-code>\n<h2 id=\"二计算幂\" style=\"position:relative;\"><a href=\"#%E4%BA%8C%E8%AE%A1%E7%AE%97%E5%B9%82\" aria-label=\"二计算幂 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>二、计算幂</h2>\n<p>python的内建函数 <code>pow(x, n)</code> 或者 <code>**</code> 运算符可以实现幂的计算。<code>pow(x, n)</code> 是 <code>x</code> 自乘 <code>n-1</code>次，例如<code>pow(2, 3)</code>是<code>2</code>乘以自身两次：<code>2 * 2 * 2 = 8</code>。</p>\n<p><strong>使用循环实现</strong></p>\n<deckgo-highlight-code language=\"python\" terminal=\"carbon\" theme=\"one-dark\" line-numbers=\"true\"  >\n          <code slot=\"code\">def power(x, n):\n  result = 1\n  for i in range(n):\n    result *= x\n  return result</code>\n        </deckgo-highlight-code>\n<p><strong>使用递归实现</strong></p>\n<ul>\n<li>对于任意数字<code>x</code>来说，<code>power(x, 0)</code>是<code>1</code>；</li>\n<li>对于任何大于<code>0</code>的数来说，<code>power(x, n)</code>是<code>x</code>乘以<code>(x, n-1)</code>的结果。</li>\n</ul>\n<deckgo-highlight-code language=\"python\" terminal=\"carbon\" theme=\"one-dark\" line-numbers=\"true\"  >\n          <code slot=\"code\">def power(x, n):\n  if n == 0:\n    return 1\n  else:\n    return x * power(x, n-1)</code>\n        </deckgo-highlight-code>","tableOfContents":"<ul>\n<li><a href=\"#%E4%B8%80%E8%AE%A1%E7%AE%97n%E7%9A%84%E9%98%B6%E4%B9%98\">一、计算n的阶乘</a></li>\n<li><a href=\"#%E4%BA%8C%E8%AE%A1%E7%AE%97%E5%B9%82\">二、计算幂</a></li>\n</ul>","frontmatter":{"title":"Python 两个经典递归：阶乘和幂","tags":["coding"],"description":"本文 Python 两个经典递归：阶乘和幂","date":"2017-04-09"}}},"pageContext":{"slug":"/python-factorail/","previous":{"fields":{"slug":"/javascript-base-knowleges/"},"frontmatter":{"title":"JavaScript基础","tags":["coding"],"slug":""}},"next":{"fields":{"slug":"/whose-face-is-lit-by-the-firework/"},"frontmatter":{"title":"梦回磁带机时代","tags":["music"],"slug":""}}}},"staticQueryHashes":["2052298874"],"slicesMap":{}}