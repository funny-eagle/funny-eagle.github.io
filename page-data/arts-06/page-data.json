{"componentChunkName":"component---src-templates-blog-post-js","path":"/arts-06/","result":{"data":{"site":{"siteMetadata":{"title":"Funny Eagle","author":"Jason Yang"}},"markdownRemark":{"id":"8db0cbfc-d12c-5d3e-a469-d110f45022fa","excerpt":"Algorithm 6. ZigZag Conversion The string  is written in a zigzag pattern on a given number of rows…","html":"<h2 id=\"algorithm\" style=\"position:relative;\"><a href=\"#algorithm\" aria-label=\"algorithm permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Algorithm</h2>\n<h3 id=\"6-zigzag-conversion\" style=\"position:relative;\"><a href=\"#6-zigzag-conversion\" aria-label=\"6 zigzag conversion permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>6. ZigZag Conversion</h3>\n<p>The string <code class=\"language-text\">\"PAYPALISHIRING\"</code> is written in a zigzag pattern on a given number of rows like this: (you may want to display this pattern in a fixed font for better legibility)</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">P   A   H   N\nA P L S I I G\nY   I   R</code></pre></div>\n<p>And then read line by line: <code class=\"language-text\">\"PAHNAPLSIIGYIR\"</code></p>\n<p>Write the code that will take a string and make this conversion given a number of rows:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">string convert(string s, int numRows);</code></pre></div>\n<p><strong>Example 1:</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Input: s = \"PAYPALISHIRING\", numRows = 3\nOutput: \"PAHNAPLSIIGYIR\"</code></pre></div>\n<p><strong>Example 2:</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Input: s = \"PAYPALISHIRING\", numRows = 4\nOutput: \"PINALSIGYAHRPI\"\nExplanation:\n\nP     I    N\nA   L S  I G\nY A   H R\nP     I</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">package</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>nocoder<span class=\"token punctuation\">.</span>leetcode<span class=\"token punctuation\">.</span>solution</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">/**\n * 6. ZigZag Conversion\n *\n * The string \"PAYPALISHIRING\" is written in a zigzag pattern on a given number of rows like this: (you may want to display this pattern in a fixed font for better legibility)\n *\n * P   A   H   N\n * A P L S I I G\n * Y   I   R\n * And then read line by line: \"PAHNAPLSIIGYIR\"\n *\n * Write the code that will take a string and make this conversion given a number of rows:\n *\n * string convert(string s, int numRows);\n * Example 1:\n *\n * Input: s = \"PAYPALISHIRING\", numRows = 3\n * Output: \"PAHNAPLSIIGYIR\"\n * Example 2:\n *\n * Input: s = \"PAYPALISHIRING\", numRows = 4\n * Output: \"PINALSIGYAHRPI\"\n * Explanation:\n *\n * P     I    N\n * A   L S  I G\n * Y A   H R\n * P     I\n *\n * @author jason\n * @date 18/8/12.\n */</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ZigZagConversion</span> <span class=\"token punctuation\">{</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">String</span> <span class=\"token function\">convert</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> s<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> nRows<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>s <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">||</span> s<span class=\"token punctuation\">.</span><span class=\"token function\">length</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span> <span class=\"token operator\">||</span> nRows <span class=\"token operator\">&lt;=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">return</span> s<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token class-name\">StringBuilder</span> res <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">StringBuilder</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">int</span> size <span class=\"token operator\">=</span> <span class=\"token number\">2</span> <span class=\"token operator\">*</span> nRows <span class=\"token operator\">-</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> nRows<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> j <span class=\"token operator\">=</span> i<span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;</span> s<span class=\"token punctuation\">.</span><span class=\"token function\">length</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">+=</span> size<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                res<span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">.</span><span class=\"token function\">charAt</span><span class=\"token punctuation\">(</span>j<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">!=</span> <span class=\"token number\">0</span> <span class=\"token operator\">&amp;&amp;</span> i <span class=\"token operator\">!=</span> nRows <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                    <span class=\"token keyword\">int</span> temp <span class=\"token operator\">=</span> j <span class=\"token operator\">+</span> size <span class=\"token operator\">-</span> <span class=\"token number\">2</span> <span class=\"token operator\">*</span> i<span class=\"token punctuation\">;</span>\n                    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>temp <span class=\"token operator\">&lt;</span> s<span class=\"token punctuation\">.</span><span class=\"token function\">length</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                        res<span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">.</span><span class=\"token function\">charAt</span><span class=\"token punctuation\">(</span>temp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    <span class=\"token punctuation\">}</span>\n                <span class=\"token punctuation\">}</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">return</span> res<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2 id=\"review\" style=\"position:relative;\"><a href=\"#review\" aria-label=\"review permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Review</h2>\n<h3 id=\"google-chrome-now-labels-http-sites-as-not-secure\" style=\"position:relative;\"><a href=\"#google-chrome-now-labels-http-sites-as-not-secure\" aria-label=\"google chrome now labels http sites as not secure permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>google chrome now labels http sites as ‘not secure’</h3>\n<p><a href=\"https://www.wired.com/story/google-chrome-https-not-secure-label/\">https://www.wired.com/story/google-chrome-https-not-secure-label/</a></p>\n<p>两年前，谷歌实现了一个承诺，chrome浏览器在未加密的网站前面贴上警告标志，来标识非https网站为不安全网站。</p>\n<p>但是居然还有骂声，“他们只是科技行业，网络比科技行业大得多，这就是傲慢。“来自Dave Winer，他是RSS的创造者之一。</p>\n<p>Let’s Encrypt 提供了支持HTTPS连接的免费证书，并且已加密超过1.13亿个网站。</p>\n<h2 id=\"tip\" style=\"position:relative;\"><a href=\"#tip\" aria-label=\"tip permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Tip</h2>\n<h3 id=\"docker-容器多目录挂载\" style=\"position:relative;\"><a href=\"#docker-%E5%AE%B9%E5%99%A8%E5%A4%9A%E7%9B%AE%E5%BD%95%E6%8C%82%E8%BD%BD\" aria-label=\"docker 容器多目录挂载 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Docker 容器多目录挂载</h3>\n<p>项目的配置文件，日志，以及要写入的文件，不要直接写在docker container 内部，因为一旦镜像更新要运行新的容器或者容器被删除，那么容器写入到内部的文件内容会丢失，所以这些需要挂载到宿主机上以保证数据的持久化。</p>\n<p>目录挂载的使用非常容易，只需要遭docker run 命令后跟 <code class=\"language-text\">-v</code> 参数加上<code class=\"language-text\">&lt;宿主机目录路径>:&lt;容器内目录路径></code>即可， 多个目录的挂载就使用 多个 <code class=\"language-text\">-v</code> 参数加上<code class=\"language-text\">&lt;宿主机目录路径>:&lt;容器内目录路径></code></p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">docker run -it -p 8080:8080 -v /Users/jason/my-service/config/:/usr/local/my-service/config/ -v  /Users/jason/my-service/log:/usr/local/my-service/log 192.168.28.121:9090/my-service:1.0</code></pre></div>\n<p>使用docker-compose的话在docker-compose.yml中增加<code class=\"language-text\">volumes: - \"/source:/destination\"</code>即可。</p>\n<h2 id=\"share\" style=\"position:relative;\"><a href=\"#share\" aria-label=\"share permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Share</h2>\n<h3 id=\"分享一下我们现在的负载流程使用阿里负载均衡加nginx代理转发\" style=\"position:relative;\"><a href=\"#%E5%88%86%E4%BA%AB%E4%B8%80%E4%B8%8B%E6%88%91%E4%BB%AC%E7%8E%B0%E5%9C%A8%E7%9A%84%E8%B4%9F%E8%BD%BD%E6%B5%81%E7%A8%8B%E4%BD%BF%E7%94%A8%E9%98%BF%E9%87%8C%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1%E5%8A%A0nginx%E4%BB%A3%E7%90%86%E8%BD%AC%E5%8F%91\" aria-label=\"分享一下我们现在的负载流程使用阿里负载均衡加nginx代理转发 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>分享一下我们现在的负载流程，使用阿里负载均衡加nginx代理转发</h3>\n<p>项目是采用DDD设计理念，前后端分离，前端使用vue.js，后端是基于springboot的多模块项目，大体分为web层和core层，web层负责处理客户端请求，core层包括domain和repository。每个项目使用两台server来运行docker化的web和core，也就是说运行了两个web，两个core。注册中心使用eureka。\n接下来描述一下负载均衡配合nginx代理转发的工作流程：\n首先请求会到负载均衡服务器，然后到nginx8080端口，如果是静态资源，则proxy_pass 到CDN，CDN回源到nginx80端口的web-front目录下，初次访问的时候从这里获取资源，缓存到CDN以加速客户端访问；如果是接口，则到对应的web层，然后到core层。</p>\n<p><img src=\"https://raw.githubusercontent.com/yangjinlong86/nocoder/master/data/images/201808/%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1.png\" alt=\"\"></p>","tableOfContents":"<ul>\n<li>\n<p><a href=\"#algorithm\">Algorithm</a></p>\n<ul>\n<li><a href=\"#6-zigzag-conversion\">6. ZigZag Conversion</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#review\">Review</a></p>\n<ul>\n<li><a href=\"#google-chrome-now-labels-http-sites-as-not-secure\">google chrome now labels http sites as ‘not secure’</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#tip\">Tip</a></p>\n<ul>\n<li><a href=\"#docker-%E5%AE%B9%E5%99%A8%E5%A4%9A%E7%9B%AE%E5%BD%95%E6%8C%82%E8%BD%BD\">Docker 容器多目录挂载</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#share\">Share</a></p>\n<ul>\n<li><a href=\"#%E5%88%86%E4%BA%AB%E4%B8%80%E4%B8%8B%E6%88%91%E4%BB%AC%E7%8E%B0%E5%9C%A8%E7%9A%84%E8%B4%9F%E8%BD%BD%E6%B5%81%E7%A8%8B%E4%BD%BF%E7%94%A8%E9%98%BF%E9%87%8C%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1%E5%8A%A0nginx%E4%BB%A3%E7%90%86%E8%BD%AC%E5%8F%91\">分享一下我们现在的负载流程，使用阿里负载均衡加nginx代理转发</a></li>\n</ul>\n</li>\n</ul>","frontmatter":{"title":"ARTS 第6周：ZigZag转换算法、Chrome安全策略、Docker挂载与负载均衡架构","tags":["coding","arts"],"description":"本周ARTS包含LeetCode ZigZag转换算法解析、Google Chrome标记HTTP网站为不安全的分析、Docker容器多目录挂载技巧，以及基于阿里负载均衡和Nginx的系统架构分享。","date":"2018-08-11"}}},"pageContext":{"slug":"/arts-06","previous":{"fields":{"slug":"/ssh-proxy"},"frontmatter":{"title":"开启ssh代理服务","tags":["coding"],"slug":"/ssh-proxy"}},"next":{"fields":{"slug":"/arts-07"},"frontmatter":{"title":"ARTS 第7周：整数反转算法、容器网络概述、Maven Profile配置","tags":["coding","arts"],"slug":"/arts-07"}}}},"staticQueryHashes":["2052298874"],"slicesMap":{}}