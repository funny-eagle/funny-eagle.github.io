{"componentChunkName":"component---src-templates-blog-post-js","path":"/arts-22/","result":{"data":{"site":{"siteMetadata":{"title":"Funny Eagle","author":"Jason Yang"}},"markdownRemark":{"id":"1abacce0-ad36-5562-a1f8-305de1bb62d5","excerpt":"Algorithm Review Announcing Stack Overflow for Teams you can ask questions that will only be visibl…","html":"<h2 id=\"algorithm\" style=\"position:relative;\"><a href=\"#algorithm\" aria-label=\"algorithm permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Algorithm</h2>\n<deckgo-highlight-code language=\"java\" terminal=\"carbon\" theme=\"one-dark\" line-numbers=\"true\"  >\n          <code slot=\"code\">package org.nocoder.leetcode.solution;\n\n/**\n * 136. Single Number\n * Given a non-empty array of integers, every element appears twice except for one. Find that single one.\n *\n * Note:\n *\n * Your algorithm should have a linear runtime complexity. Could you implement it without using extra memory?\n *\n * Example 1:\n *\n * Input: [2,2,1]\n * Output: 1\n * Example 2:\n *\n * Input: [4,1,2,1,2]\n * Output: 4\n *\n * @author yangjinlong\n * @date 2018-12-06\n */\npublic class SingleNumber {\n    public static int singleNumber(int[] nums) {\n        int result = 0;\n        for(int i : nums) {\n            result ^= i;\n        }\n        return result;\n    }\n\n    public static void main(String[] args) {\n        int[] arr1 = new int[]{2,2,1};\n        int[] arr2 = new int[]{4,1,2,1,2};\n        System.out.println(singleNumber(arr1));\n        System.out.println(singleNumber(arr2));\n    }\n}</code>\n        </deckgo-highlight-code>\n<h2 id=\"review\" style=\"position:relative;\"><a href=\"#review\" aria-label=\"review permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Review</h2>\n<p><a href=\"https://www.joelonsoftware.com/2018/05/03/announcing-stack-overflow-for-teams/\">Announcing Stack Overflow for Teams</a></p>\n<blockquote>\n<p>you can ask questions that will only be visible to members of your team, company, or organization.</p>\n</blockquote>\n<p>既可以面向团队提问，又可以面向世界提问</p>\n<h2 id=\"tip\" style=\"position:relative;\"><a href=\"#tip\" aria-label=\"tip permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Tip</h2>\n<h3 id=\"spring-cloud-ribbon-负载均衡重试机制\" style=\"position:relative;\"><a href=\"#spring-cloud-ribbon-%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1%E9%87%8D%E8%AF%95%E6%9C%BA%E5%88%B6\" aria-label=\"spring cloud ribbon 负载均衡重试机制 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Spring Cloud Ribbon 负载均衡重试机制</h3>\n<h4 id=\"1升级-spring-cloud-版本\" style=\"position:relative;\"><a href=\"#1%E5%8D%87%E7%BA%A7-spring-cloud-%E7%89%88%E6%9C%AC\" aria-label=\"1升级 spring cloud 版本 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1、升级 Spring Cloud 版本</h4>\n<blockquote>\n<p>从 <code>Camden-SR2</code> 开始，Spring Cloud 整合了 <code>Spring Retry</code> 来增强 <code>RestTemplate</code> 的重试能力，通过简单的配置即可实现服务访问重试策略。我们项目中的 <code>Spring Cloud</code> 版本选择从 <code>Brixton.RELEASE</code> 升级至 <code>Camden-SR3</code>。</p>\n</blockquote>\n<p>pom.xml 中，将 <code>spring-cloud-dependencies</code> 的 <code>version</code> 修改为 <code>Camden.SR3</code></p>\n<deckgo-highlight-code language=\"xml\" terminal=\"carbon\" theme=\"one-dark\" line-numbers=\"true\"  >\n          <code slot=\"code\">&lt;dependencyManagement&gt;\n    &lt;dependencies&gt;\n        &lt;dependency&gt;\n            &lt;groupId&gt;org.springframework.cloud&lt;/groupId&gt;\n            &lt;artifactId&gt;spring-cloud-dependencies&lt;/artifactId&gt;\n            &lt;version&gt;Camden.SR3&lt;/version&gt;\n            &lt;type&gt;pom&lt;/type&gt;\n            &lt;scope&gt;import&lt;/scope&gt;\n        &lt;/dependency&gt;\n    &lt;/dependencies&gt;\n&lt;/dependencyManagement&gt;</code>\n        </deckgo-highlight-code>\n<h4 id=\"2增加配置文件\" style=\"position:relative;\"><a href=\"#2%E5%A2%9E%E5%8A%A0%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6\" aria-label=\"2增加配置文件 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2、增加配置文件</h4>\n<deckgo-highlight-code language=\"conf\" terminal=\"carbon\" theme=\"one-dark\" line-numbers=\"true\"  >\n          <code slot=\"code\"># 开启重试机制，默认是false\nspring.cloud.loadbalancer.retry.enabled=true\n# 对所有操作请求都进行重试\nribbon.OkToRetryOnAllOperations=true</code>\n        </deckgo-highlight-code>\n<h3 id=\"ribbon-负载均衡重试配置文件说明\" style=\"position:relative;\"><a href=\"#ribbon-%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1%E9%87%8D%E8%AF%95%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%E8%AF%B4%E6%98%8E\" aria-label=\"ribbon 负载均衡重试配置文件说明 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code>Ribbon</code> 负载均衡重试配置文件说明</h3>\n<deckgo-highlight-code language=\"conf\" terminal=\"carbon\" theme=\"one-dark\" line-numbers=\"true\"  >\n          <code slot=\"code\"># 开启重试机制，默认是false\nspring.cloud.loadbalancer.retry.enabled=true\n\n# 请求连接的超时时间\nribbon.ConnectTimeout=250\n\n# 请求处理的超时时间，使用SimpleClientHttpRequestFactory时，不用配置\nribbon.ReadTimeout=1000\n\n# 对所有操作请求都进行重试\nribbon.OkToRetryOnAllOperations=true\n\n# 切换实例的重试次数，默认为1，可使用默认值\nribbon.MaxAutoRetriesNextServer=2\n\n# 对当前实例的重试次数，默认为1，可使用默认值\nribbon.MaxAutoRetries=1</code>\n        </deckgo-highlight-code>\n<p><code>RestTemplate</code> 默认使用的是 <code>ClientHttpRequestFactory</code> 是 <code>SimpleClientHttpRequestFactory</code>， 此时 <code>ribbon.ConnectTimeout</code> ，<code>ribbon.ReadTimeout</code> 这两个参数配置是不生效的。</p>\n<p><img src=\"https://raw.githubusercontent.com/yangjinlong86/nocoder/master/data/images/201812/RestTemplate-SimpleClientHttpRequestFactory.png\" alt=\"SimpleClientHttpRequestFactory\"></p>\n<p>如需设置 <code>connectTimeout</code>，需要手动创建 <code>SimpleClientHttpRequestFactory</code> 实例，注入 <code>RestTemplate</code> 构造方法中。</p>\n<deckgo-highlight-code language=\"java\" terminal=\"carbon\" theme=\"one-dark\" line-numbers=\"true\"  >\n          <code slot=\"code\">@Bean\n    @LoadBalanced\n    RestTemplate restTemplate() {\n        SimpleClientHttpRequestFactory factory = new SimpleClientHttpRequestFactory();\n        factory.setConnectTimeout(250);\n        RestTemplate restTemplate = new RestTemplate(factory);\n        //自定义响应错误处理\n        restTemplate.setErrorHandler(new LibraryResponseErrorHandler());\n        return restTemplate;\n    }</code>\n        </deckgo-highlight-code>\n<p>另一种实现，把 <code>ribbon.httpclient.enabled</code> 设置为 <code>true</code>，<code>RestTemplate</code> 的 <code>ClientHttpRequestFactory</code> 就会使用 <code>RibbonClientHttpRequestFactory</code>，此时 <code>ribbon.ConnectTimeout</code> ，<code>ribbon.ReadTimeout</code> 这两个参数配置会生效（注： <code>SpringCloud</code> 版本：<code>Camden.SR3</code>）。</p>\n<h2 id=\"share\" style=\"position:relative;\"><a href=\"#share\" aria-label=\"share permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Share</h2>\n<p>twitter上看到一个好玩的东西</p>\n<p><a href=\"https://app.bytescout.com/sql-trainer/index.html\">ByteScout SQL Trainer</a></p>","tableOfContents":"<ul>\n<li>\n<p><a href=\"#algorithm\">Algorithm</a></p>\n</li>\n<li>\n<p><a href=\"#review\">Review</a></p>\n</li>\n<li>\n<p><a href=\"#tip\">Tip</a></p>\n<ul>\n<li>\n<p><a href=\"#spring-cloud-ribbon-%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1%E9%87%8D%E8%AF%95%E6%9C%BA%E5%88%B6\">Spring Cloud Ribbon 负载均衡重试机制</a></p>\n<ul>\n<li><a href=\"#1%E5%8D%87%E7%BA%A7-spring-cloud-%E7%89%88%E6%9C%AC\">1、升级 Spring Cloud 版本</a></li>\n<li><a href=\"#2%E5%A2%9E%E5%8A%A0%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6\">2、增加配置文件</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#ribbon-%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1%E9%87%8D%E8%AF%95%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%E8%AF%B4%E6%98%8E\"><code>Ribbon</code> 负载均衡重试配置文件说明</a></p>\n</li>\n</ul>\n</li>\n<li>\n<p><a href=\"#share\">Share</a></p>\n</li>\n</ul>","frontmatter":{"title":"ARTS 第 22 周","tags":["coding","arts"],"description":"Algorithm, Reiview, Tip and Share","date":"2018-12-01"}}},"pageContext":{"slug":"/arts-22/","previous":{"fields":{"slug":"/arts-21/"},"frontmatter":{"title":"ARTS 第 21 周","tags":["coding","arts"],"slug":""}},"next":{"fields":{"slug":"/arts-23/"},"frontmatter":{"title":"ARTS 第 23 周","tags":["coding","arts"],"slug":""}}}},"staticQueryHashes":["2052298874"],"slicesMap":{}}