{"componentChunkName":"component---src-templates-blog-post-js","path":"/arts-07/","result":{"data":{"site":{"siteMetadata":{"title":"Funny Eagle","author":"Jason Yang"}},"markdownRemark":{"id":"c832532b-117b-549e-81bc-ffa49c6aa758","excerpt":"Algorithm Review A container networking overview https://jvns.ca/blog/2016/12/22/container-networki…","html":"<h2 id=\"algorithm\" style=\"position:relative;\"><a href=\"#algorithm\" aria-label=\"algorithm permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Algorithm</h2>\n<pre><code class=\"language-java\">package org.nocoder.leetcode.solution;\n\n/**\n * 7. Reverse Integer\n * &#x3C;p>\n * Given a 32-bit signed integer, reverse digits of an integer.\n * &#x3C;p>\n * Example 1:\n * &#x3C;p>\n * Input: 123\n * Output: 321\n * Example 2:\n * &#x3C;p>\n * Input: -123\n * Output: -321\n * Example 3:\n * &#x3C;p>\n * Input: 120\n * Output: 21\n * Note:\n * Assume we are dealing with an environment which could only store integers within the 32-bit signed integer\n * range: [−231,  231 − 1]. For the purpose of this problem, assume that your function returns 0 when the\n * reversed integer overflows.\n *\n * @author jason\n * @date 18/8/18.\n */\npublic class ReverseInteger {\n    private static int INT_MAX = 2147483647;\n    private static int INT_MIN = -INT_MAX - 1;\n\n    public static int reverse(int x) {\n        int y = 0;\n        int n;\n        while (x != 0) {\n            n = x % 10;\n            if (y > INT_MAX / 10 || y &#x3C; INT_MIN / 10) {\n                return 0;\n            }\n            y = y * 10 + n;\n            x = x / 10;\n        }\n        return y;\n    }\n\n    public static void main(String[] args) {\n        System.out.println(reverse(123));\n        System.out.println(reverse(-123));\n        System.out.println(reverse(0));\n        System.out.println(reverse(1000000003));\n    }\n}\n\n</code></pre>\n<h2 id=\"review\" style=\"position:relative;\"><a href=\"#review\" aria-label=\"review permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Review</h2>\n<h3 id=\"a-container-networking-overview\" style=\"position:relative;\"><a href=\"#a-container-networking-overview\" aria-label=\"a container networking overview permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>A container networking overview</h3>\n<blockquote>\n<p><a href=\"https://jvns.ca/blog/2016/12/22/container-networking/\">https://jvns.ca/blog/2016/12/22/container-networking/</a></p>\n</blockquote>\n<p><strong>Thing 0: parts of a network packet</strong></p>\n<p>the MAC address this packet should go to (“Layer 2”)</p>\n<p>the source IP and destination IP (“Layer 3”)</p>\n<p>the port and other TCP/UDP information (“Layer 4”)</p>\n<p>the contents of your HTTP packet like GET / (“Layer 7”)</p>\n<p><strong>Thing 1: local networking vs far-away networking</strong></p>\n<p>if you’re in the same AZ as your target, you can just send a packet with any random IP address on it, and as long as the MAC address is right it’ll get there.</p>\n<p>if you are in a different AZ, to send a packet to a computer, it has to have the IP address of that instance on it.</p>\n<p><strong>The route table</strong></p>\n<pre><code>sudo ip route add 10.4.4.0/24 via 172.23.1.1 dev eth0\n</code></pre>\n<p><strong>Encapsulation</strong></p>\n<p>ip-in-ip encapsulation just slaps on an extra IP header on top of your old IP header.</p>\n<pre><code>sudo ip tunnel add mytun mode ipip remote 172.9.9.9 local 10.4.4.4 ttl 255\nsudo ifconfig mytun 10.42.1.1\n</code></pre>\n<pre><code>sudo route add -net 10.42.2.0/24 dev mytun\nsudo route list\n</code></pre>\n<p>bridge networking</p>\n<ul>\n<li>\n<p>every packet on your computer goes out through a real interface (like eth0)\nDocker will create fake (virtual) network interfaces for every single one of your containers. These have IP addresses like 10.4.4.4</p>\n</li>\n<li>\n<p>Those virtual network interfaces are bridged to your real network interface. This means that the packets get copied (?) to the network interface corresponding to the real network card, and then sent out to the internet</p>\n</li>\n</ul>\n<h2 id=\"tip\" style=\"position:relative;\"><a href=\"#tip\" aria-label=\"tip permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Tip</h2>\n<h3 id=\"maven-profile\" style=\"position:relative;\"><a href=\"#maven-profile\" aria-label=\"maven profile permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Maven Profile</h3>\n<p>开发环境下仅需要<code>spring-boot-maven-plugin</code>和<code>maven-compiler-plugin</code>这两个插件，</p>\n<p>测试环境和生产环境需要多配置一个<code>dockerfile-maven-plugin</code>用于构建docker镜像，</p>\n<p>且测试环境和生产环境的docker镜像仓库、docker镜像tag都不同，如果开发环境也配置了这个插件，</p>\n<p>那么本地进行<code>mvn install</code>的时候，则须依赖本地的docker环境，因为会默认执行executions中的docker命令，</p>\n<p>这就比较麻烦了，使用Maven Profile可以完美解决这个问题。</p>\n<p>公共配置，即开发环境下的配置</p>\n<pre><code class=\"language-xml\">&#x3C;build>\n  &#x3C;plugins>\n      &#x3C;plugin>\n          &#x3C;groupId>org.springframework.boot&#x3C;/groupId>\n          &#x3C;artifactId>spring-boot-maven-plugin&#x3C;/artifactId>\n          &#x3C;configuration>\n              &#x3C;executable>true&#x3C;/executable>\n          &#x3C;/configuration>\n          &#x3C;executions>\n              &#x3C;execution>\n                  &#x3C;goals>\n                      &#x3C;goal>repackage&#x3C;/goal>\n                  &#x3C;/goals>\n              &#x3C;/execution>\n          &#x3C;/executions>\n      &#x3C;/plugin>\n      &#x3C;plugin>\n          &#x3C;groupId>org.apache.maven.plugins&#x3C;/groupId>\n          &#x3C;artifactId>maven-compiler-plugin&#x3C;/artifactId>\n          &#x3C;configuration>\n              &#x3C;source>8&#x3C;/source>\n              &#x3C;target>8&#x3C;/target>\n          &#x3C;/configuration>\n      &#x3C;/plugin>\n  &#x3C;/plugins>\n&#x3C;/build>\n</code></pre>\n<p>为测试环境和生产环境下增加profile配置</p>\n<pre><code class=\"language-xml\">&#x3C;project>\n  &#x3C;profiles>\n    &#x3C;profile>\n        &#x3C;id>prod&#x3C;/id>\n        &#x3C;build>\n            &#x3C;plugins>\n                v\n            &#x3C;/plugins>\n        &#x3C;/build>\n    &#x3C;/profile>\n    &#x3C;profile>\n        &#x3C;id>test&#x3C;/id>\n        &#x3C;build>\n            &#x3C;plugins>\n                &#x3C;plugin>\n                    &#x3C;groupId>com.spotify&#x3C;/groupId>\n                    &#x3C;artifactId>dockerfile-maven-plugin&#x3C;/artifactId>\n                    &#x3C;version>1.4.3&#x3C;/version>\n                    &#x3C;executions>\n                        &#x3C;execution>\n                            &#x3C;id>default&#x3C;/id>\n                            &#x3C;phase>install&#x3C;/phase>\n                            &#x3C;goals>\n                                &#x3C;goal>build&#x3C;/goal>\n                            &#x3C;/goals>\n                        &#x3C;/execution>\n                    &#x3C;/executions>\n                    &#x3C;configuration>\n                        &#x3C;repository>120.79.164.255:9091/yuntu-eureka-server&#x3C;/repository>\n                        &#x3C;tag>test&#x3C;/tag>\n                        &#x3C;useMavenSettingsForAuth>true&#x3C;/useMavenSettingsForAuth>\n                        &#x3C;buildArgs>\n                            &#x3C;JAR_FILE>target/${project.build.finalName}.jar&#x3C;/JAR_FILE>\n                        &#x3C;/buildArgs>\n                    &#x3C;/configuration>\n                &#x3C;/plugin>\n            &#x3C;/plugins>\n        &#x3C;/build>\n    &#x3C;/profile>\n  &#x3C;/profiles>\n&#x3C;/project>\n</code></pre>\n<p>指定 profile 打包命令</p>\n<pre><code>mvn clean install -P test\n</code></pre>\n<h2 id=\"share\" style=\"position:relative;\"><a href=\"#share\" aria-label=\"share permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Share</h2>\n<p><a href=\"https://github.com/haoel/leetcode/blob/master/algorithms/cpp/reverseInteger/reverseInteger.cpp\">https://github.com/haoel/leetcode/blob/master/algorithms/cpp/reverseInteger/reverseInteger.cpp</a></p>\n<blockquote>\n<p>Have you thought about this?</p>\n</blockquote>\n<blockquote>\n<p>Here are some good questions to ask before coding. Bonus points for you if you have already thought through this!</p>\n</blockquote>\n<blockquote>\n<p>If the integer’s last digit is 0, what should the output be? ie, cases such as 10, 100.</p>\n</blockquote>\n<blockquote>\n<p>Did you notice that the reversed integer might overflow? Assume the input is a 32-bit integer,\nthen the reverse of 1000000003 overflows. How should you handle such cases?</p>\n</blockquote>\n<blockquote>\n<p>Throw an exception? Good, but what if throwing an exception is not an option?\nYou would then have to re-design the function (ie, add an extra parameter).</p>\n</blockquote>","tableOfContents":"<ul>\n<li>\n<p><a href=\"#algorithm\">Algorithm</a></p>\n</li>\n<li>\n<p><a href=\"#review\">Review</a></p>\n<ul>\n<li><a href=\"#a-container-networking-overview\">A container networking overview</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#tip\">Tip</a></p>\n<ul>\n<li><a href=\"#maven-profile\">Maven Profile</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#share\">Share</a></p>\n</li>\n</ul>","frontmatter":{"title":"ARTS 第7周","tags":["coding","arts"],"description":"Algorithm, Reiview, Tip and Share","date":"2018-08-18"}}},"pageContext":{"slug":"/arts-07/","previous":{"fields":{"slug":"/arts-06/"},"frontmatter":{"title":"ARTS 第6周","tags":["coding","arts"],"slug":""}},"next":{"fields":{"slug":"/arts-08/"},"frontmatter":{"title":"ARTS 第8周","tags":["coding","arts"],"slug":""}}}},"staticQueryHashes":["2052298874"],"slicesMap":{}}