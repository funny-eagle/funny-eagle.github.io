{"componentChunkName":"component---src-templates-blog-post-js","path":"/strategy-pattern/","result":{"data":{"site":{"siteMetadata":{"title":"老鹰杰森的博客"}},"markdownRemark":{"id":"18202782-a588-5145-a4ac-75603d15eff7","excerpt":"在策略模式（Strategy Pattern）中，一个类的行为或其算法可以在运行时更改。这种类型的设计模式属于行为型模式。\r\n在策略模式中，我们创建表示各种策略的对象和一个行为随着策略对象改变而改变的 context 对象。策略对象改变 context…","html":"<p>在策略模式（Strategy Pattern）中，一个类的行为或其算法可以在运行时更改。这种类型的设计模式属于行为型模式。\r\n在策略模式中，我们创建表示各种策略的对象和一个行为随着策略对象改变而改变的 context 对象。策略对象改变 context 对象的执行算法。</p>\n<h2>介绍</h2>\n<p><strong>意图</strong>：定义一系列的算法,把它们一个个封装起来, 并且使它们可相互替换。\r\n<strong>主要解决</strong>：在有多种算法相似的情况下，使用 if...else 所带来的复杂和难以维护。\r\n<strong>何时使用</strong>：一个系统有许多许多类，而区分它们的只是他们直接的行为。\r\n<strong>如何解决</strong>：将这些算法封装成一个一个的类，任意地替换。\r\n<strong>关键代码</strong>：实现同一个接口。\r\n<strong>应用实例</strong>：\r\n1、诸葛亮的锦囊妙计，每一个锦囊就是一个策略。\r\n2、旅行的出游方式，选择骑自行车、坐汽车，每一种旅行方式都是一个策略。\r\n3、JAVA AWT 中的 LayoutManager。\r\n<strong>优点</strong>：\r\n1、算法可以自由切换。\r\n2、避免使用多重条件判断。\r\n3、扩展性良好。\r\n<strong>缺点</strong>：\r\n1、策略类会增多。\r\n2、所有策略类都需要对外暴露。\r\n<strong>使用场景</strong>：\r\n1、如果在一个系统里面有许多类，它们之间的区别仅在于它们的行为，那么使用策略模式可以动态地让一个对象在许多行为中选择一种行为。\r\n2、一个系统需要动态地在几种算法中选择一种。\r\n3、如果一个对象有很多的行为，如果不用恰当的模式，这些行为就只好使用多重的条件选择语句来实现。\r\n<strong>注意事项</strong>：如果一个系统的策略多于四个，就需要考虑使用混合模式，解决策略类膨胀的问题。\r\n##实现\r\n我们将创建一个定义活动的 Strategy 接口和实现了 Strategy 接口的实体策略类。Context 是一个使用了某种策略的类。\r\nStrategyPatternDemo，我们的演示类使用 Context 和策略对象来演示 Context 在它所配置或使用的策略改变时的行为变化。\r\n<a href=\"%60%60\"></a></p>\n<p>步骤 1\r\n创建一个接口。\r\nStrategy.java</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">interface</span> <span class=\"token class-name\">Strategy</span> <span class=\"token punctuation\">{</span>\r\n   <span class=\"token keyword\">public</span> <span class=\"token keyword\">int</span> <span class=\"token function\">doOperation</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> num1<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> num2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>步骤 2\r\n创建实现接口的实体类。\r\nOperationAdd.java</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">OperationAdd</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">Strategy</span><span class=\"token punctuation\">{</span>\r\n   <span class=\"token annotation punctuation\">@Override</span>\r\n   <span class=\"token keyword\">public</span> <span class=\"token keyword\">int</span> <span class=\"token function\">doOperation</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> num1<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> num2<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n      <span class=\"token keyword\">return</span> num1 <span class=\"token operator\">+</span> num2<span class=\"token punctuation\">;</span>\r\n   <span class=\"token punctuation\">}</span>\r\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>OperationSubstract.java</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">OperationSubstract</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">Strategy</span><span class=\"token punctuation\">{</span>\r\n   <span class=\"token annotation punctuation\">@Override</span>\r\n   <span class=\"token keyword\">public</span> <span class=\"token keyword\">int</span> <span class=\"token function\">doOperation</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> num1<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> num2<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n      <span class=\"token keyword\">return</span> num1 <span class=\"token operator\">-</span> num2<span class=\"token punctuation\">;</span>\r\n   <span class=\"token punctuation\">}</span>\r\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>OperationMultiply.java</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">OperationMultiply</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">Strategy</span><span class=\"token punctuation\">{</span>\r\n   <span class=\"token annotation punctuation\">@Override</span>\r\n   <span class=\"token keyword\">public</span> <span class=\"token keyword\">int</span> <span class=\"token function\">doOperation</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> num1<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> num2<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n      <span class=\"token keyword\">return</span> num1 <span class=\"token operator\">*</span> num2<span class=\"token punctuation\">;</span>\r\n   <span class=\"token punctuation\">}</span>\r\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>步骤 3\r\n创建 Context 类。</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token class-name\">Context</span><span class=\"token punctuation\">.</span>java\r\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Context</span> <span class=\"token punctuation\">{</span>\r\n   <span class=\"token keyword\">private</span> <span class=\"token class-name\">Strategy</span> strategy<span class=\"token punctuation\">;</span>\r\n\r\n   <span class=\"token keyword\">public</span> <span class=\"token class-name\">Context</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Strategy</span> strategy<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\r\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>strategy <span class=\"token operator\">=</span> strategy<span class=\"token punctuation\">;</span>\r\n   <span class=\"token punctuation\">}</span>\r\n\r\n   <span class=\"token keyword\">public</span> <span class=\"token keyword\">int</span> <span class=\"token function\">executeStrategy</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> num1<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> num2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\r\n      <span class=\"token keyword\">return</span> strategy<span class=\"token punctuation\">.</span><span class=\"token function\">doOperation</span><span class=\"token punctuation\">(</span>num1<span class=\"token punctuation\">,</span> num2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n   <span class=\"token punctuation\">}</span>\r\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>步骤 4\r\n使用 Context 来查看当它改变策略 Strategy 时的行为变化。\r\nStrategyPatternDemo.java</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">StrategyPatternDemo</span> <span class=\"token punctuation\">{</span>\r\n   <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n      <span class=\"token class-name\">Context</span> context <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Context</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">OperationAdd</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>        \r\n      <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"10 + 5 = \"</span> <span class=\"token operator\">+</span> context<span class=\"token punctuation\">.</span><span class=\"token function\">executeStrategy</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n      context <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Context</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">OperationSubstract</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>        \r\n      <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"10 - 5 = \"</span> <span class=\"token operator\">+</span> context<span class=\"token punctuation\">.</span><span class=\"token function\">executeStrategy</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n      context <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Context</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">OperationMultiply</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>        \r\n      <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"10 * 5 = \"</span> <span class=\"token operator\">+</span> context<span class=\"token punctuation\">.</span><span class=\"token function\">executeStrategy</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n   <span class=\"token punctuation\">}</span>\r\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>步骤 5\r\n验证输出。</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">10 + 5 = 15\r\n10 - 5 = 5\r\n10 * 5 = 50</code></pre></div>","frontmatter":{"title":"策略模式","date":"2017年10月03日","description":null}},"previous":{"fields":{"slug":"/decorator-pattern/"},"frontmatter":{"title":"装饰器模式"}},"next":{"fields":{"slug":"/singleton-pattern/"},"frontmatter":{"title":"单例模式"}}},"pageContext":{"id":"18202782-a588-5145-a4ac-75603d15eff7","previousPostId":"64329ae1-86fc-59b5-8da7-ce8e41bc390d","nextPostId":"fd6eab8f-c81e-5fe0-b36a-e26e5531ac26"}},"staticQueryHashes":["2841359383","3257411868"],"slicesMap":{}}