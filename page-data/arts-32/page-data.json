{"componentChunkName":"component---src-templates-blog-post-js","path":"/arts-32/","result":{"data":{"site":{"siteMetadata":{"title":"Funny Eagle","author":"Jason Yang"}},"markdownRemark":{"id":"ed91b05b-0f60-5edd-a4cb-8428b3e32c8f","excerpt":"Algorithm:977. Squares of a Sorted Array Review: Readme Driven Development Tip: Docker 容器中centos的编码…","html":"<ul>\n<li>Algorithm:<a href=\"https://leetcode.com/problems/squares-of-a-sorted-array/\">977. Squares of a Sorted Array</a></li>\n<li>Review: <a href=\"http://tom.preston-werner.com/2010/08/23/readme-driven-development.html\">Readme Driven Development</a></li>\n<li>Tip: Docker 容器中centos的编码问题</li>\n<li>Share: 开源项目的选择和使用</li>\n</ul>\n<h2 id=\"algorithm\" style=\"position:relative;\"><a href=\"#algorithm\" aria-label=\"algorithm permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Algorithm</h2>\n<deckgo-highlight-code language=\"java\" terminal=\"carbon\" theme=\"one-dark\" line-numbers=\"true\"  >\n          <code slot=\"code\">package org.nocoder.leetcode.solution;\n\n/**\n * 977. Squares of a Sorted Array\n * &lt;p&gt;\n * Given an array of integers A sorted in non-decreasing order,\n * return an array of the squares of each number, also in sorted non-decreasing order.\n * &lt;p&gt;\n * Example 1:\n * &lt;p&gt;\n * Input: [-4,-1,0,3,10]\n * Output: [0,1,9,16,100]\n * Example 2:\n * &lt;p&gt;\n * Input: [-7,-3,2,3,11]\n * Output: [4,9,9,49,121]\n * &lt;p&gt;\n * &lt;p&gt;\n * Note:\n * &lt;p&gt;\n * 1 &lt;= A.length &lt;= 10000\n * -10000 &lt;= A[i] &lt;= 10000\n * A is sorted in non-decreasing order.\n *\n * @author yangjinlong\n */\npublic class SquaresOfASortedArray {\n\n    public static void main(String[] args) {\n        int[] arr = new int[]{-4, -1, 0, 3, 10};\n        sortedSquares(arr);\n    }\n\n    public static int[] sortedSquares(int[] A) {\n        int[] arr = powArray(A);\n        sort(arr, 0, arr.length - 1);\n        return arr;\n    }\n\n    private static int[] powArray(int[] arr) {\n        for (int i = 0; i &lt; arr.length; i++) {\n            arr[i] = (int) Math.pow(arr[i], 2);\n        }\n        return arr;\n    }\n\n    private static void sort(int[] arr, int head, int tail) {\n        if (head &gt;= tail || arr == null || arr.length &lt;= 1) {\n            return;\n        }\n        int i = head, j = tail, pivot = arr[(head + tail) / 2];\n        while (i &lt;= j) {\n            while (arr[i] &lt; pivot) {\n                ++i;\n            }\n            while (arr[j] &gt; pivot) {\n                --j;\n            }\n            if (i &lt; j) {\n                int t = arr[i];\n                arr[i] = arr[j];\n                arr[j] = t;\n                ++i;\n                --j;\n            } else if (i == j) {\n                ++i;\n            }\n        }\n        sort(arr, head, j);\n        sort(arr, i, tail);\n    }\n\n}</code>\n        </deckgo-highlight-code>\n<h2 id=\"review\" style=\"position:relative;\"><a href=\"#review\" aria-label=\"review permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Review</h2>\n<h3 id=\"readme-driven-development\" style=\"position:relative;\"><a href=\"#readme-driven-development\" aria-label=\"readme driven development permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"http://tom.preston-werner.com/2010/08/23/readme-driven-development.html\">Readme Driven Development</a></h3>\n<p><strong>RDD 开发</strong>的几个优势</p>\n<ul>\n<li>最为重要的一点是，给自己一次重新审视项目，又无需每次为了改变主意而去修改代码而花去开销的机会，例如整体应该如何组织、公用API里到底应该包含哪些东西。还记得第一次写自动化测试代码，意识到揪出全部的错误从而防止那些问题悄悄跑进代码里去吗？在项目真正编码前写一个Readme的感觉是如出一辙的。</li>\n<li>为了明确应该实现什么而去写Readme会产生一些副产品，会得到一份写的非常棒的文档。当在项目伊始，也就是兴奋度和动机处于最高的阶段，写一个文档会十分容易。事后再补Readme将是一种绝对的障碍，并且会发现遗漏了许多重要的细节。</li>\n<li>如果与一群开发者一起协同工作，将会发现会从Readme收益颇多。如果其他成员在尚未完成项目前便可以读到这份Readme，他们将大可放心的在将与项目有交互的代码上开始工作。如果没有预先定义好的接口，团队只能顺序地编码或者面临重新实现大量代码的窘境。</li>\n<li>基于白纸黑字的讨论将会容易的多，而在一个没有任何成文内容的讨论话题上，事情往往会演变成争论不休。把建议的解决方案写下来这样一个简单的行动，代表了一个具体的想法，从而能被讨论，迭代发展下去。</li>\n</ul>\n<h2 id=\"tip\" style=\"position:relative;\"><a href=\"#tip\" aria-label=\"tip permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Tip</h2>\n<h3 id=\"docker-容器中centos的编码问题\" style=\"position:relative;\"><a href=\"#docker-%E5%AE%B9%E5%99%A8%E4%B8%ADcentos%E7%9A%84%E7%BC%96%E7%A0%81%E9%97%AE%E9%A2%98\" aria-label=\"docker 容器中centos的编码问题 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Docker 容器中centos的编码问题</h3>\n<p>前几天项目中有个微信提现的BUG，微信端返回“持卡人姓名不正确”，检查了接口调用方式，参数以及种种检查和测试之后，发现同样的代码本地是可以调通的，只有 docker 环境下会出问题，于是把问题定位偏向了编码问题，开始 code review，发现了这样一行代码<code>estr = RSAUtil.encrypt(data.getBytes(), pub, 2048, 11, rsa);</code>，问题基本定位到了，<code>data</code> 是个<code>String</code>，在调用<code>data.getBytes()</code> 方法是并未指定字符集，在开发的本地环境，编码环境已经设置为<code>UTF-8</code>，所以可以编码不会有问题，但是在测试环境上，Docker 的镜像内包含了一个centos，<code>Dockerfile</code>中并未指定系统的字符集，默认为<code>POSIX</code>，所以在<code>data.getBytes()</code> 的时候，会使用<code>POSIX</code>来编码，于是就乱码了。</p>\n<p>解决办法有两种：</p>\n<p>1、修改代码，指定字符集 <code>data.getBytes(\"UTF-8\")</code></p>\n<p>2、在<code>Dockerfile</code>中添加一行<code>ENV LANG C.UTF-8</code>指定系统的默认字符集</p>\n<h2 id=\"share\" style=\"position:relative;\"><a href=\"#share\" aria-label=\"share permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Share</h2>\n<h3 id=\"开源项目的选择和使用\" style=\"position:relative;\"><a href=\"#%E5%BC%80%E6%BA%90%E9%A1%B9%E7%9B%AE%E7%9A%84%E9%80%89%E6%8B%A9%E5%92%8C%E4%BD%BF%E7%94%A8\" aria-label=\"开源项目的选择和使用 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>开源项目的选择和使用</h3>\n<p>项目中经常会使用开源的项目或者库，选择和使用开源项目，我们要关注哪些重要的点，我主要参考了<a href=\"https://time.geekbang.org/column/article/13043\">再谈开源项目：如何选择、使用以及二次开发？</a>这边文章，整理了一张图，把几个关键的点记录下来。</p>\n<p><img src=\"https://raw.githubusercontent.com/yangjinlong86/arts/master/2019/images/select%20and%20use%20opensource%20projects.png\" alt=\"开源项目的选择和使用\"></p>","tableOfContents":"<ul>\n<li>\n<p><a href=\"#algorithm\">Algorithm</a></p>\n</li>\n<li>\n<p><a href=\"#review\">Review</a></p>\n<ul>\n<li><a href=\"#readme-driven-development\">Readme Driven Development</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#tip\">Tip</a></p>\n<ul>\n<li><a href=\"#docker-%E5%AE%B9%E5%99%A8%E4%B8%ADcentos%E7%9A%84%E7%BC%96%E7%A0%81%E9%97%AE%E9%A2%98\">Docker 容器中centos的编码问题</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#share\">Share</a></p>\n<ul>\n<li><a href=\"#%E5%BC%80%E6%BA%90%E9%A1%B9%E7%9B%AE%E7%9A%84%E9%80%89%E6%8B%A9%E5%92%8C%E4%BD%BF%E7%94%A8\">开源项目的选择和使用</a></li>\n</ul>\n</li>\n</ul>","frontmatter":{"title":"ARTS 第32周","tags":["coding","arts"],"description":"Algorithm, Reiview, Tip and Share","date":"2019-03-02"}}},"pageContext":{"slug":"/arts-32/","previous":{"fields":{"slug":"/arts-31/"},"frontmatter":{"title":"ARTS 第31周","tags":["coding","arts"],"slug":""}},"next":{"fields":{"slug":"/arts-33/"},"frontmatter":{"title":"ARTS 第33周","tags":["coding","arts"],"slug":""}}}},"staticQueryHashes":["2052298874"],"slicesMap":{}}