{"componentChunkName":"component---src-templates-blog-post-js","path":"/arts-44/","result":{"data":{"site":{"siteMetadata":{"title":"Funny Eagle","author":"Jason Yang"}},"markdownRemark":{"id":"899db349-df84-58e2-8786-7b0ade0ec383","excerpt":"ARTS-44 Algorithm https://leetcode.com/problems/length-of-last-word/ Review Introduction to Java By…","html":"<h1 id=\"arts-44\" style=\"position:relative;\"><a href=\"#arts-44\" aria-label=\"arts 44 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>ARTS-44</h1>\n<h2 id=\"algorithm\" style=\"position:relative;\"><a href=\"#algorithm\" aria-label=\"algorithm permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Algorithm</h2>\n<p><a href=\"https://leetcode.com/problems/length-of-last-word/\">https://leetcode.com/problems/length-of-last-word/</a></p>\n<pre><code class=\"language-java\">class Solution {\n    public int lengthOfLastWord(String s) {\n        int index = s.length() - 1;\n        while (s.charAt(index) == ' ') {\n            index--;\n        }\n        int wordLength = 0;\n        while (index >= 0 &#x26;&#x26; s.charAt(index) != ' ') {\n            wordLength++;\n            index--;\n        }\n        return wordLength;\n    }\n}\n</code></pre>\n<h2 id=\"review\" style=\"position:relative;\"><a href=\"#review\" aria-label=\"review permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Review</h2>\n<p><a href=\"https://dzone.com/articles/introduction-to-java-bytecode\">Introduction to Java Bytecode</a></p>\n<h4 id=\"jvm-data-types\" style=\"position:relative;\"><a href=\"#jvm-data-types\" aria-label=\"jvm data types permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>JVM Data Types</h4>\n<p>JVM 定义的数据类型包括<code>原始类型</code>和<code>引用类型</code>。</p>\n<p><strong>原始类型</strong></p>\n<ul>\n<li>数值类型：<code>byte</code>(8位),<code>short</code>(16位),<code>int</code>(32位),<code>long</code>(64位),<code>char</code>(16位), <code>float</code>(32位), <code>double</code>(64位)</li>\n<li>布尔类型：<code>boolean</code></li>\n<li><code>returnAddress</code>: 指针指令</li>\n</ul>\n<p><strong>引用类型</strong></p>\n<ul>\n<li>类类型</li>\n<li>数组类型</li>\n<li>接口类型</li>\n</ul>\n<p>布尔类型在字节码中支持受限，没有指令直接操作布尔值，布尔值会被编译器转换为int，使用int指令操作替代。</p>\n<h4 id=\"stack-based-architecture\" style=\"position:relative;\"><a href=\"#stack-based-architecture\" aria-label=\"stack based architecture permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Stack-Based Architecture</h4>\n<ul>\n<li>JVM是基于堆栈的VM架构，而非基于寄存器的架构</li>\n<li>PC寄存器：对于运行在Java程序每一个线程，由PC继勋奇来存储当前指令的地址</li>\n<li>JVM stack：对于每一个线程，都会分配一个栈，来存储局部变量，方法参数和返回值</li>\n<li>Heap：内存被所有线程和存储的对象共享（类的实例和数据），对象的释放由垃圾回收器管理</li>\n<li>方法区：对于每一个加载的类，方法区存储了方法代码、符号表和常量池</li>\n<li>数组局部变量，下标从0开始到length-1，长度由编译器来计算；一个局部变量可以保存除了<code>long</code>和<code>double</code>的任何类型的值，<code>long</code>和<code>double</code>占用两个局部变量</li>\n<li>操作数栈用于存储作为指令操作数的中间值，或者将参数传入方法调用</li>\n</ul>\n<h2 id=\"tip\" style=\"position:relative;\"><a href=\"#tip\" aria-label=\"tip permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Tip</h2>\n<p>剪贴板工具是个好东西，工作电脑windows下用的QQ拼音输入法，里面有个剪贴板，一直没用过，\n前几天无意打开看到本地剪贴板的内容有很多，试用了一下，真的可以提高不少工作效率；\n暂时也不需要其他酷炫的功能，剪贴板历史足矣，用法也很简单，不多介绍了；\n个人PC用的是fedora，剪贴板工具使用gnome下的Gpaste，给大家推荐试试，剪贴板工具，定能助你CV大法更牛掰。</p>\n<h1 id=\"share\" style=\"position:relative;\"><a href=\"#share\" aria-label=\"share permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Share</h1>\n<p>We believe that three things lead to success: Practice, Practice and Practice!</p>\n<p>上一篇ARTS定格在2019年10月3日，不由感慨时间过得真快，这两年的代码量和技术书籍的阅读量也是少的可怜。</p>\n<p>想要好好吐槽一下工作中的杂七杂八，回头想想还不都是自找的，想要变得优秀，就要持续学习，勇于承担。</p>\n<p>这个需要综合能力的时代，技管并重，哪个都不能落下，压力山大。</p>\n<ul>\n<li>《Java经典实例》的配套代码，作者从1995年维护至今，佩服！\n<ul>\n<li><a href=\"https://github.com/IanDarwin/darwinsys-api\">darwinsys-api</a></li>\n<li><a href=\"https://github.com/IanDarwin/javasrc\">javasrc</a></li>\n</ul>\n</li>\n<li>We believe that three things lead to success: Practice, Practice and Practice!\n<ul>\n<li><a href=\"https://www.codeabbey.com/\">https://www.codeabbey.com/</a></li>\n</ul>\n</li>\n</ul>","tableOfContents":"<ul>\n<li>\n<p><a href=\"#arts-44\">ARTS-44</a></p>\n<ul>\n<li>\n<p><a href=\"#algorithm\">Algorithm</a></p>\n</li>\n<li>\n<p><a href=\"#review\">Review</a></p>\n<ul>\n<li>\n<ul>\n<li><a href=\"#jvm-data-types\">JVM Data Types</a></li>\n<li><a href=\"#stack-based-architecture\">Stack-Based Architecture</a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p><a href=\"#tip\">Tip</a></p>\n</li>\n</ul>\n</li>\n<li>\n<p><a href=\"#share\">Share</a></p>\n</li>\n</ul>","frontmatter":{"title":"ARTS 第44周","tags":["coding","arts"],"description":"Algorithm, Reiview, Tip and Share","date":"2021-09-08"}}},"pageContext":{"slug":"/arts-44/","previous":{"fields":{"slug":"/10-hex-and-binary/"},"frontmatter":{"title":"十进制和二进制数值转换","tags":["coding"],"slug":""}},"next":{"fields":{"slug":"/arts-45/"},"frontmatter":{"title":"ARTS 第45周","tags":["coding","arts"],"slug":""}}}},"staticQueryHashes":["2052298874"],"slicesMap":{}}