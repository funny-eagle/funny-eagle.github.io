{"componentChunkName":"component---src-templates-blog-post-js","path":"/arts-26/","result":{"data":{"site":{"siteMetadata":{"title":"Funny Eagle","author":"Jason Yang"}},"markdownRemark":{"id":"1135d3d1-2029-5512-bac2-e02b90616b45","excerpt":"Algorithm Review https://netty.io/wiki/user-guide-for-4.x.html#wiki-h2-0 Tip python 爬取当当图书信息 Share …","html":"<h2 id=\"algorithm\" style=\"position:relative;\"><a href=\"#algorithm\" aria-label=\"algorithm permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Algorithm</h2>\n<deckgo-highlight-code language=\"java\" terminal=\"carbon\" theme=\"one-dark\" line-numbers=\"true\"  >\n          <code slot=\"code\">package org.nocoder.leetcode.solution;\n\nimport java.util.HashSet;\nimport java.util.Set;\nimport java.util.regex.Pattern;\n\n/**\n * Every email consists of a local name and a domain name, separated by the @ sign.\n * &lt;p&gt;\n * For example, in `alice@leetcode.com`, `alice` is the local name, and `leetcode.com` is the domain name.\n * &lt;p&gt;\n * Besides lowercase letters, these emails may contain `&#39;.&#39;`s or `&#39;+&#39;`s.\n * &lt;p&gt;\n * If you add periods (`&#39;.&#39;`) between some characters in the **local name** part of an email address,\n * mail sent there will be forwarded to the same address without dots in the local name.\n * For example, `&quot;alice.z@leetcode.com&quot;` and `&quot;alicez@leetcode.com&quot;` forward to the same email address.\n * (Note that this rule does not apply for domain names.)\n * &lt;p&gt;\n * If you add a plus (`&#39;+&#39;`) in the **local name**, everything after the first plus sign will be **ignored**.\n * This allows certain emails to be filtered, for example `m.y+name@email.com` will be forwarded to `my@email.com`.\n * (Again, this rule does not apply for domain names.)\n * &lt;p&gt;\n * It is possible to use both of these rules at the same time.\n * &lt;p&gt;\n * Given a list of `emails`, we send one email to each address in the list.\n * How many different addresses actually receive mails?\n * &lt;p&gt;\n * &lt;p&gt;\n * &lt;p&gt;\n * **Example 1:**\n * &lt;p&gt;\n * ```shell\n * Input: [&quot;test.email+alex@leetcode.com&quot;,&quot;test.e.mail+bob.cathy@leetcode.com&quot;,&quot;testemail+david@lee.tcode.com&quot;]\n * Output: 2\n * Explanation: &quot;testemail@leetcode.com&quot; and &quot;testemail@lee.tcode.com&quot; actually receive mails\n * ```\n * &lt;p&gt;\n * **Note:**\n * &lt;p&gt;\n * - `1 &lt;= emails[i].length &lt;= 100`\n * - `1 &lt;= emails.length &lt;= 100`\n * - Each `emails[i]` contains exactly one `&#39;@&#39;` character.\n *\n * @author yangjinlong\n * @date 2019-01-02\n */\npublic class UniqueEmailAddress {\n    public int numUniqueEmails(String[] emails) {\n        if (emails == null || emails.length &gt; 100) {\n            throw new IllegalArgumentException();\n        }\n        String pattern = &quot;^\\\\w+([-+.]\\\\w+)*@\\\\w+([-.]\\\\w+)*\\\\.\\\\w+([-.]\\\\w+)*$&quot;;\n        Set emailSet = new HashSet();\n        for (int i = 0; i &lt; emails.length; i++) {\n            if (Pattern.matches(pattern, emails[i])) {\n                int plusIdx = emails[i].indexOf(&quot;+&quot;);\n                int atIdx = emails[i].indexOf(&quot;@&quot;);\n                String ignoreContent = emails[i].substring(plusIdx, atIdx);\n                String email = emails[i].replace(ignoreContent, &quot;&quot;);\n                String localName = email.substring(0, email.indexOf(&quot;@&quot;));\n                String domainName = email.substring(email.indexOf(&quot;@&quot;), email.length() - 1);\n                email = localName.replace(&quot;.&quot;, &quot;&quot;).concat(domainName);\n                emailSet.add(email);\n            }\n        }\n        return emailSet.size();\n    }\n\n    public static void main(String[] args) {\n        String[] emails = new String[]{&quot;test.email+alex@leetcode.com&quot;, &quot;test.e.mail+bob.cathy@leetcode.com&quot;, &quot;testemail+david@lee.tcode.com&quot;};\n        UniqueEmailAddress uniqueEmailAddress = new UniqueEmailAddress();\n        int n = uniqueEmailAddress.numUniqueEmails(emails);\n        System.out.println(n);\n    }\n}</code>\n        </deckgo-highlight-code>\n<h2 id=\"review\" style=\"position:relative;\"><a href=\"#review\" aria-label=\"review permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Review</h2>\n<p><a href=\"https://netty.io/wiki/user-guide-for-4.x.html#wiki-h2-0\">https://netty.io/wiki/user-guide-for-4.x.html#wiki-h2-0</a></p>\n<h2 id=\"tip\" style=\"position:relative;\"><a href=\"#tip\" aria-label=\"tip permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Tip</h2>\n<p>python 爬取当当图书信息</p>\n<deckgo-highlight-code language=\"python\" terminal=\"carbon\" theme=\"one-dark\" line-numbers=\"true\"  >\n          <code slot=\"code\">import requests\nfrom bs4 import BeautifulSoup\nfrom fake_useragent import UserAgent\n\ndef crawl_book_info(isbn):\n    agent = UserAgent()\n    headers = {&#39;User-Agent&#39;: agent.random}\n    url = &#39;http://search.dangdang.com/?act=input&amp;key=&#39; + isbn\n    data = requests.get(url, headers=headers)\n    soup = BeautifulSoup(data.text, &#39;lxml&#39;)\n    ul = soup.find_all(&#39;ul&#39;, {&#39;class&#39;: &#39;bigimg&#39;})\n    title = &#39;&#39;\n    image = &#39;&#39;\n    if len(ul) &gt; 0:\n        li = ul[0].find_all(&#39;li&#39;)\n        if len(li) &gt; 0:\n            title = li[0].find(&#39;a&#39;).get(&#39;title&#39;)\n            image = li[0].find(&#39;img&#39;).get(&#39;src&#39;)\n    return title, isbn, image</code>\n        </deckgo-highlight-code>\n<h2 id=\"share\" style=\"position:relative;\"><a href=\"#share\" aria-label=\"share permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Share</h2>\n<blockquote>\n<p>假如你是个医生，病人要求你在手术前不要洗手，因为病人认为洗手太耽误时间了，你会照做吗。当然不会，因为医生是专业的，知道病菌的危害有多大，手术风险有多大。同理，程序员盲目遵从不明风险的经理的要求，也是不专业的。 —《Clean Code》</p>\n</blockquote>\n<blockquote>\n<p>如果你让你自己陷入忙忙忙的境地，你要特别小心了。你没有时间好好思考，你就不会成长，你就不会渐渐做出调整，你就可能无法适应外面的世界，你就会在危机来临时不堪一击。… 保持思考的习惯，思考一些大的东西。「打小算盘」并不是有价值的思考。—蔡学镛</p>\n</blockquote>","tableOfContents":"<ul>\n<li><a href=\"#algorithm\">Algorithm</a></li>\n<li><a href=\"#review\">Review</a></li>\n<li><a href=\"#tip\">Tip</a></li>\n<li><a href=\"#share\">Share</a></li>\n</ul>","frontmatter":{"title":"ARTS 第26周","tags":["coding","arts"],"description":"Algorithm, Reiview, Tip and Share","date":"2018-12-29"}}},"pageContext":{"slug":"/arts-26/","previous":{"fields":{"slug":"/arts-25/"},"frontmatter":{"title":"ARTS 第25周","tags":["coding","arts"],"slug":""}},"next":{"fields":{"slug":"/arts-27/"},"frontmatter":{"title":"ARTS 第27周","tags":["coding","arts"],"slug":""}}}},"staticQueryHashes":["2052298874"],"slicesMap":{}}