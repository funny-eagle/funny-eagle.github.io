{"componentChunkName":"component---src-templates-blog-post-js","path":"/arts-26/","result":{"data":{"site":{"siteMetadata":{"title":"Funny Eagle","author":"Jason Yang"}},"markdownRemark":{"id":"1135d3d1-2029-5512-bac2-e02b90616b45","excerpt":"Algorithm Review https://netty.io/wiki/user-guide-for-4.x.html#wiki-h2-0 Tip python 爬取当当图书信息 Share …","html":"<h2 id=\"algorithm\" style=\"position:relative;\"><a href=\"#algorithm\" aria-label=\"algorithm permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Algorithm</h2>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">package</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>nocoder<span class=\"token punctuation\">.</span>leetcode<span class=\"token punctuation\">.</span>solution</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">HashSet</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Set</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span>regex<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Pattern</span></span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">/**\n * Every email consists of a local name and a domain name, separated by the @ sign.\n * &lt;p>\n * For example, in `alice@leetcode.com`, `alice` is the local name, and `leetcode.com` is the domain name.\n * &lt;p>\n * Besides lowercase letters, these emails may contain `'.'`s or `'+'`s.\n * &lt;p>\n * If you add periods (`'.'`) between some characters in the **local name** part of an email address,\n * mail sent there will be forwarded to the same address without dots in the local name.\n * For example, `\"alice.z@leetcode.com\"` and `\"alicez@leetcode.com\"` forward to the same email address.\n * (Note that this rule does not apply for domain names.)\n * &lt;p>\n * If you add a plus (`'+'`) in the **local name**, everything after the first plus sign will be **ignored**.\n * This allows certain emails to be filtered, for example `m.y+name@email.com` will be forwarded to `my@email.com`.\n * (Again, this rule does not apply for domain names.)\n * &lt;p>\n * It is possible to use both of these rules at the same time.\n * &lt;p>\n * Given a list of `emails`, we send one email to each address in the list.\n * How many different addresses actually receive mails?\n * &lt;p>\n * &lt;p>\n * &lt;p>\n * **Example 1:**\n * &lt;p>\n * ```shell\n * Input: [\"test.email+alex@leetcode.com\",\"test.e.mail+bob.cathy@leetcode.com\",\"testemail+david@lee.tcode.com\"]\n * Output: 2\n * Explanation: \"testemail@leetcode.com\" and \"testemail@lee.tcode.com\" actually receive mails\n * ```\n * &lt;p>\n * **Note:**\n * &lt;p>\n * - `1 &lt;= emails[i].length &lt;= 100`\n * - `1 &lt;= emails.length &lt;= 100`\n * - Each `emails[i]` contains exactly one `'@'` character.\n *\n * @author yangjinlong\n * @date 2019-01-02\n */</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">UniqueEmailAddress</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">int</span> <span class=\"token function\">numUniqueEmails</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> emails<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>emails <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">||</span> emails<span class=\"token punctuation\">.</span>length <span class=\"token operator\">></span> <span class=\"token number\">100</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">IllegalArgumentException</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token class-name\">String</span> pattern <span class=\"token operator\">=</span> <span class=\"token string\">\"^\\\\w+([-+.]\\\\w+)*@\\\\w+([-.]\\\\w+)*\\\\.\\\\w+([-.]\\\\w+)*$\"</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">Set</span> emailSet <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">HashSet</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> emails<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Pattern</span><span class=\"token punctuation\">.</span><span class=\"token function\">matches</span><span class=\"token punctuation\">(</span>pattern<span class=\"token punctuation\">,</span> emails<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token keyword\">int</span> plusIdx <span class=\"token operator\">=</span> emails<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">indexOf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"+\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token keyword\">int</span> atIdx <span class=\"token operator\">=</span> emails<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">indexOf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"@\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token class-name\">String</span> ignoreContent <span class=\"token operator\">=</span> emails<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">substring</span><span class=\"token punctuation\">(</span>plusIdx<span class=\"token punctuation\">,</span> atIdx<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token class-name\">String</span> email <span class=\"token operator\">=</span> emails<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span>ignoreContent<span class=\"token punctuation\">,</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token class-name\">String</span> localName <span class=\"token operator\">=</span> email<span class=\"token punctuation\">.</span><span class=\"token function\">substring</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> email<span class=\"token punctuation\">.</span><span class=\"token function\">indexOf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"@\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token class-name\">String</span> domainName <span class=\"token operator\">=</span> email<span class=\"token punctuation\">.</span><span class=\"token function\">substring</span><span class=\"token punctuation\">(</span>email<span class=\"token punctuation\">.</span><span class=\"token function\">indexOf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"@\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> email<span class=\"token punctuation\">.</span><span class=\"token function\">length</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                email <span class=\"token operator\">=</span> localName<span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span><span class=\"token string\">\".\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">concat</span><span class=\"token punctuation\">(</span>domainName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                emailSet<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>email<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">return</span> emailSet<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> emails <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">{</span><span class=\"token string\">\"test.email+alex@leetcode.com\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"test.e.mail+bob.cathy@leetcode.com\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"testemail+david@lee.tcode.com\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">UniqueEmailAddress</span> uniqueEmailAddress <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">UniqueEmailAddress</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">int</span> n <span class=\"token operator\">=</span> uniqueEmailAddress<span class=\"token punctuation\">.</span><span class=\"token function\">numUniqueEmails</span><span class=\"token punctuation\">(</span>emails<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2 id=\"review\" style=\"position:relative;\"><a href=\"#review\" aria-label=\"review permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Review</h2>\n<p><a href=\"https://netty.io/wiki/user-guide-for-4.x.html#wiki-h2-0\">https://netty.io/wiki/user-guide-for-4.x.html#wiki-h2-0</a></p>\n<h2 id=\"tip\" style=\"position:relative;\"><a href=\"#tip\" aria-label=\"tip permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Tip</h2>\n<p>python 爬取当当图书信息</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> requests\n<span class=\"token keyword\">from</span> bs4 <span class=\"token keyword\">import</span> BeautifulSoup\n<span class=\"token keyword\">from</span> fake_useragent <span class=\"token keyword\">import</span> UserAgent\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">crawl_book_info</span><span class=\"token punctuation\">(</span>isbn<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    agent <span class=\"token operator\">=</span> UserAgent<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    headers <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token string\">'User-Agent'</span><span class=\"token punctuation\">:</span> agent<span class=\"token punctuation\">.</span>random<span class=\"token punctuation\">}</span>\n    url <span class=\"token operator\">=</span> <span class=\"token string\">'http://search.dangdang.com/?act=input&amp;key='</span> <span class=\"token operator\">+</span> isbn\n    data <span class=\"token operator\">=</span> requests<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">,</span> headers<span class=\"token operator\">=</span>headers<span class=\"token punctuation\">)</span>\n    soup <span class=\"token operator\">=</span> BeautifulSoup<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">,</span> <span class=\"token string\">'lxml'</span><span class=\"token punctuation\">)</span>\n    ul <span class=\"token operator\">=</span> soup<span class=\"token punctuation\">.</span>find_all<span class=\"token punctuation\">(</span><span class=\"token string\">'ul'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span><span class=\"token string\">'class'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'bigimg'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    title <span class=\"token operator\">=</span> <span class=\"token string\">''</span>\n    image <span class=\"token operator\">=</span> <span class=\"token string\">''</span>\n    <span class=\"token keyword\">if</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>ul<span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n        li <span class=\"token operator\">=</span> ul<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>find_all<span class=\"token punctuation\">(</span><span class=\"token string\">'li'</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">if</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>li<span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n            title <span class=\"token operator\">=</span> li<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>find<span class=\"token punctuation\">(</span><span class=\"token string\">'a'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string\">'title'</span><span class=\"token punctuation\">)</span>\n            image <span class=\"token operator\">=</span> li<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>find<span class=\"token punctuation\">(</span><span class=\"token string\">'img'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string\">'src'</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> title<span class=\"token punctuation\">,</span> isbn<span class=\"token punctuation\">,</span> image</code></pre></div>\n<h2 id=\"share\" style=\"position:relative;\"><a href=\"#share\" aria-label=\"share permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Share</h2>\n<blockquote>\n<p>假如你是个医生，病人要求你在手术前不要洗手，因为病人认为洗手太耽误时间了，你会照做吗。当然不会，因为医生是专业的，知道病菌的危害有多大，手术风险有多大。同理，程序员盲目遵从不明风险的经理的要求，也是不专业的。 —《Clean Code》</p>\n</blockquote>\n<blockquote>\n<p>如果你让你自己陷入忙忙忙的境地，你要特别小心了。你没有时间好好思考，你就不会成长，你就不会渐渐做出调整，你就可能无法适应外面的世界，你就会在危机来临时不堪一击。… 保持思考的习惯，思考一些大的东西。「打小算盘」并不是有价值的思考。—蔡学镛</p>\n</blockquote>","tableOfContents":"<ul>\n<li><a href=\"#algorithm\">Algorithm</a></li>\n<li><a href=\"#review\">Review</a></li>\n<li><a href=\"#tip\">Tip</a></li>\n<li><a href=\"#share\">Share</a></li>\n</ul>","frontmatter":{"title":"ARTS 第26周","tags":["coding","arts"],"description":"Algorithm, Reiview, Tip and Share","date":"2018-12-29"}}},"pageContext":{"slug":"/arts-26","previous":{"fields":{"slug":"/arts-25"},"frontmatter":{"title":"ARTS 第25周","tags":["coding","arts"],"slug":"/arts-25"}},"next":{"fields":{"slug":"/arts-27"},"frontmatter":{"title":"ARTS 第27周","tags":["coding","arts"],"slug":"/arts-27"}}}},"staticQueryHashes":["2052298874"],"slicesMap":{}}