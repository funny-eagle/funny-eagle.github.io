{"componentChunkName":"component---src-templates-tag-js","path":"/tag/coding/2/","result":{"data":{"site":{"siteMetadata":{"title":"Funny Eagle","description":"Funny Eagle 技术博客;记录技术成长"}},"allMarkdownRemark":{"edges":[{"node":{"excerpt":"一、概述  是 Project Reactor 库中的一个类，它是 Reactive Streams 规范的实现，用于表示包含 0 或 1 个元素的异步序列。 在 Reactive 编程中， 可以用…","fields":{"slug":"/mono"},"frontmatter":{"date":"2025-01-15","title":"Mono类怎么用","tags":["coding"],"description":"在 Reactive 编程中，Mono<> 可以用来处理异步操作的结果，这些操作可能会返回一个元素、一个完成信号或者一个错误。它是一个强大的工具，可用于构建响应式、非阻塞和异步的应用程序，尤其适合于现代分布式系统和高并发环境"}}},{"node":{"excerpt":"一、Mono 和 Flux 概述 Mono：  是 Project Reactor 库中的一个类，用于表示包含 0 或 1 个元素的异步序列。它是 Reactive Streams 规范的实现，适用…","fields":{"slug":"/mono-and-flux"},"frontmatter":{"date":"2025-01-15","title":"Java 中的 Mono 和 Flux 的详细介绍及使用场景","tags":["coding"],"description":"Mono 和 Flux 是 Java 中 Reactive 编程的核心元素，它们为处理异步操作提供了强大的抽象。"}}},{"node":{"excerpt":"要实现向指定 topic 发送消息的功能，需要使用 Spring Kafka 提供的 。以下是实现步骤： 添加依赖：确保项目中包含了 Spring Kafka 的依赖。如果使用的是 Maven，可以…","fields":{"slug":"/spring-kafka-demo"},"frontmatter":{"date":"2025-01-06","title":"Spring-kafka简单使用示例","tags":["coding"],"description":"使用spring-kafka KafkaTemplate 向指定的 topic 发送消息"}}},{"node":{"excerpt":"使用 Docker 搭建 Kafka 服务端是一个相对简单的过程，因为 Docker 提供了现成的镜像来简化部署。以下是一个基本步骤指南，帮助在本地环境中使用 Docker 来搭建一个简单的 Kaf…","fields":{"slug":"/docker-kafka"},"frontmatter":{"date":"2025-01-06","title":"使用 Docker 搭建 Kafka 服务端","tags":["coding"],"description":"帮助在本地环境中使用 Docker 来搭建一个简单的 Kafka 服务端，包括 ZooKeeper。"}}},{"node":{"excerpt":"","fields":{"slug":"/01demo/"},"frontmatter":{"date":"2025-01-06","title":"这里是标题","tags":["coding"],"description":null}}},{"node":{"excerpt":"一、原理 1. 事件驱动模型 Spring的是基于观察者模式（也称为发布 - 订阅模式）实现的事件驱动模型。在这个模型中，有事件源（发布事件的对象）、事件（及其子类）和事件监听器（订阅事件并处理的对…","fields":{"slug":"/spring-application-event"},"frontmatter":{"date":"2024-12-29","title":"Spring中ApplicationEvent的原理和使用方法","tags":["coding"],"description":"在Spring应用程序中使用`ApplicationEvent`来实现事件驱动的编程，使得不同组件之间能够以松耦合的方式进行通信和协作。"}}},{"node":{"excerpt":"在 Python 项目中生成  文件是一个常见的需求，用于记录项目所依赖的所有包及其版本。这样可以确保在其他环境中也能正确安装相同的依赖。\n以下是一些常用的方法来生成  文件： 方法一：使用   命…","fields":{"slug":"/python_requirements"},"frontmatter":{"date":"2024-10-25","title":"为Python项目生成requirements.txt","tags":["coding"],"description":"在 Python 项目中生成 requirements.txt 文件是一个常见的需求，用于记录项目所依赖的所有包及其版本。这样可以确保在其他环境中也能正确安装相同的依赖。以下是一些常用的方法来生成 requirements.txt 文件"}}},{"node":{"excerpt":"晚上加班的时候喝了一瓶东鹏，回到家睡不着觉，想起博客有个路由问题还没解决，挑灯疯狂Google，终于找到了解决办法。 问题一，我基于  搭建的博客，配置好之后 ，把生成的静态文件直接配在nginx下…","fields":{"slug":"/two-nextjs-blog-problems"},"frontmatter":{"date":"2024-06-05","title":"Tailwind Nextjs Starter Blog 的两个配置问题","tags":["coding"],"description":"半夜想起网站还有问题没解决，挑灯疯狂Google，终于找到了解决办法。"}}}]}},"pageContext":{"tag":"coding","currentPage":2,"totalPage":16,"limit":8,"skip":8}},"staticQueryHashes":["2052298874"],"slicesMap":{}}