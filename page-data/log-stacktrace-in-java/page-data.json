{"componentChunkName":"component---src-templates-blog-post-js","path":"/log-stacktrace-in-java/","result":{"data":{"site":{"siteMetadata":{"title":"Funny Eagle","author":"Jason Yang"}},"markdownRemark":{"id":"43fdebfc-deae-55fb-8aa9-737ac8360ba2","excerpt":"在 Java 中，希望使用  打印异常的完整堆栈信息，记录在日志文件里，而不是打印在控制台，如果直接记录或者，会丢失堆栈信息。 将堆栈信息转换为字符串 说明： 使用  和  将堆栈信息转换为字符串。…","html":"<p>在 Java 中，希望使用 <code class=\"language-text\">log.error()</code> 打印异常的完整堆栈信息，记录在日志文件里，而不是打印在控制台，如果直接记录<code class=\"language-text\">ex.toString()</code>或者<code class=\"language-text\">ex.getMessage()</code>，会丢失堆栈信息。</p>\n<h4 id=\"将堆栈信息转换为字符串\" style=\"position:relative;\"><a href=\"#%E5%B0%86%E5%A0%86%E6%A0%88%E4%BF%A1%E6%81%AF%E8%BD%AC%E6%8D%A2%E4%B8%BA%E5%AD%97%E7%AC%A6%E4%B8%B2\" aria-label=\"将堆栈信息转换为字符串 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>将堆栈信息转换为字符串</h4>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>io<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">PrintWriter</span></span><span class=\"token punctuation\">;</span>\r\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>io<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">StringWriter</span></span><span class=\"token punctuation\">;</span>\r\n\r\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Example</span> <span class=\"token punctuation\">{</span>\r\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">final</span> <span class=\"token class-name\">Logger</span> log <span class=\"token operator\">=</span> <span class=\"token class-name\">LoggerFactory</span><span class=\"token punctuation\">.</span><span class=\"token function\">getLogger</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Example</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">someMethod</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n        <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\r\n            <span class=\"token comment\">// 可能抛出异常的代码</span>\r\n            <span class=\"token keyword\">int</span> result <span class=\"token operator\">=</span> <span class=\"token number\">10</span> <span class=\"token operator\">/</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Exception</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n            <span class=\"token comment\">// 将堆栈信息转换为字符串</span>\r\n            <span class=\"token class-name\">StringWriter</span> sw <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">StringWriter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n            e<span class=\"token punctuation\">.</span><span class=\"token function\">printStackTrace</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">PrintWriter</span><span class=\"token punctuation\">(</span>sw<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n            <span class=\"token class-name\">String</span> stackTrace <span class=\"token operator\">=</span> sw<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n            <span class=\"token comment\">// 记录错误日志</span>\r\n            log<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"An error occurred: \"</span> <span class=\"token operator\">+</span> stackTrace<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token punctuation\">}</span>\r\n    <span class=\"token punctuation\">}</span>\r\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><strong>说明</strong>：</p>\n<ul>\n<li>使用 <code class=\"language-text\">StringWriter</code> 和 <code class=\"language-text\">PrintWriter</code> 将堆栈信息转换为字符串。</li>\n</ul>\n<p>可以编写一个工具类来简化堆栈信息的处理。</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ExceptionUtils</span> <span class=\"token punctuation\">{</span>\r\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">String</span> <span class=\"token function\">getStackTraceAsString</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Exception</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n        <span class=\"token class-name\">StringWriter</span> sw <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">StringWriter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        e<span class=\"token punctuation\">.</span><span class=\"token function\">printStackTrace</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">PrintWriter</span><span class=\"token punctuation\">(</span>sw<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token keyword\">return</span> sw<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token punctuation\">}</span>\r\n<span class=\"token punctuation\">}</span>\r\n\r\n<span class=\"token comment\">// 使用工具类</span>\r\n<span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\r\n    <span class=\"token comment\">// 可能抛出异常的代码</span>\r\n    <span class=\"token keyword\">int</span> result <span class=\"token operator\">=</span> <span class=\"token number\">10</span> <span class=\"token operator\">/</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Exception</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n    <span class=\"token comment\">// 记录错误日志</span>\r\n    log<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"An error occurred: \"</span> <span class=\"token operator\">+</span> <span class=\"token class-name\">ExceptionUtils</span><span class=\"token punctuation\">.</span><span class=\"token function\">getStackTraceAsString</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span></code></pre></div>\n<hr>\n<h3 id=\"总结\" style=\"position:relative;\"><a href=\"#%E6%80%BB%E7%BB%93\" aria-label=\"总结 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>总结</h3>\n<ul>\n<li><strong>推荐方法</strong>：使用 <code class=\"language-text\">StringWriter</code> 和 <code class=\"language-text\">PrintWriter</code> 将堆栈信息转换为字符串。</li>\n<li><strong>避免方法</strong>：仅使用 <code class=\"language-text\">e.toString()</code> 或 <code class=\"language-text\">e.getMessage()</code>，因为会丢失堆栈信息。</li>\n</ul>","tableOfContents":"<ul>\n<li>\n<ul>\n<li><a href=\"#%E5%B0%86%E5%A0%86%E6%A0%88%E4%BF%A1%E6%81%AF%E8%BD%AC%E6%8D%A2%E4%B8%BA%E5%AD%97%E7%AC%A6%E4%B8%B2\">将堆栈信息转换为字符串</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#%E6%80%BB%E7%BB%93\">总结</a></p>\n</li>\n</ul>","frontmatter":{"title":"Java中如何使用log.error打印出异常的堆栈信息","tags":["coding"],"description":"在 Java 中，希望使用 `log.error()` 打印异常的完整堆栈信息，记录在日志文件里，而不是打印在控制台，如果直接记录`ex.toString()`或者`ex.getMessage()`，会丢失堆栈信息。","date":"2025-03-06"}}},"pageContext":{"slug":"/log-stacktrace-in-java","previous":{"fields":{"slug":"/mono-and-flux"},"frontmatter":{"title":"Java 中的 Mono 和 Flux 的详细介绍及使用场景","tags":["coding"],"slug":"/mono-and-flux"}},"next":{"fields":{"slug":"/spring-cloud-gateway"},"frontmatter":{"title":"Spring Cloud Gateway","tags":["coding"],"slug":"/spring-cloud-gateway"}}}},"staticQueryHashes":["2052298874"],"slicesMap":{}}