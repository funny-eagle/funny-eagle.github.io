{"componentChunkName":"component---src-templates-blog-post-js","path":"/java-http-url-connection-post/","result":{"data":{"site":{"siteMetadata":{"title":"Jason Yang's Blog"}},"markdownRemark":{"id":"a8acfd73-0c53-5deb-b6b3-8166c13177d0","excerpt":"","html":"<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">HttpURLConnectionPost</span> <span class=\"token punctuation\">{</span>  \n  \n\t<span class=\"token comment\">/**  \n\t* @param args  \n\t* @throws IOException  \n\t*/</span>  \n\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">IOException</span> <span class=\"token punctuation\">{</span>  \n\t\t<span class=\"token function\">readContentFromPost</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  \n\t<span class=\"token punctuation\">}</span>  \n\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">readContentFromPost</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">IOException</span> <span class=\"token punctuation\">{</span>  \n\t\t<span class=\"token comment\">// Post请求的url，与get不同的是不需要带参数  </span>\n\t\t<span class=\"token class-name\">URL</span> postUrl <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">URL</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"http://www.xxxxxxx.com\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  \n\t\t<span class=\"token comment\">// 打开连接  </span>\n\t\t<span class=\"token class-name\">HttpURLConnection</span> connection <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">HttpURLConnection</span><span class=\"token punctuation\">)</span> postUrl<span class=\"token punctuation\">.</span><span class=\"token function\">openConnection</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>       \n\t\t<span class=\"token comment\">// 设置是否向connection输出，因为这个是post请求，参数要放在http正文内，因此需要设为true  </span>\n\t\tconnection<span class=\"token punctuation\">.</span><span class=\"token function\">setDoOutput</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  \n\t\tconnection<span class=\"token punctuation\">.</span><span class=\"token function\">setDoInput</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  \n\t\t<span class=\"token comment\">// 默认是 GET方式  </span>\n\t\tconnection<span class=\"token punctuation\">.</span><span class=\"token function\">setRequestMethod</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"POST\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>        \n\t\t<span class=\"token comment\">// Post 请求不能使用缓存  </span>\n\t\tconnection<span class=\"token punctuation\">.</span><span class=\"token function\">setUseCaches</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>    \n\t\t<span class=\"token comment\">//设置本次连接是否自动重定向   </span>\n\t\tconnection<span class=\"token punctuation\">.</span><span class=\"token function\">setInstanceFollowRedirects</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>        \n\t\t<span class=\"token comment\">// 配置本次连接的Content-type，配置为application/x-www-form-urlencoded的  </span>\n\t\t<span class=\"token comment\">// 意思是正文是urlencoded编码过的form参数  </span>\n\t\tconnection<span class=\"token punctuation\">.</span><span class=\"token function\">setRequestProperty</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Content-Type\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"application/x-www-form-urlencoded\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  \n\t\t<span class=\"token comment\">// 连接，从postUrl.openConnection()至此的配置必须要在connect之前完成，  </span>\n\t\t<span class=\"token comment\">// 要注意的是connection.getOutputStream会隐含的进行connect。  </span>\n\t\tconnection<span class=\"token punctuation\">.</span><span class=\"token function\">connect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  \n\t\t<span class=\"token class-name\">DataOutputStream</span> out <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">DataOutputStream</span><span class=\"token punctuation\">(</span>connection<span class=\"token punctuation\">.</span><span class=\"token function\">getOutputStream</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  \n\t\t<span class=\"token comment\">// 正文，正文内容其实跟get的URL中 '? '后的参数字符串一致  </span>\n\t\t<span class=\"token class-name\">String</span> content <span class=\"token operator\">=</span> <span class=\"token string\">\"字段名=\"</span> <span class=\"token operator\">+</span> <span class=\"token class-name\">URLEncoder</span><span class=\"token punctuation\">.</span><span class=\"token function\">encode</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"字符串值\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"编码\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  \n\t\t<span class=\"token comment\">// DataOutputStream.writeBytes将字符串中的16位的unicode字符以8位的字符形式写到流里面  </span>\n\t\tout<span class=\"token punctuation\">.</span><span class=\"token function\">writeBytes</span><span class=\"token punctuation\">(</span>content<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  \n\t\tout<span class=\"token punctuation\">.</span><span class=\"token function\">flush</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  \n\t\tout<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  \n\t\t<span class=\"token class-name\">BufferedReader</span> reader <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">BufferedReader</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">InputStreamReader</span><span class=\"token punctuation\">(</span>connection<span class=\"token punctuation\">.</span><span class=\"token function\">getInputStream</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  \n\t\t<span class=\"token class-name\">String</span> line<span class=\"token punctuation\">;</span>  \n\t\t<span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>line <span class=\"token operator\">=</span> reader<span class=\"token punctuation\">.</span><span class=\"token function\">readLine</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>  \n\t\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>line<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  \n\t\t<span class=\"token punctuation\">}</span>  \n\t\treader<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  \n\t\t<span class=\"token comment\">//断开连接 </span>\n\t\tconnection<span class=\"token punctuation\">.</span><span class=\"token function\">disconnect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  \n\t<span class=\"token punctuation\">}</span>  \n  \n<span class=\"token punctuation\">}</span></code></pre></div>","frontmatter":{"title":"JAVA HttpURLConnection Post方式提交传递参数","date":"2018年05月08日 16:46:13","description":"如题，一段代码示例。"}},"previous":{"fields":{"slug":"/sleepless-in-java/"},"frontmatter":{"title":"读《Java夜未眠》部分笔记"}},"next":{"fields":{"slug":"/Integrate-an-h2-database-in-your-springboot-app/"},"frontmatter":{"title":"Integrate an H2 Database in Your Spring Boot App"}}},"pageContext":{"id":"a8acfd73-0c53-5deb-b6b3-8166c13177d0","previousPostId":"0d0967cf-0a41-505f-b135-7bf0629cf378","nextPostId":"870d5556-112f-54e6-994d-ca1cac591d11"}},"staticQueryHashes":["2841359383","3257411868"],"slicesMap":{}}