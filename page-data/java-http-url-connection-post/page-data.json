{"componentChunkName":"component---src-templates-blog-post-js","path":"/java-http-url-connection-post/","result":{"data":{"site":{"siteMetadata":{"title":"Jason Yang's Blog"}},"markdownRemark":{"id":"ed99b9d7-4011-53bf-ba9a-b1bbd31a2c74","excerpt":"","html":"<deckgo-highlight-code language=\"java\" terminal=\"carbon\" theme=\"one-dark\" line-numbers=\"true\"  >\n          <code slot=\"code\">public class HttpURLConnectionPost {  \r\n  \r\n\t/**  \r\n\t* @param args  \r\n\t* @throws IOException  \r\n\t*/  \r\n\tpublic static void main(String[] args) throws IOException {  \r\n\t\treadContentFromPost();  \r\n\t}  \r\n\tpublic static void readContentFromPost() throws IOException {  \r\n\t\t// Post请求的url，与get不同的是不需要带参数  \r\n\t\tURL postUrl = new URL(&quot;http://www.xxxxxxx.com&quot;);  \r\n\t\t// 打开连接  \r\n\t\tHttpURLConnection connection = (HttpURLConnection) postUrl.openConnection();       \r\n\t\t// 设置是否向connection输出，因为这个是post请求，参数要放在http正文内，因此需要设为true  \r\n\t\tconnection.setDoOutput(true);  \r\n\t\tconnection.setDoInput(true);  \r\n\t\t// 默认是 GET方式  \r\n\t\tconnection.setRequestMethod(&quot;POST&quot;);        \r\n\t\t// Post 请求不能使用缓存  \r\n\t\tconnection.setUseCaches(false);    \r\n\t\t//设置本次连接是否自动重定向   \r\n\t\tconnection.setInstanceFollowRedirects(true);        \r\n\t\t// 配置本次连接的Content-type，配置为application/x-www-form-urlencoded的  \r\n\t\t// 意思是正文是urlencoded编码过的form参数  \r\n\t\tconnection.setRequestProperty(&quot;Content-Type&quot;,&quot;application/x-www-form-urlencoded&quot;);  \r\n\t\t// 连接，从postUrl.openConnection()至此的配置必须要在connect之前完成，  \r\n\t\t// 要注意的是connection.getOutputStream会隐含的进行connect。  \r\n\t\tconnection.connect();  \r\n\t\tDataOutputStream out = new DataOutputStream(connection.getOutputStream());  \r\n\t\t// 正文，正文内容其实跟get的URL中 &#39;? &#39;后的参数字符串一致  \r\n\t\tString content = &quot;字段名=&quot; + URLEncoder.encode(&quot;字符串值&quot;, &quot;编码&quot;);  \r\n\t\t// DataOutputStream.writeBytes将字符串中的16位的unicode字符以8位的字符形式写到流里面  \r\n\t\tout.writeBytes(content);  \r\n\t\tout.flush();  \r\n\t\tout.close();  \r\n\t\tBufferedReader reader = new BufferedReader(new InputStreamReader(connection.getInputStream()));  \r\n\t\tString line;  \r\n\t\twhile ((line = reader.readLine()) != null){  \r\n\t\t\tSystem.out.println(line);  \r\n\t\t}  \r\n\t\treader.close();  \r\n\t\t//断开连接 \r\n\t\tconnection.disconnect();  \r\n\t}  \r\n  \r\n}</code>\n        </deckgo-highlight-code>","frontmatter":{"title":"JAVA HttpURLConnection Post方式提交传递参数","date":"2018年05月08日 16:46:13","description":"如题，一段代码示例。"}},"previous":{"fields":{"slug":"/sleepless-in-java/"},"frontmatter":{"title":"读《Java夜未眠》部分笔记"}},"next":{"fields":{"slug":"/Integrate-an-h2-database-in-your-springboot-app/"},"frontmatter":{"title":"Integrate an H2 Database in Your Spring Boot App"}}},"pageContext":{"id":"ed99b9d7-4011-53bf-ba9a-b1bbd31a2c74","previousPostId":"72bd58fc-9af6-5d2d-9c29-bea0119df543","nextPostId":"ee9dfc53-d714-5bd9-9627-5c4838e9991f"}},"staticQueryHashes":["3274528899","3589320610"],"slicesMap":{}}