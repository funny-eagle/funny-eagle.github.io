{"expireTime":9007200810530856000,"key":"transformer-remark-markdown-ast-82de4942af1b702edb208df05654fba2-gatsby-remark-imagesgatsby-remark-responsive-iframegatsby-remark-prismjsgatsby-remark-copy-linked-filesgatsby-remark-smartypants-","val":{"type":"root","children":[{"type":"heading","depth":2,"children":[{"type":"text","value":"Algorithm","position":{"start":{"line":1,"column":4,"offset":3},"end":{"line":1,"column":13,"offset":12},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":1,"column":13,"offset":12},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Jewels and Stones","position":{"start":{"line":3,"column":5,"offset":18},"end":{"line":3,"column":22,"offset":35},"indent":[]}}],"position":{"start":{"line":3,"column":1,"offset":14},"end":{"line":3,"column":22,"offset":35},"indent":[]}},{"type":"html","lang":"java","value":"<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">package</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>nocoder<span class=\"token punctuation\">.</span>leetcode<span class=\"token punctuation\">.</span>solution</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">/**\n * You're given strings J representing the types of stones that are jewels, and S\n * representing the stones you have.  Each character in S is a type of\n * stone you have.  You want to know how many of the stones you have are also jewels.\n *\n * The letters in J are guaranteed distinct, and all characters in J and S are letters.\n * Letters are case sensitive, so \"a\" is considered a different type of stone from \"A\".\n *\n * Example 1:\n *\n * Input: J = \"aA\", S = \"aAAbbbb\"\n * Output: 3\n * Example 2:\n *\n * Input: J = \"z\", S = \"ZZ\"\n * Output: 0\n * Note:\n *\n * S and J will consist of letters and have length at most 50.\n * The characters in J are distinct.\n * @author jason\n * @date 18/9/16.\n */</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">JewelsAndStones</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">int</span> <span class=\"token function\">numJewelsInStones</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> <span class=\"token class-name\">J</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span> <span class=\"token class-name\">S</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">int</span> res <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">J</span> <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">||</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">.</span><span class=\"token function\">equals</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">J</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> <span class=\"token class-name\">S</span> <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">||</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">.</span><span class=\"token function\">equals</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">S</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">return</span> res<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token class-name\">String</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> jArr <span class=\"token operator\">=</span> <span class=\"token class-name\">J</span><span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">String</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> sArr <span class=\"token operator\">=</span> <span class=\"token class-name\">S</span><span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> jArr<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> j <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;</span> sArr<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>jArr<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">equals</span><span class=\"token punctuation\">(</span>sArr<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n                    <span class=\"token operator\">++</span>res<span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">return</span> res<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token function\">numJewelsInStones</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ABC\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"ABCCDE\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token function\">numJewelsInStones</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token function\">numJewelsInStones</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token function\">numJewelsInStones</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ABC\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token function\">numJewelsInStones</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"ABCCDE\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token function\">numJewelsInStones</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"abc\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"rewqabc\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":5,"column":1,"offset":37},"end":{"line":61,"column":4,"offset":1737},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Review","position":{"start":{"line":63,"column":4,"offset":1742},"end":{"line":63,"column":10,"offset":1748},"indent":[]}}],"position":{"start":{"line":63,"column":1,"offset":1739},"end":{"line":63,"column":10,"offset":1748},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Strategy Pattern Tutorial with Java Examples","position":{"start":{"line":65,"column":5,"offset":1754},"end":{"line":65,"column":49,"offset":1798},"indent":[]}}],"position":{"start":{"line":65,"column":1,"offset":1750},"end":{"line":65,"column":49,"offset":1798},"indent":[]}},{"type":"blockquote","children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://dzone.com/articles/design-patterns-strategy","children":[{"type":"text","value":"https://dzone.com/articles/design-patterns-strategy","position":{"start":{"line":67,"column":3,"offset":1802},"end":{"line":67,"column":54,"offset":1853},"indent":[]}}],"position":{"start":{"line":67,"column":3,"offset":1802},"end":{"line":67,"column":54,"offset":1853},"indent":[]}}],"position":{"start":{"line":67,"column":3,"offset":1802},"end":{"line":67,"column":54,"offset":1853},"indent":[]}}],"position":{"start":{"line":67,"column":1,"offset":1800},"end":{"line":67,"column":54,"offset":1853},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"a useful pattern in changing algorithm implementations at runtime, without causing tight coupling.","position":{"start":{"line":69,"column":1,"offset":1855},"end":{"line":69,"column":99,"offset":1953},"indent":[]}}],"position":{"start":{"line":69,"column":1,"offset":1855},"end":{"line":69,"column":99,"offset":1953},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Defines a set of encapsulated algorithms that can be swapped to carry out a specific behaviour","position":{"start":{"line":71,"column":3,"offset":1957},"end":{"line":71,"column":97,"offset":2051},"indent":[]}}],"position":{"start":{"line":71,"column":1,"offset":1955},"end":{"line":71,"column":99,"offset":2053},"indent":[]}}],"position":{"start":{"line":71,"column":1,"offset":1955},"end":{"line":71,"column":99,"offset":2053},"indent":[]}},{"type":"paragraph","children":[{"type":"image","title":null,"url":"https://raw.githubusercontent.com/yangjinlong86/nocoder/master/data/images/design-pattern/strategy_pattern.png","alt":null,"position":{"start":{"line":73,"column":1,"offset":2055},"end":{"line":73,"column":116,"offset":2170},"indent":[]}}],"position":{"start":{"line":73,"column":1,"offset":2055},"end":{"line":73,"column":116,"offset":2170},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"简单实用的策略模式，Context 由一个 Strategy接口和若干行为方法组成。在运行时向Context传入不同的策略实现类来执行对应的行为方法。","position":{"start":{"line":75,"column":1,"offset":2172},"end":{"line":75,"column":76,"offset":2247},"indent":[]}}],"position":{"start":{"line":75,"column":1,"offset":2172},"end":{"line":75,"column":76,"offset":2247},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"作者使用压缩文件格式rar或者zip为示例，阐述了策略模式的使用场景和具体实现，代码如下：","position":{"start":{"line":77,"column":1,"offset":2249},"end":{"line":77,"column":46,"offset":2294},"indent":[]}}],"position":{"start":{"line":77,"column":1,"offset":2249},"end":{"line":77,"column":46,"offset":2294},"indent":[]}},{"type":"html","lang":"java","value":"<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token comment\">//Strategy Interface</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">interface</span> <span class=\"token class-name\">CompressionStrategy</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">compressFiles</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ArrayList</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">File</span><span class=\"token punctuation\">></span></span> files<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":79,"column":1,"offset":2296},"end":{"line":84,"column":4,"offset":2421},"indent":[1,1,1,1,1]}},{"type":"html","lang":"java","value":"<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ZipCompressionStrategy</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">CompressionStrategy</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">compressFiles</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ArrayList</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">File</span><span class=\"token punctuation\">></span></span> files<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">//using ZIP approach</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":86,"column":1,"offset":2423},"end":{"line":92,"column":4,"offset":2587},"indent":[1,1,1,1,1,1]}},{"type":"html","lang":"java","value":"<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">RarCompressionStrategy</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">CompressionStrategy</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">compressFiles</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ArrayList</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">File</span><span class=\"token punctuation\">></span></span> files<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">//using RAR approach</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":94,"column":1,"offset":2589},"end":{"line":100,"column":4,"offset":2753},"indent":[1,1,1,1,1,1]}},{"type":"html","lang":"java","value":"<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">CompressionContext</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">private</span> <span class=\"token class-name\">CompressionStrategy</span> strategy<span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">//this can be set at runtime by the application preferences</span>\n  <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">setCompressionStrategy</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">CompressionStrategy</span> strategy<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>strategy <span class=\"token operator\">=</span> strategy<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  \n  <span class=\"token comment\">//use the strategy</span>\n  <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">createArchive</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ArrayList</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">File</span><span class=\"token punctuation\">></span></span> files<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    strategy<span class=\"token punctuation\">.</span><span class=\"token function\">compressFiles</span><span class=\"token punctuation\">(</span>files<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":102,"column":1,"offset":2755},"end":{"line":115,"column":4,"offset":3123},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"html","lang":"java","value":"<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Client</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token class-name\">CompressionContext</span> ctx <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">CompressionContext</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">//we could assume context is already set by preferences</span>\n    ctx<span class=\"token punctuation\">.</span><span class=\"token function\">setCompressionStrategy</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">ZipCompressionStrategy</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">//get a list of files...</span>\n    ctx<span class=\"token punctuation\">.</span><span class=\"token function\">createArchive</span><span class=\"token punctuation\">(</span>fileList<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":117,"column":1,"offset":3125},"end":{"line":128,"column":4,"offset":3447},"indent":[1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Tip","position":{"start":{"line":131,"column":4,"offset":3453},"end":{"line":131,"column":7,"offset":3456},"indent":[]}}],"position":{"start":{"line":131,"column":1,"offset":3450},"end":{"line":131,"column":7,"offset":3456},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"canal-server docker","position":{"start":{"line":133,"column":5,"offset":3462},"end":{"line":133,"column":24,"offset":3481},"indent":[]}}],"position":{"start":{"line":133,"column":1,"offset":3458},"end":{"line":133,"column":24,"offset":3481},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"升级canal到1.1.1版本，本体验证通过，后续准备替换测试和生产环境的canal-server为docker版本。","position":{"start":{"line":135,"column":1,"offset":3483},"end":{"line":135,"column":60,"offset":3542},"indent":[]}}],"position":{"start":{"line":135,"column":1,"offset":3483},"end":{"line":135,"column":60,"offset":3542},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"docker pull canal/canal-server:v1.1.0","position":{"start":{"line":137,"column":1,"offset":3544},"end":{"line":137,"column":38,"offset":3581},"indent":[]}}],"position":{"start":{"line":137,"column":1,"offset":3544},"end":{"line":137,"column":38,"offset":3581},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"docker run 需要挂载logs，其它的参数都可以通过","position":{"start":{"line":139,"column":1,"offset":3583},"end":{"line":139,"column":31,"offset":3613},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">-e</code>","position":{"start":{"line":139,"column":31,"offset":3613},"end":{"line":139,"column":35,"offset":3617},"indent":[]}},{"type":"text","value":"的方式来配置","position":{"start":{"line":139,"column":35,"offset":3617},"end":{"line":139,"column":41,"offset":3623},"indent":[]}}],"position":{"start":{"line":139,"column":1,"offset":3583},"end":{"line":139,"column":41,"offset":3623},"indent":[]}},{"type":"html","lang":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">-e canal.auto.scan=false \\\n-e canal.destinations=test \\\n-e canal.instance.master.address=127.0.0.1:3306  \\\n-e canal.instance.dbUsername=canal  \\\n-e canal.instance.dbPassword=canal  \\\n-e canal.instance.connectionCharset=UTF-8 \\\n-e canal.instance.tsdb.enable=true \\\n-e canal.instance.gtidon=false</code></pre></div>","position":{"start":{"line":141,"column":1,"offset":3625},"end":{"line":150,"column":4,"offset":3927},"indent":[1,1,1,1,1,1,1,1,1]}},{"type":"blockquote","children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://github.com/alibaba/canal/wiki/Docker-QuickStart","children":[{"type":"text","value":"https://github.com/alibaba/canal/wiki/Docker-QuickStart","position":{"start":{"line":152,"column":3,"offset":3931},"end":{"line":152,"column":58,"offset":3986},"indent":[]}}],"position":{"start":{"line":152,"column":3,"offset":3931},"end":{"line":152,"column":58,"offset":3986},"indent":[]}}],"position":{"start":{"line":152,"column":3,"offset":3931},"end":{"line":152,"column":58,"offset":3986},"indent":[]}}],"position":{"start":{"line":152,"column":1,"offset":3929},"end":{"line":153,"column":3,"offset":3989},"indent":[1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Share","position":{"start":{"line":155,"column":4,"offset":3994},"end":{"line":155,"column":9,"offset":3999},"indent":[]}}],"position":{"start":{"line":155,"column":1,"offset":3991},"end":{"line":155,"column":9,"offset":3999},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Strategy pattern","position":{"start":{"line":157,"column":5,"offset":4005},"end":{"line":157,"column":21,"offset":4021},"indent":[]}}],"position":{"start":{"line":157,"column":1,"offset":4001},"end":{"line":157,"column":21,"offset":4021},"indent":[]}},{"type":"blockquote","children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://design-patterns.readthedocs.io/zh_CN/latest/behavioral_patterns/strategy.html#id10","children":[{"type":"text","value":"https://design-patterns.readthedocs.io/zh","position":{"start":{"line":159,"column":3,"offset":4025},"end":{"line":159,"column":44,"offset":4066},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"CN/latest/behavioral","position":{"start":{"line":159,"column":45,"offset":4067},"end":{"line":159,"column":65,"offset":4087},"indent":[]}}],"position":{"start":{"line":159,"column":44,"offset":4066},"end":{"line":159,"column":66,"offset":4088},"indent":[]}},{"type":"text","value":"patterns/strategy.html#id10","position":{"start":{"line":159,"column":66,"offset":4088},"end":{"line":159,"column":93,"offset":4115},"indent":[]}}],"position":{"start":{"line":159,"column":3,"offset":4025},"end":{"line":159,"column":93,"offset":4115},"indent":[]}}],"position":{"start":{"line":159,"column":3,"offset":4025},"end":{"line":159,"column":93,"offset":4115},"indent":[]}}],"position":{"start":{"line":159,"column":1,"offset":4023},"end":{"line":159,"column":93,"offset":4115},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"策略模式的优点","position":{"start":{"line":161,"column":3,"offset":4119},"end":{"line":161,"column":10,"offset":4126},"indent":[]}}],"position":{"start":{"line":161,"column":1,"offset":4117},"end":{"line":161,"column":12,"offset":4128},"indent":[]}}],"position":{"start":{"line":161,"column":1,"offset":4117},"end":{"line":161,"column":12,"offset":4128},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"策略模式提供了对“开闭原则”的完美支持，用户可以在不修改原有系统的基础上选择算法或行为，也可以灵活地增加新的算法或行为。\n策略模式提供了管理相关的算法族的办法。\n策略模式提供了可以替换继承关系的办法。\n使用策略模式可以避免使用多重条件转移语句。","position":{"start":{"line":163,"column":1,"offset":4130},"end":{"line":166,"column":22,"offset":4252},"indent":[1,1,1]}}],"position":{"start":{"line":163,"column":1,"offset":4130},"end":{"line":166,"column":22,"offset":4252},"indent":[1,1,1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"策略模式的缺点","position":{"start":{"line":168,"column":3,"offset":4256},"end":{"line":168,"column":10,"offset":4263},"indent":[]}}],"position":{"start":{"line":168,"column":1,"offset":4254},"end":{"line":168,"column":12,"offset":4265},"indent":[]}}],"position":{"start":{"line":168,"column":1,"offset":4254},"end":{"line":168,"column":12,"offset":4265},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"客户端必须知道所有的策略类，并自行决定使用哪一个策略类。\n策略模式将造成产生很多策略类，可以通过使用享元模式在一定程度上减少对象的数量","position":{"start":{"line":170,"column":1,"offset":4267},"end":{"line":171,"column":39,"offset":4334},"indent":[1]}}],"position":{"start":{"line":170,"column":1,"offset":4267},"end":{"line":171,"column":39,"offset":4334},"indent":[1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"在以下情况下可以使用策略模式","position":{"start":{"line":173,"column":3,"offset":4338},"end":{"line":173,"column":17,"offset":4352},"indent":[]}}],"position":{"start":{"line":173,"column":1,"offset":4336},"end":{"line":173,"column":19,"offset":4354},"indent":[]}}],"position":{"start":{"line":173,"column":1,"offset":4336},"end":{"line":173,"column":19,"offset":4354},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"如果在一个系统里面有许多类，它们之间的区别仅在于它们的行为，那么使用策略模式可以动态地让一个对象在许多行为中选择一种行为。\n一个系统需要动态地在几种算法中选择一种。\n如果一个对象有很多的行为，如果不用恰当的模式，这些行为就只好使用多重的条件选择语句来实现。\n不希望客户端知道复杂的、与算法相关的数据结构，在具体策略类中封装算法和相关的数据结构，提高算法的保密性与安全性。","position":{"start":{"line":175,"column":1,"offset":4356},"end":{"line":178,"column":57,"offset":4541},"indent":[1,1,1]}}],"position":{"start":{"line":175,"column":1,"offset":4356},"end":{"line":178,"column":57,"offset":4541},"indent":[1,1,1]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":179,"column":1,"offset":4542}}}}