{"expireTime":9007200811184863000,"key":"transformer-remark-markdown-html-ast-05fcf9e4f14964b156d273fb70468ce3-gatsby-remark-imagesgatsby-remark-responsive-iframegatsby-remark-prismjsgatsby-remark-copy-linked-filesgatsby-remark-smartypants-","val":{"type":"root","children":[{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Algorithm:","position":{"start":{"line":2,"column":3,"offset":3},"end":{"line":2,"column":13,"offset":13}}},{"type":"element","tagName":"a","properties":{"href":"https://leetcode.com/problems/squares-of-a-sorted-array/"},"children":[{"type":"text","value":"977. Squares of a Sorted Array","position":{"start":{"line":2,"column":14,"offset":14},"end":{"line":2,"column":44,"offset":44}}}],"position":{"start":{"line":2,"column":13,"offset":13},"end":{"line":2,"column":103,"offset":103}}}],"position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":103,"offset":103}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Review: ","position":{"start":{"line":3,"column":3,"offset":106},"end":{"line":3,"column":11,"offset":114}}},{"type":"element","tagName":"a","properties":{"href":"http://tom.preston-werner.com/2010/08/23/readme-driven-development.html"},"children":[{"type":"text","value":"Readme Driven Development","position":{"start":{"line":3,"column":12,"offset":115},"end":{"line":3,"column":37,"offset":140}}}],"position":{"start":{"line":3,"column":11,"offset":114},"end":{"line":3,"column":111,"offset":214}}}],"position":{"start":{"line":3,"column":1,"offset":104},"end":{"line":3,"column":111,"offset":214}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Tip: Docker 容器中centos的编码问题","position":{"start":{"line":4,"column":3,"offset":217},"end":{"line":4,"column":29,"offset":243}}}],"position":{"start":{"line":4,"column":1,"offset":215},"end":{"line":4,"column":29,"offset":243}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Share: 开源项目的选择和使用","position":{"start":{"line":5,"column":3,"offset":246},"end":{"line":5,"column":20,"offset":263}}}],"position":{"start":{"line":5,"column":1,"offset":244},"end":{"line":5,"column":20,"offset":263}}},{"type":"text","value":"\n"}],"position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":5,"column":20,"offset":263}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"Algorithm","position":{"start":{"line":8,"column":4,"offset":269},"end":{"line":8,"column":13,"offset":278}}}],"position":{"start":{"line":8,"column":1,"offset":266},"end":{"line":8,"column":13,"offset":278}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">package</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>nocoder<span class=\"token punctuation\">.</span>leetcode<span class=\"token punctuation\">.</span>solution</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">/**\n * 977. Squares of a Sorted Array\n * &lt;p>\n * Given an array of integers A sorted in non-decreasing order,\n * return an array of the squares of each number, also in sorted non-decreasing order.\n * &lt;p>\n * Example 1:\n * &lt;p>\n * Input: [-4,-1,0,3,10]\n * Output: [0,1,9,16,100]\n * Example 2:\n * &lt;p>\n * Input: [-7,-3,2,3,11]\n * Output: [4,9,9,49,121]\n * &lt;p>\n * &lt;p>\n * Note:\n * &lt;p>\n * 1 &lt;= A.length &lt;= 10000\n * -10000 &lt;= A[i] &lt;= 10000\n * A is sorted in non-decreasing order.\n *\n * @author yangjinlong\n */</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">SquaresOfASortedArray</span> <span class=\"token punctuation\">{</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> arr <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">{</span><span class=\"token operator\">-</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">sortedSquares</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token function\">sortedSquares</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token class-name\">A</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> arr <span class=\"token operator\">=</span> <span class=\"token function\">powArray</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">A</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">sort</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> arr<span class=\"token punctuation\">.</span>length <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> arr<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token function\">powArray</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> arr<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> arr<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            arr<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span> <span class=\"token class-name\">Math</span><span class=\"token punctuation\">.</span><span class=\"token function\">pow</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">return</span> arr<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">sort</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> arr<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> head<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> tail<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>head <span class=\"token operator\">>=</span> tail <span class=\"token operator\">||</span> arr <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">||</span> arr<span class=\"token punctuation\">.</span>length <span class=\"token operator\">&lt;=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> head<span class=\"token punctuation\">,</span> j <span class=\"token operator\">=</span> tail<span class=\"token punctuation\">,</span> pivot <span class=\"token operator\">=</span> arr<span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span>head <span class=\"token operator\">+</span> tail<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">&lt;=</span> j<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;</span> pivot<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token operator\">++</span>i<span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n            <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">></span> pivot<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token operator\">--</span>j<span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">&lt;</span> j<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token keyword\">int</span> t <span class=\"token operator\">=</span> arr<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n                arr<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> arr<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n                arr<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> t<span class=\"token punctuation\">;</span>\n                <span class=\"token operator\">++</span>i<span class=\"token punctuation\">;</span>\n                <span class=\"token operator\">--</span>j<span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">==</span> j<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token operator\">++</span>i<span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token function\">sort</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">,</span> head<span class=\"token punctuation\">,</span> j<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">sort</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">,</span> tail<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":9,"column":1,"offset":279},"end":{"line":83,"column":4,"offset":2013}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"Review","position":{"start":{"line":85,"column":4,"offset":2018},"end":{"line":85,"column":10,"offset":2024}}}],"position":{"start":{"line":85,"column":1,"offset":2015},"end":{"line":85,"column":10,"offset":2024}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"http://tom.preston-werner.com/2010/08/23/readme-driven-development.html"},"children":[{"type":"text","value":"Readme Driven Development","position":{"start":{"line":87,"column":6,"offset":2031},"end":{"line":87,"column":31,"offset":2056}}}],"position":{"start":{"line":87,"column":5,"offset":2030},"end":{"line":87,"column":105,"offset":2130}}}],"position":{"start":{"line":87,"column":1,"offset":2026},"end":{"line":87,"column":105,"offset":2130}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"RDD 开发","position":{"start":{"line":89,"column":3,"offset":2134},"end":{"line":89,"column":9,"offset":2140}}}],"position":{"start":{"line":89,"column":1,"offset":2132},"end":{"line":89,"column":11,"offset":2142}}},{"type":"text","value":"的几个优势","position":{"start":{"line":89,"column":11,"offset":2142},"end":{"line":89,"column":16,"offset":2147}}}],"position":{"start":{"line":89,"column":1,"offset":2132},"end":{"line":89,"column":16,"offset":2147}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"最为重要的一点是，给自己一次重新审视项目，又无需每次为了改变主意而去修改代码而花去开销的机会，例如整体应该如何组织、公用API里到底应该包含哪些东西。还记得第一次写自动化测试代码，意识到揪出全部的错误从而防止那些问题悄悄跑进代码里去吗？在项目真正编码前写一个Readme的感觉是如出一辙的。","position":{"start":{"line":91,"column":3,"offset":2151},"end":{"line":91,"column":148,"offset":2296}}}],"position":{"start":{"line":91,"column":1,"offset":2149},"end":{"line":91,"column":148,"offset":2296}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"为了明确应该实现什么而去写Readme会产生一些副产品，会得到一份写的非常棒的文档。当在项目伊始，也就是兴奋度和动机处于最高的阶段，写一个文档会十分容易。事后再补Readme将是一种绝对的障碍，并且会发现遗漏了许多重要的细节。","position":{"start":{"line":92,"column":3,"offset":2299},"end":{"line":92,"column":116,"offset":2412}}}],"position":{"start":{"line":92,"column":1,"offset":2297},"end":{"line":92,"column":116,"offset":2412}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"如果与一群开发者一起协同工作，将会发现会从Readme收益颇多。如果其他成员在尚未完成项目前便可以读到这份Readme，他们将大可放心的在将与项目有交互的代码上开始工作。如果没有预先定义好的接口，团队只能顺序地编码或者面临重新实现大量代码的窘境。","position":{"start":{"line":93,"column":3,"offset":2415},"end":{"line":93,"column":126,"offset":2538}}}],"position":{"start":{"line":93,"column":1,"offset":2413},"end":{"line":93,"column":126,"offset":2538}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"基于白纸黑字的讨论将会容易的多，而在一个没有任何成文内容的讨论话题上，事情往往会演变成争论不休。把建议的解决方案写下来这样一个简单的行动，代表了一个具体的想法，从而能被讨论，迭代发展下去。","position":{"start":{"line":94,"column":3,"offset":2541},"end":{"line":94,"column":97,"offset":2635}}}],"position":{"start":{"line":94,"column":1,"offset":2539},"end":{"line":94,"column":97,"offset":2635}}},{"type":"text","value":"\n"}],"position":{"start":{"line":91,"column":1,"offset":2149},"end":{"line":94,"column":97,"offset":2635}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"Tip","position":{"start":{"line":96,"column":4,"offset":2640},"end":{"line":96,"column":7,"offset":2643}}}],"position":{"start":{"line":96,"column":1,"offset":2637},"end":{"line":96,"column":7,"offset":2643}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Docker 容器中centos的编码问题","position":{"start":{"line":98,"column":5,"offset":2649},"end":{"line":98,"column":26,"offset":2670}}}],"position":{"start":{"line":98,"column":1,"offset":2645},"end":{"line":98,"column":26,"offset":2670}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"前几天项目中有个微信提现的BUG，微信端返回“持卡人姓名不正确”，检查了接口调用方式，参数以及种种检查和测试之后，发现同样的代码本地是可以调通的，只有 docker 环境下会出问题，于是把问题定位偏向了编码问题，开始 code review，发现了这样一行代码","position":{"start":{"line":100,"column":1,"offset":2672},"end":{"line":100,"column":131,"offset":2802}}},{"type":"raw","value":"<code class=\"language-text\">estr = RSAUtil.encrypt(data.getBytes(), pub, 2048, 11, rsa);</code>","position":{"start":{"line":100,"column":131,"offset":2802},"end":{"line":100,"column":193,"offset":2864}}},{"type":"text","value":"，问题基本定位到了，","position":{"start":{"line":100,"column":193,"offset":2864},"end":{"line":100,"column":203,"offset":2874}}},{"type":"raw","value":"<code class=\"language-text\">data</code>","position":{"start":{"line":100,"column":203,"offset":2874},"end":{"line":100,"column":209,"offset":2880}}},{"type":"text","value":" 是个","position":{"start":{"line":100,"column":209,"offset":2880},"end":{"line":100,"column":212,"offset":2883}}},{"type":"raw","value":"<code class=\"language-text\">String</code>","position":{"start":{"line":100,"column":212,"offset":2883},"end":{"line":100,"column":220,"offset":2891}}},{"type":"text","value":"，在调用","position":{"start":{"line":100,"column":220,"offset":2891},"end":{"line":100,"column":224,"offset":2895}}},{"type":"raw","value":"<code class=\"language-text\">data.getBytes()</code>","position":{"start":{"line":100,"column":224,"offset":2895},"end":{"line":100,"column":241,"offset":2912}}},{"type":"text","value":" 方法是并未指定字符集，在开发的本地环境，编码环境已经设置为","position":{"start":{"line":100,"column":241,"offset":2912},"end":{"line":100,"column":271,"offset":2942}}},{"type":"raw","value":"<code class=\"language-text\">UTF-8</code>","position":{"start":{"line":100,"column":271,"offset":2942},"end":{"line":100,"column":278,"offset":2949}}},{"type":"text","value":"，所以可以编码不会有问题，但是在测试环境上，Docker 的镜像内包含了一个centos，","position":{"start":{"line":100,"column":278,"offset":2949},"end":{"line":100,"column":323,"offset":2994}}},{"type":"raw","value":"<code class=\"language-text\">Dockerfile</code>","position":{"start":{"line":100,"column":323,"offset":2994},"end":{"line":100,"column":335,"offset":3006}}},{"type":"text","value":"中并未指定系统的字符集，默认为","position":{"start":{"line":100,"column":335,"offset":3006},"end":{"line":100,"column":350,"offset":3021}}},{"type":"raw","value":"<code class=\"language-text\">POSIX</code>","position":{"start":{"line":100,"column":350,"offset":3021},"end":{"line":100,"column":357,"offset":3028}}},{"type":"text","value":"，所以在","position":{"start":{"line":100,"column":357,"offset":3028},"end":{"line":100,"column":361,"offset":3032}}},{"type":"raw","value":"<code class=\"language-text\">data.getBytes()</code>","position":{"start":{"line":100,"column":361,"offset":3032},"end":{"line":100,"column":378,"offset":3049}}},{"type":"text","value":" 的时候，会使用","position":{"start":{"line":100,"column":378,"offset":3049},"end":{"line":100,"column":386,"offset":3057}}},{"type":"raw","value":"<code class=\"language-text\">POSIX</code>","position":{"start":{"line":100,"column":386,"offset":3057},"end":{"line":100,"column":393,"offset":3064}}},{"type":"text","value":"来编码，于是就乱码了。","position":{"start":{"line":100,"column":393,"offset":3064},"end":{"line":100,"column":404,"offset":3075}}}],"position":{"start":{"line":100,"column":1,"offset":2672},"end":{"line":100,"column":404,"offset":3075}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"解决办法有两种：","position":{"start":{"line":102,"column":1,"offset":3077},"end":{"line":102,"column":9,"offset":3085}}}],"position":{"start":{"line":102,"column":1,"offset":3077},"end":{"line":102,"column":9,"offset":3085}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"1、修改代码，指定字符集 ","position":{"start":{"line":104,"column":1,"offset":3087},"end":{"line":104,"column":14,"offset":3100}}},{"type":"raw","value":"<code class=\"language-text\">data.getBytes(&quot;UTF-8&quot;)</code>","position":{"start":{"line":104,"column":14,"offset":3100},"end":{"line":104,"column":38,"offset":3124}}}],"position":{"start":{"line":104,"column":1,"offset":3087},"end":{"line":104,"column":38,"offset":3124}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"2、在","position":{"start":{"line":106,"column":1,"offset":3126},"end":{"line":106,"column":4,"offset":3129}}},{"type":"raw","value":"<code class=\"language-text\">Dockerfile</code>","position":{"start":{"line":106,"column":4,"offset":3129},"end":{"line":106,"column":16,"offset":3141}}},{"type":"text","value":"中添加一行","position":{"start":{"line":106,"column":16,"offset":3141},"end":{"line":106,"column":21,"offset":3146}}},{"type":"raw","value":"<code class=\"language-text\">ENV LANG C.UTF-8</code>","position":{"start":{"line":106,"column":21,"offset":3146},"end":{"line":106,"column":39,"offset":3164}}},{"type":"text","value":"指定系统的默认字符集","position":{"start":{"line":106,"column":39,"offset":3164},"end":{"line":106,"column":49,"offset":3174}}}],"position":{"start":{"line":106,"column":1,"offset":3126},"end":{"line":106,"column":49,"offset":3174}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"Share","position":{"start":{"line":108,"column":4,"offset":3179},"end":{"line":108,"column":9,"offset":3184}}}],"position":{"start":{"line":108,"column":1,"offset":3176},"end":{"line":108,"column":9,"offset":3184}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"开源项目的选择和使用","position":{"start":{"line":110,"column":5,"offset":3190},"end":{"line":110,"column":15,"offset":3200}}}],"position":{"start":{"line":110,"column":1,"offset":3186},"end":{"line":110,"column":15,"offset":3200}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"项目中经常会使用开源的项目或者库，选择和使用开源项目，我们要关注哪些重要的点，我主要参考了","position":{"start":{"line":112,"column":1,"offset":3202},"end":{"line":112,"column":46,"offset":3247}}},{"type":"element","tagName":"a","properties":{"href":"https://time.geekbang.org/column/article/13043"},"children":[{"type":"text","value":"再谈开源项目：如何选择、使用以及二次开发？","position":{"start":{"line":112,"column":47,"offset":3248},"end":{"line":112,"column":68,"offset":3269}}}],"position":{"start":{"line":112,"column":46,"offset":3247},"end":{"line":112,"column":117,"offset":3318}}},{"type":"text","value":"这边文章，整理了一张图，把几个关键的点记录下来。","position":{"start":{"line":112,"column":117,"offset":3318},"end":{"line":112,"column":141,"offset":3342}}}],"position":{"start":{"line":112,"column":1,"offset":3202},"end":{"line":112,"column":141,"offset":3342}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"img","properties":{"src":"https://raw.githubusercontent.com/yangjinlong86/arts/master/2019/images/select%20and%20use%20opensource%20projects.png","alt":"开源项目的选择和使用"},"children":[],"position":{"start":{"line":114,"column":1,"offset":3344},"end":{"line":114,"column":134,"offset":3477}}}],"position":{"start":{"line":114,"column":1,"offset":3344},"end":{"line":114,"column":134,"offset":3477}}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":114,"column":134,"offset":3477}}}}