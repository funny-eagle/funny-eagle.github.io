{"expireTime":9007200811184863000,"key":"transformer-remark-markdown-ast-5b758bd6f43e1c58f33668b8a0fc6260-gatsby-remark-imagesgatsby-remark-responsive-iframegatsby-remark-prismjsgatsby-remark-copy-linked-filesgatsby-remark-smartypants-","val":{"type":"root","children":[{"type":"list","ordered":false,"start":null,"loose":false,"children":[{"type":"listItem","loose":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Algorithm: Delete Columns to Make Sorted. ","position":{"start":{"line":2,"column":3,"offset":3},"end":{"line":2,"column":45,"offset":45},"indent":[]}}],"position":{"start":{"line":2,"column":3,"offset":3},"end":{"line":2,"column":45,"offset":45},"indent":[]}}],"position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":45,"offset":45},"indent":[]}},{"type":"listItem","loose":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Review: Graceful Shutdown Spring Boot Applications. ","position":{"start":{"line":3,"column":3,"offset":48},"end":{"line":3,"column":55,"offset":100},"indent":[]}}],"position":{"start":{"line":3,"column":3,"offset":48},"end":{"line":3,"column":55,"offset":100},"indent":[]}}],"position":{"start":{"line":3,"column":1,"offset":46},"end":{"line":3,"column":55,"offset":100},"indent":[]}},{"type":"listItem","loose":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Tip: Web Server Graceful Shutdown. ","position":{"start":{"line":4,"column":3,"offset":103},"end":{"line":4,"column":38,"offset":138},"indent":[]}}],"position":{"start":{"line":4,"column":3,"offset":103},"end":{"line":4,"column":38,"offset":138},"indent":[]}}],"position":{"start":{"line":4,"column":1,"offset":101},"end":{"line":4,"column":38,"offset":138},"indent":[]}},{"type":"listItem","loose":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Share: Spring Cloud Ribbon 负载均衡.","position":{"start":{"line":5,"column":3,"offset":141},"end":{"line":5,"column":35,"offset":173},"indent":[]}}],"position":{"start":{"line":5,"column":3,"offset":141},"end":{"line":5,"column":35,"offset":173},"indent":[]}}],"position":{"start":{"line":5,"column":1,"offset":139},"end":{"line":5,"column":35,"offset":173},"indent":[]}}],"position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":5,"column":35,"offset":173},"indent":[1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Algorithm","position":{"start":{"line":7,"column":4,"offset":178},"end":{"line":7,"column":13,"offset":187},"indent":[]}}],"position":{"start":{"line":7,"column":1,"offset":175},"end":{"line":7,"column":13,"offset":187},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"link","title":null,"url":"https://leetcode.com/problems/delete-columns-to-make-sorted/","children":[{"type":"text","value":"Delete Columns to Make Sorted","position":{"start":{"line":9,"column":6,"offset":194},"end":{"line":9,"column":35,"offset":223},"indent":[]}}],"position":{"start":{"line":9,"column":5,"offset":193},"end":{"line":9,"column":98,"offset":286},"indent":[]}}],"position":{"start":{"line":9,"column":1,"offset":189},"end":{"line":9,"column":98,"offset":286},"indent":[]}},{"type":"html","lang":"java","value":"<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">package</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>nocoder<span class=\"token punctuation\">.</span>leetcode<span class=\"token punctuation\">.</span>solution</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">/**\n * 944. Delete Columns to Make Sorted\n *\n * We are given an array A of N lowercase letter strings, all of the same length.\n *\n * Now, we may choose any set of deletion indices, and for each string, we delete all the characters in those indices.  The remaining rows of strings form columns when read north to south.\n *\n * For example, if we have an array A = [\"abcdef\",\"uvwxyz\"] and deletion indices {0, 2, 3}, then the final array after deletions is [\"bef\",\"vyz\"], and the remaining columns of A are [\"b\",\"v\"], [\"e\",\"y\"], and [\"f\",\"z\"].  (Formally, the c-th column is [A[0][c], A[1][c], ..., A[A.length-1][c]].)\n *\n * Suppose we chose a set of deletion indices D such that after deletions, each remaining column in A is in non-decreasing sorted order.\n *\n * Return the minimum possible value of D.length.\n *\n *\n *\n * Example 1:\n *\n * Input: [\"cba\",\"daf\",\"ghi\"]\n * Output: 1\n * Explanation:\n * After choosing D = {1}, each column [\"c\",\"d\",\"g\"] and [\"a\",\"f\",\"i\"] are in non-decreasing sorted order.\n * If we chose D = {}, then a column [\"b\",\"a\",\"h\"] would not be in non-decreasing sorted order.\n * Example 2:\n *\n * Input: [\"a\",\"b\"]\n * Output: 0\n * Explanation: D = {}\n * Example 3:\n *\n * Input: [\"zyx\",\"wvu\",\"tsr\"]\n * Output: 3\n * Explanation: D = {0, 1, 2}\n *\n *\n * Note:\n *\n * 1 &lt;= A.length &lt;= 100\n * 1 &lt;= A[i].length &lt;= 1000\n *\n * @author jason\n * @date 2018/11/24.\n */</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">DeleteColumnsToMakeSorted</span> <span class=\"token punctuation\">{</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">int</span> <span class=\"token function\">minDeletionSize</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token class-name\">A</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">int</span> count <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token class-name\">A</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">length</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> j <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;</span> <span class=\"token class-name\">A</span><span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">A</span><span class=\"token punctuation\">[</span>j<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">charAt</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> <span class=\"token class-name\">A</span><span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">charAt</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                    count<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n                    <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token keyword\">return</span> count<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> a1 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">{</span><span class=\"token string\">\"cba\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"daf\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"ghi\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token function\">minDeletionSize</span><span class=\"token punctuation\">(</span>a1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> a2 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">{</span><span class=\"token string\">\"a\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"b\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token function\">minDeletionSize</span><span class=\"token punctuation\">(</span>a2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> a3 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">{</span><span class=\"token string\">\"zyx\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"wvu\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"tsr\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token function\">minDeletionSize</span><span class=\"token punctuation\">(</span>a3<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":11,"column":1,"offset":288},"end":{"line":84,"column":4,"offset":2473},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Review","position":{"start":{"line":86,"column":4,"offset":2478},"end":{"line":86,"column":10,"offset":2484},"indent":[]}}],"position":{"start":{"line":86,"column":1,"offset":2475},"end":{"line":86,"column":10,"offset":2484},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"link","title":null,"url":"http://blog.marcosbarbero.com/graceful-shutdown-spring-boot-apps/","children":[{"type":"text","value":"Graceful Shutdown Spring Boot Applications","position":{"start":{"line":88,"column":6,"offset":2491},"end":{"line":88,"column":48,"offset":2533},"indent":[]}}],"position":{"start":{"line":88,"column":5,"offset":2490},"end":{"line":88,"column":116,"offset":2601},"indent":[]}}],"position":{"start":{"line":88,"column":1,"offset":2486},"end":{"line":88,"column":116,"offset":2601},"indent":[]}},{"type":"blockquote","children":[{"type":"paragraph","children":[{"type":"text","value":"许多开发人员和架构师讨论设计，流量负载，框架，模式，但很少有人关心关闭阶段。\n考虑一下这个场景，一个应用程序，其中有一个很长的阻塞过程，这个应用需要关闭以替换为更新的版本。如果不是杀死所有连接而是优雅等待然后在关闭之前完成，那不是很好吗？","position":{"start":{"line":90,"column":3,"offset":2605},"end":{"line":91,"column":81,"offset":2724},"indent":[1]}}],"position":{"start":{"line":90,"column":3,"offset":2605},"end":{"line":91,"column":81,"offset":2724},"indent":[1]}}],"position":{"start":{"line":90,"column":1,"offset":2603},"end":{"line":91,"column":81,"offset":2724},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"作者在文中给出了springboot graceful shutdown的示例，但是如果我们的应用是跑在docker容器里的，还会生效吗？","position":{"start":{"line":93,"column":1,"offset":2726},"end":{"line":93,"column":70,"offset":2795},"indent":[]}}],"position":{"start":{"line":93,"column":1,"offset":2726},"end":{"line":93,"column":70,"offset":2795},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"我们使用 docker start container 和 docker stop container 来启动和关闭容器，docker stop 有个选项 -t ，默认会等10s，，我们应用里设置了graceful shutdown，但是响应时间超过了默认值，同样客户端会拿不到响应；但是如果把 -t 的时间设置长一点，比如60s， 当请求全部响应完成后，即使没有到 60s ,docker 容器也会 stop。所以关闭容器的时候，还是加上-t，并且时间设置长一些，保证客户端请求能够处理完成。","position":{"start":{"line":95,"column":1,"offset":2797},"end":{"line":95,"column":248,"offset":3044},"indent":[]}}],"position":{"start":{"line":95,"column":1,"offset":2797},"end":{"line":95,"column":248,"offset":3044},"indent":[]}},{"type":"html","lang":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">jason@mac  ~/local/git/arts/2018   master  docker stop --help\n\nUsage:\tdocker stop [OPTIONS] CONTAINER [CONTAINER...]\n\nStop one or more running containers\n\nOptions:\n  -t, --time int   Seconds to wait for stop before killing it (default 10)</code></pre></div>","position":{"start":{"line":97,"column":1,"offset":3046},"end":{"line":106,"column":4,"offset":3296},"indent":[1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Tip","position":{"start":{"line":111,"column":4,"offset":3304},"end":{"line":111,"column":7,"offset":3307},"indent":[]}}],"position":{"start":{"line":111,"column":1,"offset":3301},"end":{"line":111,"column":7,"offset":3307},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Web Server Graceful Shutdown","position":{"start":{"line":113,"column":5,"offset":3313},"end":{"line":113,"column":33,"offset":3341},"indent":[]}}],"position":{"start":{"line":113,"column":1,"offset":3309},"end":{"line":113,"column":33,"offset":3341},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"当客户端请求已经到达服务端，并且服务端还没有处理完的时候，把 web server 停掉，这时候我们需要保证正在处理中的请求能够正常处理完毕并相应到客户端，同时不再接受新的请求，这种停服务的方式称为","position":{"start":{"line":115,"column":1,"offset":3343},"end":{"line":115,"column":100,"offset":3442},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">graceful shutdown</code>","position":{"start":{"line":115,"column":100,"offset":3442},"end":{"line":115,"column":119,"offset":3461},"indent":[]}},{"type":"text","value":"。","position":{"start":{"line":115,"column":119,"offset":3461},"end":{"line":115,"column":120,"offset":3462},"indent":[]}}],"position":{"start":{"line":115,"column":1,"offset":3343},"end":{"line":115,"column":120,"offset":3462},"indent":[]}},{"type":"list","ordered":false,"start":null,"loose":false,"children":[{"type":"listItem","loose":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Tomcat","position":{"start":{"line":117,"column":3,"offset":3466},"end":{"line":117,"column":9,"offset":3472},"indent":[]}}],"position":{"start":{"line":117,"column":3,"offset":3466},"end":{"line":117,"column":9,"offset":3472},"indent":[]}}],"position":{"start":{"line":117,"column":1,"offset":3464},"end":{"line":117,"column":9,"offset":3472},"indent":[]}}],"position":{"start":{"line":117,"column":1,"offset":3464},"end":{"line":117,"column":9,"offset":3472},"indent":[]}},{"type":"html","lang":"java","value":"<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">GracefulShutdown</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">TomcatConnectorCustomizer</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">ApplicationListener</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">ContextClosedEvent</span><span class=\"token punctuation\">></span></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">final</span> <span class=\"token class-name\">Logger</span> log <span class=\"token operator\">=</span> <span class=\"token class-name\">LoggerFactory</span><span class=\"token punctuation\">.</span><span class=\"token function\">getLogger</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">GracefulShutdown</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">volatile</span> <span class=\"token class-name\">Connector</span> connector<span class=\"token punctuation\">;</span>\n    <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">customize</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Connector</span> connector<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>connector <span class=\"token operator\">=</span> connector<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">onApplicationEvent</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ContextClosedEvent</span> event<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>connector<span class=\"token punctuation\">.</span><span class=\"token function\">pause</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">Executor</span> executor <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>connector<span class=\"token punctuation\">.</span><span class=\"token function\">getProtocolHandler</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getExecutor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>executor <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">ThreadPoolExecutor</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token class-name\">ThreadPoolExecutor</span> threadPoolExecutor <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">ThreadPoolExecutor</span><span class=\"token punctuation\">)</span> executor<span class=\"token punctuation\">;</span>\n                threadPoolExecutor<span class=\"token punctuation\">.</span><span class=\"token function\">shutdown</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>threadPoolExecutor<span class=\"token punctuation\">.</span><span class=\"token function\">awaitTermination</span><span class=\"token punctuation\">(</span><span class=\"token number\">30</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">TimeUnit</span><span class=\"token punctuation\">.</span>SECONDS<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                    log<span class=\"token punctuation\">.</span><span class=\"token function\">warn</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Tomcat thread pool did not shut down gracefully within \"</span>\n                            <span class=\"token operator\">+</span> <span class=\"token string\">\"30 seconds. Proceeding with forceful shutdown\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span>\n            <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">InterruptedException</span> ex<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token class-name\">Thread</span><span class=\"token punctuation\">.</span><span class=\"token function\">currentThread</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">interrupt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":119,"column":1,"offset":3474},"end":{"line":145,"column":4,"offset":4622},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"html","lang":"java","value":"<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@Bean</span>\n<span class=\"token keyword\">public</span> <span class=\"token class-name\">GracefulShutdown</span> <span class=\"token function\">gracefulShutdown</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">GracefulShutdown</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token annotation punctuation\">@Bean</span>\n<span class=\"token keyword\">public</span> <span class=\"token class-name\">ConfigurableServletWebServerFactory</span> <span class=\"token function\">webServerFactory</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">final</span> <span class=\"token class-name\">GracefulShutdown</span> gracefulShutdown<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token class-name\">TomcatServletWebServerFactory</span> factory <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">TomcatServletWebServerFactory</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    factory<span class=\"token punctuation\">.</span><span class=\"token function\">addConnectorCustomizers</span><span class=\"token punctuation\">(</span>gracefulShutdown<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> factory<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":147,"column":1,"offset":4624},"end":{"line":159,"column":4,"offset":4991},"indent":[1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"list","ordered":false,"start":null,"loose":false,"children":[{"type":"listItem","loose":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Undertow","position":{"start":{"line":161,"column":3,"offset":4995},"end":{"line":161,"column":11,"offset":5003},"indent":[]}}],"position":{"start":{"line":161,"column":3,"offset":4995},"end":{"line":161,"column":11,"offset":5003},"indent":[]}}],"position":{"start":{"line":161,"column":1,"offset":4993},"end":{"line":161,"column":11,"offset":5003},"indent":[]}}],"position":{"start":{"line":161,"column":1,"offset":4993},"end":{"line":161,"column":11,"offset":5003},"indent":[]}},{"type":"html","lang":"java","value":"<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@Component</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">GracefulShutdown</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">ApplicationListener</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">ContextClosedEvent</span><span class=\"token punctuation\">></span></span> <span class=\"token punctuation\">{</span>\n\n        <span class=\"token annotation punctuation\">@Autowired</span>\n        <span class=\"token keyword\">private</span> <span class=\"token class-name\">GracefulShutdownWrapper</span> gracefulShutdownWrapper<span class=\"token punctuation\">;</span>\n\n        <span class=\"token annotation punctuation\">@Autowired</span>\n        <span class=\"token keyword\">private</span> <span class=\"token class-name\">ServletWebServerApplicationContext</span> context<span class=\"token punctuation\">;</span>\n\n        <span class=\"token annotation punctuation\">@Override</span>\n        <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">onApplicationEvent</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ContextClosedEvent</span> contextClosedEvent<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n            gracefulShutdownWrapper<span class=\"token punctuation\">.</span><span class=\"token function\">getGracefulShutdownHandler</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">shutdown</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token class-name\">UndertowServletWebServer</span> webServer <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">UndertowServletWebServer</span><span class=\"token punctuation\">)</span>context<span class=\"token punctuation\">.</span><span class=\"token function\">getWebServer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token class-name\">Field</span> field <span class=\"token operator\">=</span> webServer<span class=\"token punctuation\">.</span><span class=\"token function\">getClass</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getDeclaredField</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"undertow\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                field<span class=\"token punctuation\">.</span><span class=\"token function\">setAccessible</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token class-name\">Undertow</span> undertow <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Undertow</span><span class=\"token punctuation\">)</span> field<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>webServer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Undertow</span><span class=\"token punctuation\">.</span><span class=\"token class-name\">ListenerInfo</span><span class=\"token punctuation\">></span></span> listenerInfo <span class=\"token operator\">=</span> undertow<span class=\"token punctuation\">.</span><span class=\"token function\">getListenerInfo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token class-name\">Undertow</span><span class=\"token punctuation\">.</span><span class=\"token class-name\">ListenerInfo</span> listener <span class=\"token operator\">=</span> listenerInfo<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token class-name\">ConnectorStatistics</span> connectorStatistics <span class=\"token operator\">=</span> listener<span class=\"token punctuation\">.</span><span class=\"token function\">getConnectorStatistics</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>connectorStatistics<span class=\"token punctuation\">.</span><span class=\"token function\">getActiveConnections</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n                <span class=\"token comment\">// 此处也可以使用 Thread.sleep(30000) 来等待响应完毕</span>\n            <span class=\"token punctuation\">}</span><span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Exception</span> e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n                <span class=\"token comment\">// Application Shutdown</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":163,"column":1,"offset":5005},"end":{"line":191,"column":4,"offset":6250},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"html","lang":"java","value":"<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@Component</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">GracefulShutdownWrapper</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">HandlerWrapper</span><span class=\"token punctuation\">{</span>\n\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">GracefulShutdownHandler</span> gracefulShutdownHandler<span class=\"token punctuation\">;</span>\n\n    <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">HttpHandler</span> <span class=\"token function\">wrap</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">HttpHandler</span> handler<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>gracefulShutdownHandler <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>gracefulShutdownHandler <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">GracefulShutdownHandler</span><span class=\"token punctuation\">(</span>handler<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">return</span> gracefulShutdownHandler<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">GracefulShutdownHandler</span> <span class=\"token function\">getGracefulShutdownHandler</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> gracefulShutdownHandler<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":193,"column":1,"offset":6252},"end":{"line":212,"column":4,"offset":6765},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"html","lang":"java","value":"<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@Component</span>\n<span class=\"token annotation punctuation\">@AllArgsConstructor</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">UndertowExtraConfiguration</span> <span class=\"token punctuation\">{</span>\n\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">final</span> <span class=\"token class-name\">GracefulShutdownWrapper</span> gracefulShutdownWrapper<span class=\"token punctuation\">;</span>\n\n    <span class=\"token annotation punctuation\">@Bean</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">UndertowServletWebServerFactory</span> <span class=\"token function\">servletWebServerFactory</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token class-name\">UndertowServletWebServerFactory</span> factory <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">UndertowServletWebServerFactory</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        factory<span class=\"token punctuation\">.</span><span class=\"token function\">addDeploymentInfoCustomizers</span><span class=\"token punctuation\">(</span>deploymentInfo <span class=\"token operator\">-></span> deploymentInfo<span class=\"token punctuation\">.</span><span class=\"token function\">addOuterHandlerChainWrapper</span><span class=\"token punctuation\">(</span>gracefulShutdownWrapper<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        factory<span class=\"token punctuation\">.</span><span class=\"token function\">addBuilderCustomizers</span><span class=\"token punctuation\">(</span>builder <span class=\"token operator\">-></span> builder<span class=\"token punctuation\">.</span><span class=\"token function\">setServerOption</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">UndertowOptions</span><span class=\"token punctuation\">.</span>ENABLE_STATISTICS<span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> factory<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":214,"column":1,"offset":6767},"end":{"line":230,"column":4,"offset":7372},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Share","position":{"start":{"line":232,"column":4,"offset":7377},"end":{"line":232,"column":9,"offset":7382},"indent":[]}}],"position":{"start":{"line":232,"column":1,"offset":7374},"end":{"line":232,"column":9,"offset":7382},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Spring Cloud Ribbon 负载均衡","position":{"start":{"line":234,"column":5,"offset":7388},"end":{"line":234,"column":29,"offset":7412},"indent":[]}}],"position":{"start":{"line":234,"column":1,"offset":7384},"end":{"line":234,"column":29,"offset":7412},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"使用 Ribbon 做负载均衡。","position":{"start":{"line":236,"column":1,"offset":7414},"end":{"line":236,"column":17,"offset":7430},"indent":[]}}],"position":{"start":{"line":236,"column":1,"offset":7414},"end":{"line":236,"column":17,"offset":7430},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"注册中心是 eureka，应用分为 web 和 core， web 为 consumer， core 为 service。目前有一个 web 服务， 两个 core 服务。","position":{"start":{"line":238,"column":1,"offset":7432},"end":{"line":238,"column":87,"offset":7518},"indent":[]}}],"position":{"start":{"line":238,"column":1,"offset":7432},"end":{"line":238,"column":87,"offset":7518},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"当core需要部署更新的时候，先停掉其中一台，更新后启动，再停另一台，更新启动。如果不做负载均衡，那么eureka50%的几率会将请求分发到以及停了服务的那个service上，这时候服务就不可用了。","position":{"start":{"line":240,"column":1,"offset":7520},"end":{"line":240,"column":100,"offset":7619},"indent":[]}}],"position":{"start":{"line":240,"column":1,"offset":7520},"end":{"line":240,"column":100,"offset":7619},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"这时候ribbon的负载均衡配置就可以上场了，实现重试本身，重试 next server，正在处理请求中的也可以转到另一台可用的server上。","position":{"start":{"line":242,"column":1,"offset":7621},"end":{"line":242,"column":73,"offset":7693},"indent":[]}}],"position":{"start":{"line":242,"column":1,"offset":7621},"end":{"line":242,"column":73,"offset":7693},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":250,"column":1,"offset":7701}}}}