{"expireTime":9007200810533170000,"key":"transformer-remark-markdown-ast-a0419c844cfd9d70fbecb1002f9aec50-gatsby-remark-imagesgatsby-remark-responsive-iframegatsby-remark-prismjsgatsby-remark-copy-linked-filesgatsby-remark-smartypants-","val":{"type":"root","children":[{"type":"list","ordered":false,"start":null,"loose":false,"children":[{"type":"listItem","loose":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Algorithm: 654.Maximum Binary Tree","position":{"start":{"line":2,"column":3,"offset":3},"end":{"line":2,"column":37,"offset":37},"indent":[]}}],"position":{"start":{"line":2,"column":3,"offset":3},"end":{"line":2,"column":37,"offset":37},"indent":[]}}],"position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":37,"offset":37},"indent":[]}},{"type":"listItem","loose":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Review:","position":{"start":{"line":3,"column":3,"offset":40},"end":{"line":3,"column":10,"offset":47},"indent":[]}},{"type":"link","title":null,"url":"https://blog.mwaysolutions.com/2014/06/05/10-best-practices-for-better-restful-api/","children":[{"type":"text","value":"10 best practices for better restfull api","position":{"start":{"line":3,"column":11,"offset":48},"end":{"line":3,"column":52,"offset":89},"indent":[]}}],"position":{"start":{"line":3,"column":10,"offset":47},"end":{"line":3,"column":138,"offset":175},"indent":[]}}],"position":{"start":{"line":3,"column":3,"offset":40},"end":{"line":3,"column":138,"offset":175},"indent":[]}}],"position":{"start":{"line":3,"column":1,"offset":38},"end":{"line":3,"column":138,"offset":175},"indent":[]}},{"type":"listItem","loose":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Tip:递归和调用栈","position":{"start":{"line":4,"column":3,"offset":178},"end":{"line":4,"column":13,"offset":188},"indent":[]}}],"position":{"start":{"line":4,"column":3,"offset":178},"end":{"line":4,"column":13,"offset":188},"indent":[]}}],"position":{"start":{"line":4,"column":1,"offset":176},"end":{"line":4,"column":13,"offset":188},"indent":[]}},{"type":"listItem","loose":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Share:耗叔的","position":{"start":{"line":5,"column":3,"offset":191},"end":{"line":5,"column":12,"offset":200},"indent":[]}},{"type":"link","title":null,"url":"https://time.geekbang.org/column/article/1512","children":[{"type":"text","value":"分布式系统的技术栈","position":{"start":{"line":5,"column":13,"offset":201},"end":{"line":5,"column":22,"offset":210},"indent":[]}}],"position":{"start":{"line":5,"column":12,"offset":200},"end":{"line":5,"column":70,"offset":258},"indent":[]}}],"position":{"start":{"line":5,"column":3,"offset":191},"end":{"line":5,"column":70,"offset":258},"indent":[]}}],"position":{"start":{"line":5,"column":1,"offset":189},"end":{"line":5,"column":70,"offset":258},"indent":[]}}],"position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":5,"column":70,"offset":258},"indent":[1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Algorithm","position":{"start":{"line":9,"column":4,"offset":265},"end":{"line":9,"column":13,"offset":274},"indent":[]}}],"position":{"start":{"line":9,"column":1,"offset":262},"end":{"line":9,"column":13,"offset":274},"indent":[]}},{"type":"html","lang":"java","value":"<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">package</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>nocoder<span class=\"token punctuation\">.</span>leetcode<span class=\"token punctuation\">.</span>solution</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>nocoder<span class=\"token punctuation\">.</span>leetcode<span class=\"token punctuation\">.</span>solution<span class=\"token punctuation\">.</span>common</span><span class=\"token punctuation\">.</span><span class=\"token class-name\">TreeNode</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">/**\n * 654.Maximum Binary Tree\n * Given an integer array with no duplicates.\n * A maximum tree building on this array is defined as follow:\n *\n * The root is the maximum number in the array.\n * The left subtree is the maximum tree constructed from left part subarray divided by the maximum number.\n * The right subtree is the maximum tree constructed from right part subarray divided by the maximum number.\n * Construct the maximum tree by the given array and output the root node of this tree.\n *\n * Example 1:\n * Input: [3,2,1,6,0,5]\n * Output: return the tree root node representing the following tree:\n *\n *       6\n *     /   \\\n *    3     5\n *     \\    /\n *      2  0\n *        \\\n *         1\n * Note:\n * The size of the given array will be in the range [1,1000].\n * @author jason\n * @date 2019/4/7.\n */</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">MaximumBinaryTree</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> arr <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">{</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">TreeNode</span> treeNode <span class=\"token operator\">=</span> <span class=\"token function\">constructMaximumBinaryTree</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        treeNode<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">TreeNode</span> <span class=\"token function\">constructMaximumBinaryTree</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> nums<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token function\">construct</span><span class=\"token punctuation\">(</span>nums<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> nums<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">TreeNode</span> <span class=\"token function\">construct</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> nums<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> l<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> r<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>l <span class=\"token operator\">==</span> r<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">return</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">int</span> max_i <span class=\"token operator\">=</span> <span class=\"token function\">max</span><span class=\"token punctuation\">(</span>nums<span class=\"token punctuation\">,</span> l<span class=\"token punctuation\">,</span> r<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">TreeNode</span> root <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">TreeNode</span><span class=\"token punctuation\">(</span>nums<span class=\"token punctuation\">[</span>max_i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        root<span class=\"token punctuation\">.</span>left <span class=\"token operator\">=</span> <span class=\"token function\">construct</span><span class=\"token punctuation\">(</span>nums<span class=\"token punctuation\">,</span> l<span class=\"token punctuation\">,</span> max_i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        root<span class=\"token punctuation\">.</span>right <span class=\"token operator\">=</span> <span class=\"token function\">construct</span><span class=\"token punctuation\">(</span>nums<span class=\"token punctuation\">,</span> max_i <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> r<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> root<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">int</span> <span class=\"token function\">max</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> nums<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> l<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> r<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">int</span> max_i <span class=\"token operator\">=</span> l<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> l<span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> r<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>nums<span class=\"token punctuation\">[</span>max_i<span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;</span> nums<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                max_i <span class=\"token operator\">=</span> i<span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">return</span> max_i<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":11,"column":1,"offset":276},"end":{"line":72,"column":4,"offset":2108},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Review","position":{"start":{"line":76,"column":4,"offset":2115},"end":{"line":76,"column":10,"offset":2121},"indent":[]}}],"position":{"start":{"line":76,"column":1,"offset":2112},"end":{"line":76,"column":10,"offset":2121},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"link","title":null,"url":"https://blog.mwaysolutions.com/2014/06/05/10-best-practices-for-better-restful-api/","children":[{"type":"text","value":"10 best practices for better restfull api","position":{"start":{"line":78,"column":6,"offset":2128},"end":{"line":78,"column":47,"offset":2169},"indent":[]}}],"position":{"start":{"line":78,"column":5,"offset":2127},"end":{"line":78,"column":133,"offset":2255},"indent":[]}}],"position":{"start":{"line":78,"column":1,"offset":2123},"end":{"line":78,"column":133,"offset":2255},"indent":[]}},{"type":"list","ordered":false,"start":null,"loose":true,"children":[{"type":"listItem","loose":true,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"1、使用名词而非动词","position":{"start":{"line":80,"column":3,"offset":2259},"end":{"line":80,"column":13,"offset":2269},"indent":[]}}],"position":{"start":{"line":80,"column":3,"offset":2259},"end":{"line":80,"column":13,"offset":2269},"indent":[]}},{"type":"list","ordered":false,"start":null,"loose":true,"children":[{"type":"listItem","loose":true,"checked":null,"children":[{"type":"table","align":[null,null,null,null,null],"children":[{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"text","value":"Resource","position":{"start":{"line":82,"column":7,"offset":2277},"end":{"line":82,"column":15,"offset":2285},"indent":[]}}],"position":{"start":{"line":82,"column":7,"offset":2277},"end":{"line":82,"column":16,"offset":2286},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"GET read","position":{"start":{"line":82,"column":19,"offset":2289},"end":{"line":82,"column":27,"offset":2297},"indent":[]}}],"position":{"start":{"line":82,"column":19,"offset":2289},"end":{"line":82,"column":41,"offset":2311},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"POST create","position":{"start":{"line":82,"column":44,"offset":2314},"end":{"line":82,"column":55,"offset":2325},"indent":[]}}],"position":{"start":{"line":82,"column":44,"offset":2314},"end":{"line":82,"column":68,"offset":2338},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"PUT update","position":{"start":{"line":82,"column":71,"offset":2341},"end":{"line":82,"column":81,"offset":2351},"indent":[]}}],"position":{"start":{"line":82,"column":71,"offset":2341},"end":{"line":82,"column":93,"offset":2363},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"DELETE","position":{"start":{"line":82,"column":96,"offset":2366},"end":{"line":82,"column":102,"offset":2372},"indent":[]}}],"position":{"start":{"line":82,"column":96,"offset":2366},"end":{"line":82,"column":118,"offset":2388},"indent":[]}}],"position":{"start":{"line":82,"column":5,"offset":2275},"end":{"line":82,"column":120,"offset":2390},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"text","value":"/cars","position":{"start":{"line":84,"column":7,"offset":2517},"end":{"line":84,"column":12,"offset":2522},"indent":[]}}],"position":{"start":{"line":84,"column":7,"offset":2517},"end":{"line":84,"column":16,"offset":2526},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Returns a list of cars","position":{"start":{"line":84,"column":19,"offset":2529},"end":{"line":84,"column":41,"offset":2551},"indent":[]}}],"position":{"start":{"line":84,"column":19,"offset":2529},"end":{"line":84,"column":41,"offset":2551},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Create a new car","position":{"start":{"line":84,"column":44,"offset":2554},"end":{"line":84,"column":60,"offset":2570},"indent":[]}}],"position":{"start":{"line":84,"column":44,"offset":2554},"end":{"line":84,"column":68,"offset":2578},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Bulk update of cars","position":{"start":{"line":84,"column":71,"offset":2581},"end":{"line":84,"column":90,"offset":2600},"indent":[]}}],"position":{"start":{"line":84,"column":71,"offset":2581},"end":{"line":84,"column":93,"offset":2603},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Delete all cars","position":{"start":{"line":84,"column":96,"offset":2606},"end":{"line":84,"column":111,"offset":2621},"indent":[]}}],"position":{"start":{"line":84,"column":96,"offset":2606},"end":{"line":84,"column":118,"offset":2628},"indent":[]}}],"position":{"start":{"line":84,"column":5,"offset":2515},"end":{"line":84,"column":120,"offset":2630},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"text","value":"/cars/711","position":{"start":{"line":85,"column":7,"offset":2637},"end":{"line":85,"column":16,"offset":2646},"indent":[]}}],"position":{"start":{"line":85,"column":7,"offset":2637},"end":{"line":85,"column":16,"offset":2646},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Returns a specific car","position":{"start":{"line":85,"column":19,"offset":2649},"end":{"line":85,"column":41,"offset":2671},"indent":[]}}],"position":{"start":{"line":85,"column":19,"offset":2649},"end":{"line":85,"column":41,"offset":2671},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Method not allowed (405)","position":{"start":{"line":85,"column":44,"offset":2674},"end":{"line":85,"column":68,"offset":2698},"indent":[]}}],"position":{"start":{"line":85,"column":44,"offset":2674},"end":{"line":85,"column":68,"offset":2698},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Updates a specific car","position":{"start":{"line":85,"column":71,"offset":2701},"end":{"line":85,"column":93,"offset":2723},"indent":[]}}],"position":{"start":{"line":85,"column":71,"offset":2701},"end":{"line":85,"column":93,"offset":2723},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Deletes a specific car","position":{"start":{"line":85,"column":96,"offset":2726},"end":{"line":85,"column":118,"offset":2748},"indent":[]}}],"position":{"start":{"line":85,"column":96,"offset":2726},"end":{"line":85,"column":118,"offset":2748},"indent":[]}}],"position":{"start":{"line":85,"column":5,"offset":2635},"end":{"line":85,"column":120,"offset":2750},"indent":[]}}],"position":{"start":{"line":82,"column":5,"offset":2275},"end":{"line":85,"column":120,"offset":2750},"indent":[5,5,5]}}],"position":{"start":{"line":82,"column":3,"offset":2273},"end":{"line":86,"column":1,"offset":2751},"indent":[5,5,5,1]}},{"type":"listItem","loose":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"不要使用动词","position":{"start":{"line":87,"column":5,"offset":2756},"end":{"line":87,"column":11,"offset":2762},"indent":[]}}],"position":{"start":{"line":87,"column":5,"offset":2756},"end":{"line":87,"column":11,"offset":2762},"indent":[]}}],"position":{"start":{"line":87,"column":3,"offset":2754},"end":{"line":87,"column":11,"offset":2762},"indent":[]}}],"position":{"start":{"line":82,"column":3,"offset":2273},"end":{"line":87,"column":11,"offset":2762},"indent":[5,5,5,1,3]}},{"type":"paragraph","children":[{"type":"html","value":"<code class=\"language-text\">/getAllCars</code>","position":{"start":{"line":89,"column":5,"offset":2768},"end":{"line":89,"column":18,"offset":2781},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":89,"column":18,"offset":2781},"end":{"line":90,"column":5,"offset":2786},"indent":[5]}},{"type":"html","value":"<code class=\"language-text\">/createNewCar</code>","position":{"start":{"line":90,"column":5,"offset":2786},"end":{"line":90,"column":20,"offset":2801},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":90,"column":20,"offset":2801},"end":{"line":91,"column":5,"offset":2806},"indent":[5]}},{"type":"html","value":"<code class=\"language-text\">/deleteAllRedCars</code>","position":{"start":{"line":91,"column":5,"offset":2806},"end":{"line":91,"column":24,"offset":2825},"indent":[]}}],"position":{"start":{"line":89,"column":5,"offset":2768},"end":{"line":91,"column":24,"offset":2825},"indent":[5,5]}}],"position":{"start":{"line":80,"column":1,"offset":2257},"end":{"line":92,"column":1,"offset":2826},"indent":[1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"listItem","loose":true,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"GET方法和查询参数不应修改状态","position":{"start":{"line":93,"column":3,"offset":2829},"end":{"line":93,"column":19,"offset":2845},"indent":[]}}],"position":{"start":{"line":93,"column":3,"offset":2829},"end":{"line":93,"column":19,"offset":2845},"indent":[]}},{"type":"list","ordered":false,"start":null,"loose":false,"children":[{"type":"listItem","loose":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"使用PUT，POST 和DELETE方法代替GET方法来修改状态","position":{"start":{"line":95,"column":5,"offset":2851},"end":{"line":95,"column":37,"offset":2883},"indent":[]}}],"position":{"start":{"line":95,"column":5,"offset":2851},"end":{"line":95,"column":37,"offset":2883},"indent":[]}}],"position":{"start":{"line":95,"column":3,"offset":2849},"end":{"line":95,"column":37,"offset":2883},"indent":[]}},{"type":"listItem","loose":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"不要用GET方法来修改状态","position":{"start":{"line":96,"column":5,"offset":2888},"end":{"line":96,"column":18,"offset":2901},"indent":[]}}],"position":{"start":{"line":96,"column":5,"offset":2888},"end":{"line":96,"column":18,"offset":2901},"indent":[]}}],"position":{"start":{"line":96,"column":3,"offset":2886},"end":{"line":96,"column":18,"offset":2901},"indent":[]}}],"position":{"start":{"line":95,"column":3,"offset":2849},"end":{"line":96,"column":18,"offset":2901},"indent":[3]}}],"position":{"start":{"line":93,"column":1,"offset":2827},"end":{"line":97,"column":1,"offset":2902},"indent":[1,1,1,1]}},{"type":"listItem","loose":true,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"使用复数名词","position":{"start":{"line":98,"column":3,"offset":2905},"end":{"line":98,"column":9,"offset":2911},"indent":[]}}],"position":{"start":{"line":98,"column":3,"offset":2905},"end":{"line":98,"column":9,"offset":2911},"indent":[]}},{"type":"list","ordered":false,"start":null,"loose":true,"children":[{"type":"listItem","loose":true,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"不要混淆单数和复数名词，保持简单，只使用复数名词来表示所有资源。","position":{"start":{"line":100,"column":5,"offset":2917},"end":{"line":100,"column":37,"offset":2949},"indent":[]}}],"position":{"start":{"line":100,"column":5,"offset":2917},"end":{"line":100,"column":37,"offset":2949},"indent":[]}}],"position":{"start":{"line":100,"column":3,"offset":2915},"end":{"line":101,"column":1,"offset":2950},"indent":[1]}},{"type":"listItem","loose":false,"checked":null,"children":[{"type":"html","lang":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">/cars instead of /car\n/users instead of /user\n/products instead of /product\n/settings instead of /setting</code></pre></div>","position":{"start":{"line":102,"column":5,"offset":2955},"end":{"line":107,"column":8,"offset":3088},"indent":[5,5,5,5,5]}}],"position":{"start":{"line":102,"column":3,"offset":2953},"end":{"line":107,"column":8,"offset":3088},"indent":[5,5,5,5,5]}}],"position":{"start":{"line":100,"column":3,"offset":2915},"end":{"line":107,"column":8,"offset":3088},"indent":[1,3,5,5,5,5,5]}}],"position":{"start":{"line":98,"column":1,"offset":2903},"end":{"line":108,"column":1,"offset":3089},"indent":[1,1,1,1,1,1,1,1,1,1]}},{"type":"listItem","loose":true,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"将子资源用于关系","position":{"start":{"line":109,"column":3,"offset":3092},"end":{"line":109,"column":11,"offset":3100},"indent":[]}}],"position":{"start":{"line":109,"column":3,"offset":3092},"end":{"line":109,"column":11,"offset":3100},"indent":[]}},{"type":"list","ordered":false,"start":null,"loose":true,"children":[{"type":"listItem","loose":true,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"如果资源与另一个资源相关，则使用子资源","position":{"start":{"line":111,"column":5,"offset":3106},"end":{"line":111,"column":24,"offset":3125},"indent":[]}}],"position":{"start":{"line":111,"column":5,"offset":3106},"end":{"line":111,"column":24,"offset":3125},"indent":[]}}],"position":{"start":{"line":111,"column":3,"offset":3104},"end":{"line":112,"column":1,"offset":3126},"indent":[1]}},{"type":"listItem","loose":false,"checked":null,"children":[{"type":"html","lang":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">GET /cars/711/drivers/ Returns a list of drivers for car 711\nGET /cars/711/drivers/4 Returns driver #4 for car 711</code></pre></div>","position":{"start":{"line":113,"column":5,"offset":3131},"end":{"line":116,"column":8,"offset":3265},"indent":[5,5,5]}}],"position":{"start":{"line":113,"column":3,"offset":3129},"end":{"line":116,"column":8,"offset":3265},"indent":[5,5,5]}}],"position":{"start":{"line":111,"column":3,"offset":3104},"end":{"line":116,"column":8,"offset":3265},"indent":[1,3,5,5,5]}}],"position":{"start":{"line":109,"column":1,"offset":3090},"end":{"line":117,"column":1,"offset":3266},"indent":[1,1,1,1,1,1,1,1]}},{"type":"listItem","loose":true,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"在http header 中指定格式","position":{"start":{"line":118,"column":3,"offset":3269},"end":{"line":118,"column":21,"offset":3287},"indent":[]}}],"position":{"start":{"line":118,"column":3,"offset":3269},"end":{"line":118,"column":21,"offset":3287},"indent":[]}},{"type":"list","ordered":false,"start":null,"loose":false,"children":[{"type":"listItem","loose":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"客户端和服务器都需要知道用于通信的格式。必须在http header 中指定格式","position":{"start":{"line":120,"column":5,"offset":3293},"end":{"line":120,"column":45,"offset":3333},"indent":[]}}],"position":{"start":{"line":120,"column":5,"offset":3293},"end":{"line":120,"column":45,"offset":3333},"indent":[]}}],"position":{"start":{"line":120,"column":3,"offset":3291},"end":{"line":120,"column":45,"offset":3333},"indent":[]}},{"type":"listItem","loose":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"content-type 定义请求格式","position":{"start":{"line":121,"column":5,"offset":3338},"end":{"line":121,"column":24,"offset":3357},"indent":[]}}],"position":{"start":{"line":121,"column":5,"offset":3338},"end":{"line":121,"column":24,"offset":3357},"indent":[]}}],"position":{"start":{"line":121,"column":3,"offset":3336},"end":{"line":121,"column":24,"offset":3357},"indent":[]}},{"type":"listItem","loose":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"accept 定义可接受的响应格式列表","position":{"start":{"line":122,"column":5,"offset":3362},"end":{"line":122,"column":24,"offset":3381},"indent":[]}}],"position":{"start":{"line":122,"column":5,"offset":3362},"end":{"line":122,"column":24,"offset":3381},"indent":[]}}],"position":{"start":{"line":122,"column":3,"offset":3360},"end":{"line":122,"column":24,"offset":3381},"indent":[]}}],"position":{"start":{"line":120,"column":3,"offset":3291},"end":{"line":122,"column":24,"offset":3381},"indent":[3,3]}}],"position":{"start":{"line":118,"column":1,"offset":3267},"end":{"line":123,"column":1,"offset":3382},"indent":[1,1,1,1,1]}},{"type":"listItem","loose":true,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"6、使用HATEOAS","position":{"start":{"line":124,"column":3,"offset":3385},"end":{"line":124,"column":14,"offset":3396},"indent":[]}}],"position":{"start":{"line":124,"column":3,"offset":3385},"end":{"line":124,"column":14,"offset":3396},"indent":[]}},{"type":"list","ordered":false,"start":null,"loose":false,"children":[{"type":"listItem","loose":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"H","position":{"start":{"line":126,"column":7,"offset":3404},"end":{"line":126,"column":8,"offset":3405},"indent":[]}}],"position":{"start":{"line":126,"column":5,"offset":3402},"end":{"line":126,"column":10,"offset":3407},"indent":[]}},{"type":"text","value":"ypermedia ","position":{"start":{"line":126,"column":10,"offset":3407},"end":{"line":126,"column":20,"offset":3417},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"a","position":{"start":{"line":126,"column":22,"offset":3419},"end":{"line":126,"column":23,"offset":3420},"indent":[]}}],"position":{"start":{"line":126,"column":20,"offset":3417},"end":{"line":126,"column":25,"offset":3422},"indent":[]}},{"type":"text","value":"s ","position":{"start":{"line":126,"column":25,"offset":3422},"end":{"line":126,"column":27,"offset":3424},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"t","position":{"start":{"line":126,"column":29,"offset":3426},"end":{"line":126,"column":30,"offset":3427},"indent":[]}}],"position":{"start":{"line":126,"column":27,"offset":3424},"end":{"line":126,"column":32,"offset":3429},"indent":[]}},{"type":"text","value":"he ","position":{"start":{"line":126,"column":32,"offset":3429},"end":{"line":126,"column":35,"offset":3432},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"E","position":{"start":{"line":126,"column":37,"offset":3434},"end":{"line":126,"column":38,"offset":3435},"indent":[]}}],"position":{"start":{"line":126,"column":35,"offset":3432},"end":{"line":126,"column":40,"offset":3437},"indent":[]}},{"type":"text","value":"ngine ","position":{"start":{"line":126,"column":40,"offset":3437},"end":{"line":126,"column":46,"offset":3443},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"o","position":{"start":{"line":126,"column":48,"offset":3445},"end":{"line":126,"column":49,"offset":3446},"indent":[]}}],"position":{"start":{"line":126,"column":46,"offset":3443},"end":{"line":126,"column":51,"offset":3448},"indent":[]}},{"type":"text","value":"f ","position":{"start":{"line":126,"column":51,"offset":3448},"end":{"line":126,"column":53,"offset":3450},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"A","position":{"start":{"line":126,"column":55,"offset":3452},"end":{"line":126,"column":56,"offset":3453},"indent":[]}}],"position":{"start":{"line":126,"column":53,"offset":3450},"end":{"line":126,"column":58,"offset":3455},"indent":[]}},{"type":"text","value":"pplication ","position":{"start":{"line":126,"column":58,"offset":3455},"end":{"line":126,"column":69,"offset":3466},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"S","position":{"start":{"line":126,"column":71,"offset":3468},"end":{"line":126,"column":72,"offset":3469},"indent":[]}}],"position":{"start":{"line":126,"column":69,"offset":3466},"end":{"line":126,"column":74,"offset":3471},"indent":[]}},{"type":"text","value":"tate","position":{"start":{"line":126,"column":74,"offset":3471},"end":{"line":126,"column":78,"offset":3475},"indent":[]}}],"position":{"start":{"line":126,"column":5,"offset":3402},"end":{"line":126,"column":78,"offset":3475},"indent":[]}}],"position":{"start":{"line":126,"column":3,"offset":3400},"end":{"line":126,"column":78,"offset":3475},"indent":[]}}],"position":{"start":{"line":126,"column":3,"offset":3400},"end":{"line":126,"column":78,"offset":3475},"indent":[]}}],"position":{"start":{"line":124,"column":1,"offset":3383},"end":{"line":127,"column":1,"offset":3476},"indent":[1,1,1]}},{"type":"listItem","loose":true,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"7、为集合提供过滤，排序，字段选择和分页","position":{"start":{"line":128,"column":3,"offset":3479},"end":{"line":128,"column":23,"offset":3499},"indent":[]}}],"position":{"start":{"line":128,"column":3,"offset":3479},"end":{"line":128,"column":23,"offset":3499},"indent":[]}},{"type":"list","ordered":false,"start":null,"loose":false,"children":[{"type":"listItem","loose":false,"checked":null,"children":[{"type":"html","lang":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">GET /cars?color=red Returns a list of red cars\nGET /cars?seats&lt;=2 Returns a list of cars with a maximum of 2 seats</code></pre></div>","position":{"start":{"line":130,"column":5,"offset":3505},"end":{"line":133,"column":8,"offset":3639},"indent":[5,5,5]}}],"position":{"start":{"line":130,"column":3,"offset":3503},"end":{"line":133,"column":8,"offset":3639},"indent":[5,5,5]}}],"position":{"start":{"line":130,"column":3,"offset":3503},"end":{"line":133,"column":8,"offset":3639},"indent":[5,5,5]}}],"position":{"start":{"line":128,"column":1,"offset":3477},"end":{"line":134,"column":1,"offset":3640},"indent":[1,1,1,1,1,1]}},{"type":"listItem","loose":true,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"8、API版本控制","position":{"start":{"line":135,"column":3,"offset":3643},"end":{"line":135,"column":12,"offset":3652},"indent":[]}}],"position":{"start":{"line":135,"column":3,"offset":3643},"end":{"line":135,"column":12,"offset":3652},"indent":[]}},{"type":"list","ordered":false,"start":null,"loose":false,"children":[{"type":"listItem","loose":false,"checked":null,"children":[{"type":"html","lang":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">/blog/api/v1</code></pre></div>","position":{"start":{"line":137,"column":5,"offset":3658},"end":{"line":139,"column":8,"offset":3686},"indent":[5,5]}}],"position":{"start":{"line":137,"column":3,"offset":3656},"end":{"line":139,"column":8,"offset":3686},"indent":[5,5]}}],"position":{"start":{"line":137,"column":3,"offset":3656},"end":{"line":139,"column":8,"offset":3686},"indent":[5,5]}}],"position":{"start":{"line":135,"column":1,"offset":3641},"end":{"line":140,"column":1,"offset":3687},"indent":[1,1,1,1,1]}},{"type":"listItem","loose":true,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"9、使用HTTP状态码处理错误","position":{"start":{"line":141,"column":3,"offset":3690},"end":{"line":141,"column":18,"offset":3705},"indent":[]}}],"position":{"start":{"line":141,"column":3,"offset":3690},"end":{"line":141,"column":18,"offset":3705},"indent":[]}}],"position":{"start":{"line":141,"column":1,"offset":3688},"end":{"line":142,"column":1,"offset":3706},"indent":[1]}},{"type":"listItem","loose":true,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"10、允许覆盖HTTP方法","position":{"start":{"line":143,"column":3,"offset":3709},"end":{"line":143,"column":16,"offset":3722},"indent":[]}}],"position":{"start":{"line":143,"column":3,"offset":3709},"end":{"line":143,"column":16,"offset":3722},"indent":[]}},{"type":"list","ordered":false,"start":null,"loose":false,"children":[{"type":"listItem","loose":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"某些代理仅支持POST和GET方法，为了支持具有这些限制的RESTful API，API 需要使用自定义HTTP header X-HTTP-Method_Override 来覆盖POST方法","position":{"start":{"line":145,"column":5,"offset":3728},"end":{"line":145,"column":101,"offset":3824},"indent":[]}}],"position":{"start":{"line":145,"column":5,"offset":3728},"end":{"line":145,"column":101,"offset":3824},"indent":[]}}],"position":{"start":{"line":145,"column":3,"offset":3726},"end":{"line":145,"column":101,"offset":3824},"indent":[]}}],"position":{"start":{"line":145,"column":3,"offset":3726},"end":{"line":145,"column":101,"offset":3824},"indent":[]}}],"position":{"start":{"line":143,"column":1,"offset":3707},"end":{"line":145,"column":101,"offset":3824},"indent":[1,1]}}],"position":{"start":{"line":80,"column":1,"offset":2257},"end":{"line":145,"column":101,"offset":3824},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Tip","position":{"start":{"line":148,"column":4,"offset":3830},"end":{"line":148,"column":7,"offset":3833},"indent":[]}}],"position":{"start":{"line":148,"column":1,"offset":3827},"end":{"line":148,"column":7,"offset":3833},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"递归和调用栈","position":{"start":{"line":150,"column":5,"offset":3839},"end":{"line":150,"column":11,"offset":3845},"indent":[]}}],"position":{"start":{"line":150,"column":1,"offset":3835},"end":{"line":150,"column":11,"offset":3845},"indent":[]}},{"type":"blockquote","children":[{"type":"paragraph","children":[{"type":"text","value":"最近在读《算法图解》，真的非常易读非常有意思，第三章讲递归，图文并茂描述的浅显易懂，把章节中的内容写了笔记，整理一下，作为本周的Tip吧。","position":{"start":{"line":152,"column":3,"offset":3849},"end":{"line":152,"column":72,"offset":3918},"indent":[]}}],"position":{"start":{"line":152,"column":3,"offset":3849},"end":{"line":152,"column":72,"offset":3918},"indent":[]}}],"position":{"start":{"line":152,"column":1,"offset":3847},"end":{"line":152,"column":72,"offset":3918},"indent":[]}},{"type":"list","ordered":false,"start":null,"loose":false,"children":[{"type":"listItem","loose":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"递归指的是调用自己的函数","position":{"start":{"line":154,"column":3,"offset":3922},"end":{"line":154,"column":15,"offset":3934},"indent":[]}}],"position":{"start":{"line":154,"column":3,"offset":3922},"end":{"line":154,"column":15,"offset":3934},"indent":[]}}],"position":{"start":{"line":154,"column":1,"offset":3920},"end":{"line":154,"column":15,"offset":3934},"indent":[]}},{"type":"listItem","loose":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"每个递归函数都有两个条件：基线条件和递归条件","position":{"start":{"line":155,"column":3,"offset":3937},"end":{"line":155,"column":25,"offset":3959},"indent":[]}}],"position":{"start":{"line":155,"column":3,"offset":3937},"end":{"line":155,"column":25,"offset":3959},"indent":[]}}],"position":{"start":{"line":155,"column":1,"offset":3935},"end":{"line":155,"column":25,"offset":3959},"indent":[]}},{"type":"listItem","loose":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"栈有两种操作，压入和弹出","position":{"start":{"line":156,"column":3,"offset":3962},"end":{"line":156,"column":15,"offset":3974},"indent":[]}}],"position":{"start":{"line":156,"column":3,"offset":3962},"end":{"line":156,"column":15,"offset":3974},"indent":[]}}],"position":{"start":{"line":156,"column":1,"offset":3960},"end":{"line":156,"column":15,"offset":3974},"indent":[]}},{"type":"listItem","loose":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"所有函数调用都进入","position":{"start":{"line":157,"column":3,"offset":3977},"end":{"line":157,"column":12,"offset":3986},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"调用栈","position":{"start":{"line":157,"column":14,"offset":3988},"end":{"line":157,"column":17,"offset":3991},"indent":[]}}],"position":{"start":{"line":157,"column":12,"offset":3986},"end":{"line":157,"column":19,"offset":3993},"indent":[]}},{"type":"text","value":"(call stack)","position":{"start":{"line":157,"column":19,"offset":3993},"end":{"line":157,"column":31,"offset":4005},"indent":[]}}],"position":{"start":{"line":157,"column":3,"offset":3977},"end":{"line":157,"column":31,"offset":4005},"indent":[]}}],"position":{"start":{"line":157,"column":1,"offset":3975},"end":{"line":157,"column":31,"offset":4005},"indent":[]}}],"position":{"start":{"line":154,"column":1,"offset":3920},"end":{"line":157,"column":31,"offset":4005},"indent":[1,1,1]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"递归","position":{"start":{"line":159,"column":6,"offset":4012},"end":{"line":159,"column":8,"offset":4014},"indent":[]}}],"position":{"start":{"line":159,"column":1,"offset":4007},"end":{"line":159,"column":8,"offset":4014},"indent":[]}},{"type":"blockquote","children":[{"type":"paragraph","children":[{"type":"text","value":"假设我们需要找一把钥匙，钥匙在一个大盒子里，这个盒子里有盒子，盒子里的盒子有有盒子，钥匙就在某个盒子里。","position":{"start":{"line":161,"column":3,"offset":4018},"end":{"line":161,"column":55,"offset":4070},"indent":[]}}],"position":{"start":{"line":161,"column":3,"offset":4018},"end":{"line":161,"column":55,"offset":4070},"indent":[]}}],"position":{"start":{"line":161,"column":1,"offset":4016},"end":{"line":161,"column":55,"offset":4070},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"以下是使用递归方法寻找钥匙的伪代码：","position":{"start":{"line":163,"column":1,"offset":4072},"end":{"line":163,"column":19,"offset":4090},"indent":[]}}],"position":{"start":{"line":163,"column":1,"offset":4072},"end":{"line":163,"column":19,"offset":4090},"indent":[]}},{"type":"html","lang":"python","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">look_for_key</span><span class=\"token punctuation\">(</span>box<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">for</span> item <span class=\"token keyword\">in</span> box<span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">if</span> item<span class=\"token punctuation\">.</span>is_a_box<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            look_for_box<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">elif</span> item<span class=\"token punctuation\">.</span>is_key<span class=\"token punctuation\">(</span>item<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">print</span> <span class=\"token string\">\"found the key\"</span></code></pre></div>","position":{"start":{"line":165,"column":1,"offset":4092},"end":{"line":172,"column":4,"offset":4270},"indent":[1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"递归只是让解决方案更清晰，并没有性能上的优势。Leigh Caldwell在Stack Overflow 上说过一句话：“如果使用循环，程序的性能可能更高；如果使用递归，程序可能更容易理解。如何选择要看什么对你来说更重要。”","position":{"start":{"line":174,"column":1,"offset":4272},"end":{"line":174,"column":113,"offset":4384},"indent":[]}}],"position":{"start":{"line":174,"column":1,"offset":4272},"end":{"line":174,"column":113,"offset":4384},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"编写递归方法时，必须告诉它何时停止递归，所以，每个递归函数都有两部分，基线条件和递归条件。递归条件是指函数调用自己，而基线条件是指函数不在调用自己，从而避免形成无线循环。在上面的找钥匙的例子中，","position":{"start":{"line":176,"column":1,"offset":4386},"end":{"line":176,"column":98,"offset":4483},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">item.is_a_box()</code>","position":{"start":{"line":176,"column":98,"offset":4483},"end":{"line":176,"column":115,"offset":4500},"indent":[]}},{"type":"text","value":"就是递归条件，","position":{"start":{"line":176,"column":115,"offset":4500},"end":{"line":176,"column":122,"offset":4507},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">item.is_key(item)</code>","position":{"start":{"line":176,"column":122,"offset":4507},"end":{"line":176,"column":141,"offset":4526},"indent":[]}},{"type":"text","value":"就是基线条件。","position":{"start":{"line":176,"column":141,"offset":4526},"end":{"line":176,"column":148,"offset":4533},"indent":[]}}],"position":{"start":{"line":176,"column":1,"offset":4386},"end":{"line":176,"column":148,"offset":4533},"indent":[]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"调用栈","position":{"start":{"line":178,"column":6,"offset":4540},"end":{"line":178,"column":9,"offset":4543},"indent":[]}}],"position":{"start":{"line":178,"column":1,"offset":4535},"end":{"line":178,"column":9,"offset":4543},"indent":[]}},{"type":"html","lang":"python","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">greet</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span> <span class=\"token string\">\"hello \"</span> <span class=\"token operator\">+</span> name\n    greet2<span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">)</span>\n    bye<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    \n<span class=\"token keyword\">def</span> <span class=\"token function\">greet2</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span> <span class=\"token string\">\"how are you \"</span> <span class=\"token operator\">+</span> name\n    \n<span class=\"token keyword\">def</span> <span class=\"token function\">bye</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span> <span class=\"token string\">\"bye\"</span></code></pre></div>","position":{"start":{"line":180,"column":1,"offset":4545},"end":{"line":191,"column":4,"offset":4715},"indent":[1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"假设我们调用greet(“jason”)，看看调用这个方法的具体情况","position":{"start":{"line":193,"column":1,"offset":4717},"end":{"line":193,"column":35,"offset":4751},"indent":[]}}],"position":{"start":{"line":193,"column":1,"offset":4717},"end":{"line":193,"column":35,"offset":4751},"indent":[]}},{"type":"list","ordered":false,"start":null,"loose":false,"children":[{"type":"listItem","loose":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"调用 greet(“jason”) ，计算机为其分配一块内存","position":{"start":{"line":195,"column":3,"offset":4755},"end":{"line":195,"column":33,"offset":4785},"indent":[]}}],"position":{"start":{"line":195,"column":3,"offset":4755},"end":{"line":195,"column":33,"offset":4785},"indent":[]}}],"position":{"start":{"line":195,"column":1,"offset":4753},"end":{"line":195,"column":33,"offset":4785},"indent":[]}},{"type":"listItem","loose":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"将 name 设置为jason ，存储到内存中","position":{"start":{"line":196,"column":3,"offset":4788},"end":{"line":196,"column":26,"offset":4811},"indent":[]}}],"position":{"start":{"line":196,"column":3,"offset":4788},"end":{"line":196,"column":26,"offset":4811},"indent":[]}}],"position":{"start":{"line":196,"column":1,"offset":4786},"end":{"line":196,"column":26,"offset":4811},"indent":[]}},{"type":"listItem","loose":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"接下来打印hello jason，在调用greet2(“jason”),计算机也为其分配一块内存","position":{"start":{"line":197,"column":3,"offset":4814},"end":{"line":197,"column":51,"offset":4862},"indent":[]}}],"position":{"start":{"line":197,"column":3,"offset":4814},"end":{"line":197,"column":51,"offset":4862},"indent":[]}}],"position":{"start":{"line":197,"column":1,"offset":4812},"end":{"line":197,"column":51,"offset":4862},"indent":[]}},{"type":"listItem","loose":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"计算机使用栈来表示这些内存块，其中第二个内存块位于第一个内存块上面。打印howare you jason，然后从方法调用返回，此时，栈顶的内存块被弹出。","position":{"start":{"line":198,"column":3,"offset":4865},"end":{"line":198,"column":79,"offset":4941},"indent":[]}}],"position":{"start":{"line":198,"column":3,"offset":4865},"end":{"line":198,"column":79,"offset":4941},"indent":[]}}],"position":{"start":{"line":198,"column":1,"offset":4863},"end":{"line":198,"column":79,"offset":4941},"indent":[]}},{"type":"listItem","loose":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"当调用greet2()时，greet 只执行了一部分","position":{"start":{"line":199,"column":3,"offset":4944},"end":{"line":199,"column":29,"offset":4970},"indent":[]}}],"position":{"start":{"line":199,"column":3,"offset":4944},"end":{"line":199,"column":29,"offset":4970},"indent":[]}}],"position":{"start":{"line":199,"column":1,"offset":4942},"end":{"line":199,"column":29,"offset":4970},"indent":[]}},{"type":"listItem","loose":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"调用另一个函数时，当前函数暂停并处于未完成状态,该函数的所有变量的值都还在内存中","position":{"start":{"line":200,"column":3,"offset":4973},"end":{"line":200,"column":43,"offset":5013},"indent":[]}}],"position":{"start":{"line":200,"column":3,"offset":4973},"end":{"line":200,"column":43,"offset":5013},"indent":[]}}],"position":{"start":{"line":200,"column":1,"offset":4971},"end":{"line":200,"column":43,"offset":5013},"indent":[]}},{"type":"listItem","loose":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"执行完greet2后，在回到greet，从离开的地方接着往下执行","position":{"start":{"line":201,"column":3,"offset":5016},"end":{"line":201,"column":35,"offset":5048},"indent":[]}}],"position":{"start":{"line":201,"column":3,"offset":5016},"end":{"line":201,"column":35,"offset":5048},"indent":[]}}],"position":{"start":{"line":201,"column":1,"offset":5014},"end":{"line":201,"column":35,"offset":5048},"indent":[]}},{"type":"listItem","loose":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"调用bye方法，打印bye，并从这个函数返回","position":{"start":{"line":202,"column":3,"offset":5051},"end":{"line":202,"column":25,"offset":5073},"indent":[]}}],"position":{"start":{"line":202,"column":3,"offset":5051},"end":{"line":202,"column":25,"offset":5073},"indent":[]}}],"position":{"start":{"line":202,"column":1,"offset":5049},"end":{"line":202,"column":25,"offset":5073},"indent":[]}},{"type":"listItem","loose":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"又回到greet，没有事情要做了，从greet函数返回","position":{"start":{"line":203,"column":3,"offset":5076},"end":{"line":203,"column":30,"offset":5103},"indent":[]}}],"position":{"start":{"line":203,"column":3,"offset":5076},"end":{"line":203,"column":30,"offset":5103},"indent":[]}}],"position":{"start":{"line":203,"column":1,"offset":5074},"end":{"line":203,"column":30,"offset":5103},"indent":[]}}],"position":{"start":{"line":195,"column":1,"offset":4753},"end":{"line":203,"column":30,"offset":5103},"indent":[1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"这个栈用于存储多个函数的变量，称为","position":{"start":{"line":205,"column":1,"offset":5105},"end":{"line":205,"column":18,"offset":5122},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"调用栈","position":{"start":{"line":205,"column":20,"offset":5124},"end":{"line":205,"column":23,"offset":5127},"indent":[]}}],"position":{"start":{"line":205,"column":18,"offset":5122},"end":{"line":205,"column":25,"offset":5129},"indent":[]}}],"position":{"start":{"line":205,"column":1,"offset":5105},"end":{"line":205,"column":25,"offset":5129},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"参考文献：《算法图解》","position":{"start":{"line":209,"column":1,"offset":5133},"end":{"line":209,"column":12,"offset":5144},"indent":[]}}],"position":{"start":{"line":209,"column":1,"offset":5133},"end":{"line":209,"column":12,"offset":5144},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Share","position":{"start":{"line":211,"column":4,"offset":5149},"end":{"line":211,"column":9,"offset":5154},"indent":[]}}],"position":{"start":{"line":211,"column":1,"offset":5146},"end":{"line":211,"column":9,"offset":5154},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"link","title":null,"url":"https://time.geekbang.org/column/article/1512","children":[{"type":"text","value":"分布式系统的技术栈","position":{"start":{"line":213,"column":6,"offset":5161},"end":{"line":213,"column":15,"offset":5170},"indent":[]}}],"position":{"start":{"line":213,"column":5,"offset":5160},"end":{"line":213,"column":63,"offset":5218},"indent":[]}}],"position":{"start":{"line":213,"column":1,"offset":5156},"end":{"line":213,"column":63,"offset":5218},"indent":[]}},{"type":"list","ordered":false,"start":null,"loose":false,"children":[{"type":"listItem","loose":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"分布式系统的关键技术","position":{"start":{"line":215,"column":3,"offset":5222},"end":{"line":215,"column":13,"offset":5232},"indent":[]}}],"position":{"start":{"line":215,"column":3,"offset":5222},"end":{"line":215,"column":13,"offset":5232},"indent":[]}},{"type":"list","ordered":false,"start":null,"loose":false,"children":[{"type":"listItem","loose":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"服务治理","position":{"start":{"line":216,"column":5,"offset":5237},"end":{"line":216,"column":9,"offset":5241},"indent":[]}}],"position":{"start":{"line":216,"column":5,"offset":5237},"end":{"line":216,"column":9,"offset":5241},"indent":[]}}],"position":{"start":{"line":216,"column":3,"offset":5235},"end":{"line":216,"column":9,"offset":5241},"indent":[]}},{"type":"listItem","loose":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"架构软件管理","position":{"start":{"line":217,"column":5,"offset":5246},"end":{"line":217,"column":11,"offset":5252},"indent":[]}}],"position":{"start":{"line":217,"column":5,"offset":5246},"end":{"line":217,"column":11,"offset":5252},"indent":[]}}],"position":{"start":{"line":217,"column":3,"offset":5244},"end":{"line":217,"column":11,"offset":5252},"indent":[]}},{"type":"listItem","loose":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"DevOps","position":{"start":{"line":218,"column":5,"offset":5257},"end":{"line":218,"column":11,"offset":5263},"indent":[]}}],"position":{"start":{"line":218,"column":5,"offset":5257},"end":{"line":218,"column":11,"offset":5263},"indent":[]}}],"position":{"start":{"line":218,"column":3,"offset":5255},"end":{"line":218,"column":11,"offset":5263},"indent":[]}},{"type":"listItem","loose":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"自动化运维","position":{"start":{"line":219,"column":5,"offset":5268},"end":{"line":219,"column":10,"offset":5273},"indent":[]}}],"position":{"start":{"line":219,"column":5,"offset":5268},"end":{"line":219,"column":10,"offset":5273},"indent":[]}}],"position":{"start":{"line":219,"column":3,"offset":5266},"end":{"line":219,"column":10,"offset":5273},"indent":[]}},{"type":"listItem","loose":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"资源调度管理","position":{"start":{"line":220,"column":5,"offset":5278},"end":{"line":220,"column":11,"offset":5284},"indent":[]}}],"position":{"start":{"line":220,"column":5,"offset":5278},"end":{"line":220,"column":11,"offset":5284},"indent":[]}}],"position":{"start":{"line":220,"column":3,"offset":5276},"end":{"line":220,"column":11,"offset":5284},"indent":[]}},{"type":"listItem","loose":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"整体架构监控","position":{"start":{"line":221,"column":5,"offset":5289},"end":{"line":221,"column":11,"offset":5295},"indent":[]}}],"position":{"start":{"line":221,"column":5,"offset":5289},"end":{"line":221,"column":11,"offset":5295},"indent":[]}}],"position":{"start":{"line":221,"column":3,"offset":5287},"end":{"line":221,"column":11,"offset":5295},"indent":[]}},{"type":"listItem","loose":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"流量控制","position":{"start":{"line":222,"column":5,"offset":5300},"end":{"line":222,"column":9,"offset":5304},"indent":[]}}],"position":{"start":{"line":222,"column":5,"offset":5300},"end":{"line":222,"column":9,"offset":5304},"indent":[]}}],"position":{"start":{"line":222,"column":3,"offset":5298},"end":{"line":222,"column":9,"offset":5304},"indent":[]}}],"position":{"start":{"line":216,"column":3,"offset":5235},"end":{"line":222,"column":9,"offset":5304},"indent":[3,3,3,3,3,3]}}],"position":{"start":{"line":215,"column":1,"offset":5220},"end":{"line":222,"column":9,"offset":5304},"indent":[1,1,1,1,1,1,1]}}],"position":{"start":{"line":215,"column":1,"offset":5220},"end":{"line":222,"column":9,"offset":5304},"indent":[1,1,1,1,1,1,1]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":224,"column":1,"offset":5306}}}}