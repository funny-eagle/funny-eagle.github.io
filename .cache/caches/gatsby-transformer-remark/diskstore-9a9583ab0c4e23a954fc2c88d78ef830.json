{"expireTime":9007200811185041000,"key":"transformer-remark-markdown-html-ast-1f2eea7813ce1faf7e70ef890b9305d2-gatsby-remark-imagesgatsby-remark-responsive-iframegatsby-remark-prismjsgatsby-remark-copy-linked-filesgatsby-remark-smartypants-","val":{"type":"root","children":[{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"Algorithm","position":{"start":{"line":2,"column":4,"offset":4},"end":{"line":2,"column":13,"offset":13}}}],"position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":13,"offset":13}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Palindrome Number","position":{"start":{"line":4,"column":5,"offset":19},"end":{"line":4,"column":22,"offset":36}}}],"position":{"start":{"line":4,"column":1,"offset":15},"end":{"line":4,"column":22,"offset":36}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">package</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>nocoder<span class=\"token punctuation\">.</span>leetcode<span class=\"token punctuation\">.</span>solution</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">/**\n * 9.Palindrome Number\n * &lt;p>\n * Determine whether an integer is a palindrome. An integer is a palindrome when it reads the same backward as forward.\n * &lt;p>\n * Example 1:\n * &lt;p>\n * Input: 121\n * Output: true\n * Example 2:\n * &lt;p>\n * Input: -121\n * Output: false\n * Explanation: From left to right, it reads -121. From right to left, it becomes 121-. Therefore it is not a palindrome.\n * Example 3:\n * &lt;p>\n * Input: 10\n * Output: false\n * Explanation: Reads 01 from right to left. Therefore it is not a palindrome.\n * Follow up:\n * &lt;p>\n * Coud you solve it without converting the integer to a string?\n *\n * @author jason\n * @date 18/9/1.\n */</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">PalindromeNumber</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">boolean</span> <span class=\"token function\">isPalindrome</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> x<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>x <span class=\"token operator\">&lt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token keyword\">int</span> div <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>x <span class=\"token operator\">/</span> div <span class=\"token operator\">>=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            div <span class=\"token operator\">*=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>x <span class=\"token operator\">!=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">int</span> left <span class=\"token operator\">=</span> x <span class=\"token operator\">/</span> div<span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">int</span> right <span class=\"token operator\">=</span> x <span class=\"token operator\">%</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>left <span class=\"token operator\">!=</span> right<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n\n            x <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>x <span class=\"token operator\">%</span> div<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span>\n            div <span class=\"token operator\">/=</span> <span class=\"token number\">100</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">PalindromeNumber</span><span class=\"token punctuation\">.</span><span class=\"token function\">isPalindrome</span><span class=\"token punctuation\">(</span><span class=\"token number\">121</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">PalindromeNumber</span><span class=\"token punctuation\">.</span><span class=\"token function\">isPalindrome</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">121</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">PalindromeNumber</span><span class=\"token punctuation\">.</span><span class=\"token function\">isPalindrome</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":6,"column":1,"offset":38},"end":{"line":67,"column":4,"offset":1466}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"Review","position":{"start":{"line":69,"column":4,"offset":1471},"end":{"line":69,"column":10,"offset":1477}}}],"position":{"start":{"line":69,"column":1,"offset":1468},"end":{"line":69,"column":10,"offset":1477}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Using Command Pattern in Java","position":{"start":{"line":71,"column":5,"offset":1483},"end":{"line":71,"column":34,"offset":1512}}}],"position":{"start":{"line":71,"column":1,"offset":1479},"end":{"line":71,"column":34,"offset":1512}}},{"type":"text","value":"\n"},{"type":"element","tagName":"blockquote","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"https://medium.com/@p.osinaga/using-command-pattern-in-java-6fd6bb36fd42"},"children":[{"type":"text","value":"https://medium.com/@p.osinaga/using-command-pattern-in-java-6fd6bb36fd42","position":{"start":{"line":73,"column":3,"offset":1516},"end":{"line":73,"column":75,"offset":1588}}}],"position":{"start":{"line":73,"column":3,"offset":1516},"end":{"line":73,"column":75,"offset":1588}}}],"position":{"start":{"line":73,"column":3,"offset":1516},"end":{"line":73,"column":75,"offset":1588}}},{"type":"text","value":"\n"}],"position":{"start":{"line":73,"column":1,"offset":1514},"end":{"line":73,"column":75,"offset":1588}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"命令模式属于行为型模式，将请求封装成对象，以便使用不同的请求、队列或者日志来参数化其它对象。命令模式也可以支持撤销操作。","position":{"start":{"line":75,"column":1,"offset":1590},"end":{"line":75,"column":61,"offset":1650}}}],"position":{"start":{"line":75,"column":1,"offset":1590},"end":{"line":75,"column":61,"offset":1650}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"img","properties":{"src":"https://raw.githubusercontent.com/yangjinlong86/nocoder/master/data/images/design-pattern/command.jpeg","alt":"command"},"children":[],"position":{"start":{"line":77,"column":1,"offset":1652},"end":{"line":77,"column":115,"offset":1766}}}],"position":{"start":{"line":77,"column":1,"offset":1652},"end":{"line":77,"column":115,"offset":1766}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"文中作者用 从 AppleStore 中选购商品为例，演示了命令模式在java中的使用，","position":{"start":{"line":79,"column":1,"offset":1768},"end":{"line":79,"column":45,"offset":1812}}},{"type":"raw","value":"<code class=\"language-text\">Store</code>","position":{"start":{"line":79,"column":45,"offset":1812},"end":{"line":79,"column":52,"offset":1819}}},{"type":"text","value":"类来记录购买哪些","position":{"start":{"line":79,"column":52,"offset":1819},"end":{"line":79,"column":60,"offset":1827}}},{"type":"raw","value":"<code class=\"language-text\">Product</code>","position":{"start":{"line":79,"column":60,"offset":1827},"end":{"line":79,"column":69,"offset":1836}}},{"type":"text","value":"和然后执行","position":{"start":{"line":79,"column":69,"offset":1836},"end":{"line":79,"column":74,"offset":1841}}},{"type":"raw","value":"<code class=\"language-text\">BuyProduct</code>","position":{"start":{"line":79,"column":74,"offset":1841},"end":{"line":79,"column":86,"offset":1853}}},{"type":"text","value":"和","position":{"start":{"line":79,"column":86,"offset":1853},"end":{"line":79,"column":87,"offset":1854}}},{"type":"raw","value":"<code class=\"language-text\">SellProduct</code>","position":{"start":{"line":79,"column":87,"offset":1854},"end":{"line":79,"column":100,"offset":1867}}},{"type":"text","value":"命令，相当于把多个命令记录下来，然后顺序执行这些命令，这些命令可以组合、复用。","position":{"start":{"line":79,"column":100,"offset":1867},"end":{"line":79,"column":139,"offset":1906}}}],"position":{"start":{"line":79,"column":1,"offset":1768},"end":{"line":79,"column":139,"offset":1906}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"PS: ","position":{"start":{"line":81,"column":1,"offset":1908},"end":{"line":81,"column":5,"offset":1912}}},{"type":"raw","value":"<code class=\"language-text\">BuyProduct</code>","position":{"start":{"line":81,"column":5,"offset":1912},"end":{"line":81,"column":17,"offset":1924}}},{"type":"text","value":"类里居然调用的","position":{"start":{"line":81,"column":17,"offset":1924},"end":{"line":81,"column":24,"offset":1931}}},{"type":"raw","value":"<code class=\"language-text\">product</code>","position":{"start":{"line":81,"column":24,"offset":1931},"end":{"line":81,"column":33,"offset":1940}}},{"type":"text","value":"的","position":{"start":{"line":81,"column":33,"offset":1940},"end":{"line":81,"column":34,"offset":1941}}},{"type":"raw","value":"<code class=\"language-text\">sell()</code>","position":{"start":{"line":81,"column":34,"offset":1941},"end":{"line":81,"column":42,"offset":1949}}},{"type":"text","value":"方法，这个老外太TM不认真了。","position":{"start":{"line":81,"column":42,"offset":1949},"end":{"line":81,"column":57,"offset":1964}}}],"position":{"start":{"line":81,"column":1,"offset":1908},"end":{"line":81,"column":57,"offset":1964}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"Tip","position":{"start":{"line":83,"column":4,"offset":1969},"end":{"line":83,"column":7,"offset":1972}}}],"position":{"start":{"line":83,"column":1,"offset":1966},"end":{"line":83,"column":7,"offset":1972}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"两个小坑","position":{"start":{"line":85,"column":1,"offset":1974},"end":{"line":85,"column":5,"offset":1978}}}],"position":{"start":{"line":85,"column":1,"offset":1974},"end":{"line":85,"column":5,"offset":1978}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ol","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"一个 vue 项目 执行","position":{"start":{"line":87,"column":4,"offset":1983},"end":{"line":87,"column":16,"offset":1995}}},{"type":"raw","value":"<code class=\"language-text\">npm run dev</code>","position":{"start":{"line":87,"column":16,"offset":1995},"end":{"line":87,"column":29,"offset":2008}}},{"type":"text","value":" 提示有几个 modules 和 dependencies 找不到，之前在 windows 下build run 都是没问题的，换了 ubuntu 之后，就运行不起来，检查后发现这几个路径的大小没写对，在 linux 环境下引入 module 和 dependencies 是要区分大小写的。当然这也是开发人员书写不规范问题，引入文件应当与实际文件大小写保持一致才是。","position":{"start":{"line":87,"column":29,"offset":2008},"end":{"line":87,"column":213,"offset":2192}}}],"position":{"start":{"line":87,"column":1,"offset":1980},"end":{"line":87,"column":213,"offset":2192}}},{"type":"text","value":"\n"}],"position":{"start":{"line":87,"column":1,"offset":1980},"end":{"line":87,"column":213,"offset":2192}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">ERROR  Failed to compile with 5 errors\n\nThese dependencies were not found:\n\n* @/components/login/Login.css in ./src/router/index.js\n* @/components/library/LibraryMaintain/LibraryMaintain.vue in ./src/router/index.js\n* @/components/webmanagement/details/Details.vue in ./src/router/index.js\n\nTo install them, you can run: npm install --save @/components/login/Login.css @/components/library/LibraryMaintain/LibraryMaintain.vue @/components/webmanagement/details/Details.vue\n\n\nThese relative modules were not found:\n\n* ../../common/infoWindowLight.js in ./~/_babel-loader@7.1.5@babel-loader/lib!./~/_vue-loader@13.7.3@vue-loader/lib/selector.js?type=script&amp;index=0!./src/components/common/scatterMap.vue\n* ../../common/infoWindow.js in ./~/_babel-loader@7.1.5@babel-loader/lib!./~/_vue-loader@13.7.3@vue-loader/lib/selector.js?type=script&amp;index=0!./src/components/common/scatterMap.vue</code></pre></div>","position":{"start":{"line":89,"column":1,"offset":2194},"end":{"line":105,"column":4,"offset":3085}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"2.为一个项目配置了nginx转发，80端口转发到8075端口，直接用ip访问，上传图片大小超过1M就会抛 ","position":{"start":{"line":107,"column":1,"offset":3087},"end":{"line":107,"column":55,"offset":3141}}},{"type":"raw","value":"<code class=\"language-text\">413 request entity too large</code>","position":{"start":{"line":107,"column":55,"offset":3141},"end":{"line":107,"column":85,"offset":3171}}},{"type":"text","value":"，修改nginx配置文件 ","position":{"start":{"line":107,"column":85,"offset":3171},"end":{"line":107,"column":98,"offset":3184}}},{"type":"raw","value":"<code class=\"language-text\">client_max_body_size=20M</code>","position":{"start":{"line":107,"column":98,"offset":3184},"end":{"line":107,"column":124,"offset":3210}}},{"type":"text","value":"，默认配置大小为1M，超过就会抛上述异常。","position":{"start":{"line":107,"column":124,"offset":3210},"end":{"line":107,"column":145,"offset":3231}}}],"position":{"start":{"line":107,"column":1,"offset":3087},"end":{"line":107,"column":145,"offset":3231}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"Share","position":{"start":{"line":109,"column":4,"offset":3236},"end":{"line":109,"column":9,"offset":3241}}}],"position":{"start":{"line":109,"column":1,"offset":3233},"end":{"line":109,"column":9,"offset":3241}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Command Pattern","position":{"start":{"line":111,"column":5,"offset":3247},"end":{"line":111,"column":20,"offset":3262}}}],"position":{"start":{"line":111,"column":1,"offset":3243},"end":{"line":111,"column":20,"offset":3262}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"命令模式，我觉得还是比较好理解的，《大话设计模式》里作者用买烤羊肉串和《Head First 设计模式》的餐厅点餐的例子、遥控器的例子，足以让我们很好的理解这个模式的使用了。例如餐厅里，顾客（Client）创建一个订单，订单里的菜品就是由一个个的命令（Command）组成，交给服务员（Invoker），将订单拿走交给厨师（Receiver），厨师按菜单制做菜品，相当于顺序执行命令。项目中，我们使用Apache Chain，结合责任链和命令模式，来处理队列请求，我们老大很喜欢用这个Chain，放在下次arts的share来写一下Apache Chain以及责任链模式。","position":{"start":{"line":113,"column":1,"offset":3264},"end":{"line":113,"column":287,"offset":3550}}}],"position":{"start":{"line":113,"column":1,"offset":3264},"end":{"line":113,"column":287,"offset":3550}}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":114,"column":1,"offset":3551}}}}