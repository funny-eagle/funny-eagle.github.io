{"expireTime":9007200811185226000,"key":"transformer-remark-markdown-ast-129ab1e164296490a5038363b0c1153f-gatsby-remark-imagesgatsby-remark-responsive-iframegatsby-remark-prismjsgatsby-remark-copy-linked-filesgatsby-remark-smartypants-","val":{"type":"root","children":[{"type":"blockquote","children":[{"type":"paragraph","children":[{"type":"text","value":"本期各种日志相关","position":{"start":{"line":2,"column":3,"offset":3},"end":{"line":2,"column":11,"offset":11},"indent":[]}}],"position":{"start":{"line":2,"column":3,"offset":3},"end":{"line":2,"column":11,"offset":11},"indent":[]}}],"position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":11,"offset":11},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Algorithm","position":{"start":{"line":4,"column":4,"offset":16},"end":{"line":4,"column":13,"offset":25},"indent":[]}}],"position":{"start":{"line":4,"column":1,"offset":13},"end":{"line":4,"column":13,"offset":25},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"link","title":null,"url":"https://leetcode.com/problems/reorder-log-files/","children":[{"type":"text","value":"937. Reorder Log Files","position":{"start":{"line":6,"column":6,"offset":32},"end":{"line":6,"column":28,"offset":54},"indent":[]}}],"position":{"start":{"line":6,"column":5,"offset":31},"end":{"line":6,"column":79,"offset":105},"indent":[]}}],"position":{"start":{"line":6,"column":1,"offset":27},"end":{"line":6,"column":79,"offset":105},"indent":[]}},{"type":"html","lang":"java","value":"<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">package</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>nocoder<span class=\"token punctuation\">.</span>leetcode<span class=\"token punctuation\">.</span>solution</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util</span><span class=\"token punctuation\">.</span><span class=\"token class-name\">ArrayList</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util</span><span class=\"token punctuation\">.</span><span class=\"token class-name\">TreeMap</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">/**\n * 937. Reorder Log Files\n *\n * You have an array of logs.  Each log is a space delimited string of words.\n *\n * For each log, the first word in each log is an alphanumeric identifier.  Then, either:\n *\n * Each word after the identifier will consist only of lowercase letters, or;\n * Each word after the identifier will consist only of digits.\n * We will call these two varieties of logs letter-logs and digit-logs.\n * It is guaranteed that each log has at least one word after its identifier.\n *\n * Reorder the logs so that all of the letter-logs come before any digit-log.\n *\n * The letter-logs are ordered lexicographically ignoring identifier,\n *\n * with the identifier used in case of ties.  The digit-logs should be put in their original order.\n *\n * Return the final order of the logs.\n *\n *\n * Example 1:\n *\n * Input: [\"a1 9 2 3 1\",\"g1 act car\",\"zo4 4 7\",\"ab1 off key dog\",\"a8 act zoo\"]\n * Output: [\"g1 act car\",\"a8 act zoo\",\"ab1 off key dog\",\"a1 9 2 3 1\",\"zo4 4 7\"]\n *\n *\n * Note:\n *\n * 0 &lt;= logs.length &lt;= 100\n * 3 &lt;= logs[i].length &lt;= 100\n * logs[i] is guaranteed to have an identifier, and a word after the identifier.\n *\n * @author jason\n * @date 2018/11/11.\n */</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ReorderLogFiles</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token function\">reorderLogFiles</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> logs<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token class-name\">ArrayList</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">></span></span> list <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ArrayList</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">TreeMap</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">></span></span> map <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">TreeMap</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> str<span class=\"token operator\">:</span> logs<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> tokens <span class=\"token operator\">=</span> str<span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token string\">\" \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token class-name\">Character</span><span class=\"token punctuation\">.</span><span class=\"token function\">isAlphabetic</span><span class=\"token punctuation\">(</span>tokens<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">charAt</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                list<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>str<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token class-name\">String</span> key <span class=\"token operator\">=</span> str<span class=\"token punctuation\">.</span><span class=\"token function\">substring</span><span class=\"token punctuation\">(</span>tokens<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">length</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">trim</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                map<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">,</span> str<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> result <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span>logs<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> key<span class=\"token operator\">:</span> map<span class=\"token punctuation\">.</span><span class=\"token function\">keySet</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            result<span class=\"token punctuation\">[</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> map<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> str<span class=\"token operator\">:</span> list<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n            result<span class=\"token punctuation\">[</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> str<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token keyword\">return</span> result<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> logs <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">{</span><span class=\"token string\">\"a1 9 2 3 1\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"g1 act car\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"zo4 4 7\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"ab1 off key dog\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"a8 act zoo\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">reorderLogFiles</span><span class=\"token punctuation\">(</span>logs<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":8,"column":1,"offset":107},"end":{"line":84,"column":4,"offset":2379},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Review","position":{"start":{"line":86,"column":4,"offset":2384},"end":{"line":86,"column":10,"offset":2390},"indent":[]}}],"position":{"start":{"line":86,"column":1,"offset":2381},"end":{"line":86,"column":10,"offset":2390},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"link","title":null,"url":"https://www.loggly.com/blog/30-best-practices-logging-scale/","children":[{"type":"text","value":"30 best practices for logging at scale","position":{"start":{"line":88,"column":6,"offset":2397},"end":{"line":88,"column":44,"offset":2435},"indent":[]}}],"position":{"start":{"line":88,"column":5,"offset":2396},"end":{"line":88,"column":107,"offset":2498},"indent":[]}}],"position":{"start":{"line":88,"column":1,"offset":2392},"end":{"line":88,"column":107,"offset":2498},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"一篇来自 Jason Skowronski 的文章，大规模记录日志的一些最佳实践，包括日志的创建，传输，以及日志的管理，我主要理解了一下创建日志的最佳做法。","position":{"start":{"line":90,"column":1,"offset":2500},"end":{"line":90,"column":79,"offset":2578},"indent":[]}}],"position":{"start":{"line":90,"column":1,"offset":2500},"end":{"line":90,"column":79,"offset":2578},"indent":[]}},{"type":"list","ordered":false,"start":null,"loose":false,"children":[{"type":"listItem","loose":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"创建日志的最佳做法","position":{"start":{"line":92,"column":3,"offset":2582},"end":{"line":92,"column":12,"offset":2591},"indent":[]}}],"position":{"start":{"line":92,"column":3,"offset":2582},"end":{"line":92,"column":12,"offset":2591},"indent":[]}},{"type":"list","ordered":false,"start":null,"loose":false,"children":[{"type":"listItem","loose":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"使用标准且易于配置的日志框架。","position":{"start":{"line":93,"column":4,"offset":2595},"end":{"line":93,"column":19,"offset":2610},"indent":[]}}],"position":{"start":{"line":93,"column":4,"offset":2595},"end":{"line":93,"column":19,"offset":2610},"indent":[]}},{"type":"list","ordered":false,"start":null,"loose":false,"children":[{"type":"listItem","loose":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"log4j，log4net等允许比硬编码或专有框架更快的配置更改。","position":{"start":{"line":94,"column":5,"offset":2615},"end":{"line":94,"column":38,"offset":2648},"indent":[]}}],"position":{"start":{"line":94,"column":5,"offset":2615},"end":{"line":94,"column":38,"offset":2648},"indent":[]}}],"position":{"start":{"line":94,"column":3,"offset":2613},"end":{"line":94,"column":38,"offset":2648},"indent":[]}}],"position":{"start":{"line":94,"column":3,"offset":2613},"end":{"line":94,"column":38,"offset":2648},"indent":[]}}],"position":{"start":{"line":93,"column":2,"offset":2593},"end":{"line":94,"column":38,"offset":2648},"indent":[2]}},{"type":"listItem","loose":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"使用具有灵活输出选项的日志框架。","position":{"start":{"line":95,"column":4,"offset":2652},"end":{"line":95,"column":20,"offset":2668},"indent":[]}}],"position":{"start":{"line":95,"column":4,"offset":2652},"end":{"line":95,"column":20,"offset":2668},"indent":[]}},{"type":"list","ordered":false,"start":null,"loose":false,"children":[{"type":"listItem","loose":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"查看控制台登录开发并集中prod日志，无需额外的插件或代理。","position":{"start":{"line":96,"column":5,"offset":2673},"end":{"line":96,"column":35,"offset":2703},"indent":[]}}],"position":{"start":{"line":96,"column":5,"offset":2673},"end":{"line":96,"column":35,"offset":2703},"indent":[]}}],"position":{"start":{"line":96,"column":3,"offset":2671},"end":{"line":96,"column":35,"offset":2703},"indent":[]}}],"position":{"start":{"line":96,"column":3,"offset":2671},"end":{"line":96,"column":35,"offset":2703},"indent":[]}}],"position":{"start":{"line":95,"column":2,"offset":2650},"end":{"line":96,"column":35,"offset":2703},"indent":[2]}},{"type":"listItem","loose":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"使用像JSON这样的标准结构化格式。","position":{"start":{"line":97,"column":4,"offset":2707},"end":{"line":97,"column":22,"offset":2725},"indent":[]}}],"position":{"start":{"line":97,"column":4,"offset":2707},"end":{"line":97,"column":22,"offset":2725},"indent":[]}},{"type":"list","ordered":false,"start":null,"loose":false,"children":[{"type":"listItem","loose":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"自定义格式和原始文本日志需要自定义解析规则来提取数据以进行分析。","position":{"start":{"line":98,"column":5,"offset":2730},"end":{"line":98,"column":37,"offset":2762},"indent":[]}}],"position":{"start":{"line":98,"column":5,"offset":2730},"end":{"line":98,"column":37,"offset":2762},"indent":[]}}],"position":{"start":{"line":98,"column":3,"offset":2728},"end":{"line":98,"column":37,"offset":2762},"indent":[]}}],"position":{"start":{"line":98,"column":3,"offset":2728},"end":{"line":98,"column":37,"offset":2762},"indent":[]}}],"position":{"start":{"line":97,"column":2,"offset":2705},"end":{"line":98,"column":37,"offset":2762},"indent":[2]}},{"type":"listItem","loose":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Create a standard schema for your fields.（没理解）","position":{"start":{"line":99,"column":4,"offset":2766},"end":{"line":99,"column":50,"offset":2812},"indent":[]}}],"position":{"start":{"line":99,"column":4,"offset":2766},"end":{"line":99,"column":50,"offset":2812},"indent":[]}},{"type":"list","ordered":false,"start":null,"loose":false,"children":[{"type":"listItem","loose":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Adding fields ad hoc can create a rat’s nest. A standard lets everyone know where to look.","position":{"start":{"line":100,"column":5,"offset":2817},"end":{"line":100,"column":95,"offset":2907},"indent":[]}}],"position":{"start":{"line":100,"column":5,"offset":2817},"end":{"line":100,"column":95,"offset":2907},"indent":[]}}],"position":{"start":{"line":100,"column":3,"offset":2815},"end":{"line":100,"column":95,"offset":2907},"indent":[]}}],"position":{"start":{"line":100,"column":3,"offset":2815},"end":{"line":100,"column":95,"offset":2907},"indent":[]}}],"position":{"start":{"line":99,"column":2,"offset":2764},"end":{"line":100,"column":95,"offset":2907},"indent":[2]}},{"type":"listItem","loose":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"不要让日志记录阻止您的应用程序。","position":{"start":{"line":101,"column":4,"offset":2911},"end":{"line":101,"column":20,"offset":2927},"indent":[]}}],"position":{"start":{"line":101,"column":4,"offset":2911},"end":{"line":101,"column":20,"offset":2927},"indent":[]}},{"type":"list","ordered":false,"start":null,"loose":false,"children":[{"type":"listItem","loose":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"使用缓冲区或队列异步写入日志，以便应用程序可以继续运行。","position":{"start":{"line":102,"column":5,"offset":2932},"end":{"line":102,"column":33,"offset":2960},"indent":[]}}],"position":{"start":{"line":102,"column":5,"offset":2932},"end":{"line":102,"column":33,"offset":2960},"indent":[]}}],"position":{"start":{"line":102,"column":3,"offset":2930},"end":{"line":102,"column":33,"offset":2960},"indent":[]}}],"position":{"start":{"line":102,"column":3,"offset":2930},"end":{"line":102,"column":33,"offset":2960},"indent":[]}}],"position":{"start":{"line":101,"column":2,"offset":2909},"end":{"line":102,"column":33,"offset":2960},"indent":[2]}},{"type":"listItem","loose":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"注意平台即服务（PaaS）或基于容器的环境中的限制。","position":{"start":{"line":103,"column":4,"offset":2964},"end":{"line":103,"column":30,"offset":2990},"indent":[]}}],"position":{"start":{"line":103,"column":4,"offset":2964},"end":{"line":103,"column":30,"offset":2990},"indent":[]}},{"type":"list","ordered":false,"start":null,"loose":false,"children":[{"type":"listItem","loose":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Heroku和Docker等环境对主机访问，syslog守护程序等设置了限制。","position":{"start":{"line":104,"column":5,"offset":2995},"end":{"line":104,"column":44,"offset":3034},"indent":[]}}],"position":{"start":{"line":104,"column":5,"offset":2995},"end":{"line":104,"column":44,"offset":3034},"indent":[]}}],"position":{"start":{"line":104,"column":3,"offset":2993},"end":{"line":104,"column":44,"offset":3034},"indent":[]}}],"position":{"start":{"line":104,"column":3,"offset":2993},"end":{"line":104,"column":44,"offset":3034},"indent":[]}}],"position":{"start":{"line":103,"column":2,"offset":2962},"end":{"line":104,"column":44,"offset":3034},"indent":[2]}},{"type":"listItem","loose":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"为团队提供标准日志记录配置。","position":{"start":{"line":105,"column":4,"offset":3038},"end":{"line":105,"column":18,"offset":3052},"indent":[]}}],"position":{"start":{"line":105,"column":4,"offset":3038},"end":{"line":105,"column":18,"offset":3052},"indent":[]}}],"position":{"start":{"line":105,"column":2,"offset":3036},"end":{"line":105,"column":18,"offset":3052},"indent":[]}}],"position":{"start":{"line":93,"column":2,"offset":2593},"end":{"line":105,"column":18,"offset":3052},"indent":[2,2,2,2,2,2,2,2,2,2,2,2]}}],"position":{"start":{"line":92,"column":1,"offset":2580},"end":{"line":105,"column":18,"offset":3052},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1]}}],"position":{"start":{"line":92,"column":1,"offset":2580},"end":{"line":105,"column":18,"offset":3052},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Tip","position":{"start":{"line":107,"column":4,"offset":3057},"end":{"line":107,"column":7,"offset":3060},"indent":[]}}],"position":{"start":{"line":107,"column":1,"offset":3054},"end":{"line":107,"column":7,"offset":3060},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Ubuntu 启动界面修改","position":{"start":{"line":109,"column":5,"offset":3066},"end":{"line":109,"column":18,"offset":3079},"indent":[]}}],"position":{"start":{"line":109,"column":1,"offset":3062},"end":{"line":109,"column":18,"offset":3079},"indent":[]}},{"type":"html","lang":"shell","value":"<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token function\">sudo</span> update-alternatives --config default.plymouth\n<span class=\"token function\">sudo</span> update-initramfs -u</code></pre></div>","position":{"start":{"line":111,"column":1,"offset":3081},"end":{"line":114,"column":4,"offset":3169},"indent":[1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"线程切换导致 Canal Message 乱序消费问题","position":{"start":{"line":116,"column":5,"offset":3175},"end":{"line":116,"column":32,"offset":3202},"indent":[]}}],"position":{"start":{"line":116,"column":1,"offset":3171},"end":{"line":116,"column":32,"offset":3202},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"这周遇到一个多线程问题，程序的一个BUG，Canal 要求顺序提交Message Batch Id，由于我在程序里使用了多线程进行提交 Canal Message Batch Id， 当线程切换时，会发生乱序提交的情况，于是 Canal Client 抛出 RuntimeException，导致主线程挂掉。解决办法就是把获取Message和提交BatchId改为同步执行，Ack操作之后，再开启新的线程处理Message。","position":{"start":{"line":118,"column":1,"offset":3204},"end":{"line":118,"column":213,"offset":3416},"indent":[]}}],"position":{"start":{"line":118,"column":1,"offset":3204},"end":{"line":118,"column":213,"offset":3416},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Share","position":{"start":{"line":120,"column":4,"offset":3421},"end":{"line":120,"column":9,"offset":3426},"indent":[]}}],"position":{"start":{"line":120,"column":1,"offset":3418},"end":{"line":120,"column":9,"offset":3426},"indent":[]}},{"type":"blockquote","children":[{"type":"paragraph","children":[{"type":"text","value":"耗叔布置的”命题作文”","position":{"start":{"line":122,"column":3,"offset":3430},"end":{"line":122,"column":14,"offset":3441},"indent":[]}}],"position":{"start":{"line":122,"column":3,"offset":3430},"end":{"line":122,"column":14,"offset":3441},"indent":[]}}],"position":{"start":{"line":122,"column":1,"offset":3428},"end":{"line":122,"column":14,"offset":3441},"indent":[]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://github.com/yangjinlong86/arts/blob/master/2018/about-logfile.md","children":[{"type":"text","value":"关于日志的那些事儿","position":{"start":{"line":124,"column":2,"offset":3444},"end":{"line":124,"column":11,"offset":3453},"indent":[]}}],"position":{"start":{"line":124,"column":1,"offset":3443},"end":{"line":124,"column":85,"offset":3527},"indent":[]}},{"type":"text","value":"\n整理了关于日志的一些内容，耗叔要求的【目标是一篇“引经据典“的，“全面系统“的对日志的介绍】。结合一些参考链接和以往的经验，主要对软件开发过程中日志相关的知识进行梳理和学习。","position":{"start":{"line":124,"column":85,"offset":3527},"end":{"line":125,"column":88,"offset":3615},"indent":[1]}}],"position":{"start":{"line":124,"column":1,"offset":3443},"end":{"line":125,"column":88,"offset":3615},"indent":[1]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":129,"column":1,"offset":3619}}}}