{"expireTime":9007200810530858000,"key":"transformer-remark-markdown-ast-58bfa9cbb077ad1a11d1c155489f41a0-gatsby-remark-imagesgatsby-remark-responsive-iframegatsby-remark-prismjsgatsby-remark-copy-linked-filesgatsby-remark-smartypants-","val":{"type":"root","children":[{"type":"blockquote","children":[{"type":"paragraph","children":[{"type":"text","value":"我们一般都会把数据库的连接信息写在properties配置文件里，只要打开了配置文件，就能直接看到数据库的用户名密码等信息，一些项目会要求不能出现明文密码，接下来，简单三步，实现配置文件里的用户名和密码加密。","position":{"start":{"line":1,"column":2,"offset":1},"end":{"line":1,"column":106,"offset":105},"indent":[]}}],"position":{"start":{"line":1,"column":2,"offset":1},"end":{"line":1,"column":106,"offset":105},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":1,"column":106,"offset":105},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"一、加密解密工具类","position":{"start":{"line":3,"column":4,"offset":110},"end":{"line":3,"column":13,"offset":119},"indent":[]}}],"position":{"start":{"line":3,"column":1,"offset":107},"end":{"line":3,"column":13,"offset":119},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"我以Base64为例，写个简单的加密和解密工具","position":{"start":{"line":5,"column":1,"offset":121},"end":{"line":5,"column":24,"offset":144},"indent":[]}}],"position":{"start":{"line":5,"column":1,"offset":121},"end":{"line":5,"column":24,"offset":144},"indent":[]}},{"type":"html","lang":"java","value":"<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">package</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>nocoder<span class=\"token punctuation\">.</span>utils</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>commons<span class=\"token punctuation\">.</span>codec<span class=\"token punctuation\">.</span>binary</span><span class=\"token punctuation\">.</span><span class=\"token class-name\">Base64</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>commons<span class=\"token punctuation\">.</span>lang3</span><span class=\"token punctuation\">.</span><span class=\"token class-name\">StringUtils</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">/**\n * EncryptUtil\n * Created by jason on 2017/7/18.\n */</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">EncryptUtil</span> <span class=\"token punctuation\">{</span>\n\n    <span class=\"token comment\">/**\n     * 加密\n     * @param value\n     * @return encode string value\n     */</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">String</span> <span class=\"token function\">encode</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">StringUtils</span><span class=\"token punctuation\">.</span><span class=\"token function\">isNotBlank</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n            <span class=\"token class-name\">Base64</span> base64 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Base64</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">(</span>base64<span class=\"token punctuation\">.</span><span class=\"token function\">encode</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">.</span><span class=\"token function\">getBytes</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">return</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">/**\n     * 解密\n     * @param value\n     * @return decode string value\n     */</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">String</span> <span class=\"token function\">decode</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">StringUtils</span><span class=\"token punctuation\">.</span><span class=\"token function\">isNotBlank</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n            <span class=\"token class-name\">Base64</span> base64 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Base64</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">(</span>base64<span class=\"token punctuation\">.</span><span class=\"token function\">decode</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">.</span><span class=\"token function\">getBytes</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">return</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">EncryptUtil</span><span class=\"token punctuation\">.</span><span class=\"token function\">encode</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"test\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">EncryptUtil</span><span class=\"token punctuation\">.</span><span class=\"token function\">decode</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"dGVzdA==\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":6,"column":1,"offset":145},"end":{"line":50,"column":4,"offset":1162},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"二、通过继承spring配置类并重写处理方法实现解密","position":{"start":{"line":51,"column":4,"offset":1166},"end":{"line":51,"column":30,"offset":1192},"indent":[]}}],"position":{"start":{"line":51,"column":1,"offset":1163},"end":{"line":51,"column":30,"offset":1192},"indent":[]}},{"type":"html","lang":"java","value":"<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">package</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>nocoder<span class=\"token punctuation\">.</span>security</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>commons<span class=\"token punctuation\">.</span>lang3</span><span class=\"token punctuation\">.</span><span class=\"token class-name\">StringUtils</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>nocoder<span class=\"token punctuation\">.</span>utils</span><span class=\"token punctuation\">.</span><span class=\"token class-name\">EncryptUtil</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>beans</span><span class=\"token punctuation\">.</span><span class=\"token class-name\">BeansException</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>beans<span class=\"token punctuation\">.</span>factory</span><span class=\"token punctuation\">.</span><span class=\"token class-name\">BeanInitializationException</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>beans<span class=\"token punctuation\">.</span>factory<span class=\"token punctuation\">.</span>config</span><span class=\"token punctuation\">.</span><span class=\"token class-name\">ConfigurableListableBeanFactory</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>beans<span class=\"token punctuation\">.</span>factory<span class=\"token punctuation\">.</span>config</span><span class=\"token punctuation\">.</span><span class=\"token class-name\">PropertyPlaceholderConfigurer</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util</span><span class=\"token punctuation\">.</span><span class=\"token class-name\">Properties</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">/**\n * 通过继承spring配置类并重写处理方法实现密文解密\n * Created by jason on 2017/7/18.\n */</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">EncryptPropertyPlaceholderConfigurer</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">PropertyPlaceholderConfigurer</span><span class=\"token punctuation\">{</span>\n    <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">protected</span> <span class=\"token keyword\">void</span> <span class=\"token function\">processProperties</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ConfigurableListableBeanFactory</span> beanFactory<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Properties</span> props<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">BeansException</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token class-name\">String</span> username <span class=\"token operator\">=</span> props<span class=\"token punctuation\">.</span><span class=\"token function\">getProperty</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"username\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">StringUtils</span><span class=\"token punctuation\">.</span><span class=\"token function\">isNotBlank</span><span class=\"token punctuation\">(</span>username<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n                props<span class=\"token punctuation\">.</span><span class=\"token function\">setProperty</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"username\"</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">EncryptUtil</span><span class=\"token punctuation\">.</span><span class=\"token function\">decode</span><span class=\"token punctuation\">(</span>username<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n\n            <span class=\"token class-name\">String</span> password <span class=\"token operator\">=</span> props<span class=\"token punctuation\">.</span><span class=\"token function\">getProperty</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"password\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">StringUtils</span><span class=\"token punctuation\">.</span><span class=\"token function\">isNotBlank</span><span class=\"token punctuation\">(</span>password<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n                props<span class=\"token punctuation\">.</span><span class=\"token function\">setProperty</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"password\"</span><span class=\"token punctuation\">,</span><span class=\"token class-name\">EncryptUtil</span><span class=\"token punctuation\">.</span><span class=\"token function\">decode</span><span class=\"token punctuation\">(</span>password<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n            <span class=\"token keyword\">super</span><span class=\"token punctuation\">.</span><span class=\"token function\">processProperties</span><span class=\"token punctuation\">(</span>beanFactory<span class=\"token punctuation\">,</span> props<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Exception</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            e<span class=\"token punctuation\">.</span><span class=\"token function\">printStackTrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">BeanInitializationException</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span><span class=\"token function\">getMessage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":52,"column":1,"offset":1193},"end":{"line":89,"column":4,"offset":2553},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"三、修改配置文件","position":{"start":{"line":90,"column":4,"offset":2557},"end":{"line":90,"column":12,"offset":2565},"indent":[]}}],"position":{"start":{"line":90,"column":1,"offset":2554},"end":{"line":90,"column":12,"offset":2565},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"1、使用加密工具类对用户名和密码进行加密，修改properties配置文件","position":{"start":{"line":92,"column":1,"offset":2567},"end":{"line":92,"column":38,"offset":2604},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">config.properties</code>","position":{"start":{"line":92,"column":38,"offset":2604},"end":{"line":92,"column":57,"offset":2623},"indent":[]}}],"position":{"start":{"line":92,"column":1,"offset":2567},"end":{"line":92,"column":57,"offset":2623},"indent":[]}},{"type":"html","lang":"java","value":"<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\">driver<span class=\"token operator\">=</span>org<span class=\"token punctuation\">.</span>postgresql<span class=\"token punctuation\">.</span><span class=\"token class-name\">Driver</span>\nurl<span class=\"token operator\">=</span>jdbc<span class=\"token operator\">:</span>postgresql<span class=\"token operator\">:</span><span class=\"token operator\">/</span><span class=\"token operator\">/</span><span class=\"token number\">127.0</span><span class=\"token number\">.0</span><span class=\"token number\">.1</span><span class=\"token operator\">:</span><span class=\"token number\">5432</span><span class=\"token operator\">/</span>freda_db\nusername<span class=\"token operator\">=</span>加密后的用户名\npassword<span class=\"token operator\">=</span>加密后的密码\n#定义初始连接数\ninitialSize<span class=\"token operator\">=</span><span class=\"token number\">0</span>\n#定义最大连接数\nmaxActive<span class=\"token operator\">=</span><span class=\"token number\">50</span>\n#定义最大空闲\nmaxIdle<span class=\"token operator\">=</span><span class=\"token number\">50</span>\n#定义最小空闲\nminIdle<span class=\"token operator\">=</span><span class=\"token number\">1</span>\n#定义最长等待时间\nmaxWait<span class=\"token operator\">=</span><span class=\"token number\">60000</span></code></pre></div>","position":{"start":{"line":93,"column":1,"offset":2624},"end":{"line":108,"column":4,"offset":2849},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"2、修改","position":{"start":{"line":110,"column":1,"offset":2851},"end":{"line":110,"column":5,"offset":2855},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">applicationContext.xml</code>","position":{"start":{"line":110,"column":5,"offset":2855},"end":{"line":110,"column":29,"offset":2879},"indent":[]}},{"type":"text","value":"，引入配置文件","position":{"start":{"line":110,"column":29,"offset":2879},"end":{"line":110,"column":36,"offset":2886},"indent":[]}}],"position":{"start":{"line":110,"column":1,"offset":2851},"end":{"line":110,"column":36,"offset":2886},"indent":[]}},{"type":"html","lang":"java","value":"<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span><span class=\"token operator\">--</span> 引入配置文件，这里的<span class=\"token keyword\">class</span>就是之前写的那个<span class=\"token class-name\">Spring</span>配置类的路径 <span class=\"token operator\">--</span><span class=\"token operator\">></span>\n\t<span class=\"token operator\">&lt;</span>bean id<span class=\"token operator\">=</span><span class=\"token string\">\"encryptPropertyConfigurer\"</span> <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"org.nocoder.security.EncryptPropertyPlaceholderConfigurer\"</span><span class=\"token operator\">></span>\n\t\t<span class=\"token operator\">&lt;</span>property name<span class=\"token operator\">=</span><span class=\"token string\">\"locations\"</span><span class=\"token operator\">></span>\n\t\t\t<span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>list<span class=\"token punctuation\">></span></span>\n\t\t\t\t<span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>value<span class=\"token punctuation\">></span></span>classpath<span class=\"token operator\">:</span>config<span class=\"token punctuation\">.</span>properties<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>value<span class=\"token operator\">></span>\n\t\t\t<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>list<span class=\"token operator\">></span>\n\t\t<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>property<span class=\"token operator\">></span>\n\t<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>bean<span class=\"token operator\">></span></code></pre></div>","position":{"start":{"line":111,"column":1,"offset":2887},"end":{"line":120,"column":4,"offset":3169},"indent":[1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"OK了，就这三步，重启服务试试看！","position":{"start":{"line":121,"column":1,"offset":3170},"end":{"line":121,"column":18,"offset":3187},"indent":[]}}],"position":{"start":{"line":121,"column":1,"offset":3170},"end":{"line":121,"column":18,"offset":3187},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":121,"column":18,"offset":3187}}}}