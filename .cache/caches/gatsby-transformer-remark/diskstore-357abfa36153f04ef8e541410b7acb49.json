{"expireTime":9007200810530857000,"key":"transformer-remark-markdown-ast-fa76e8738ea2d8df03f6c6d949371e4b-gatsby-remark-imagesgatsby-remark-responsive-iframegatsby-remark-prismjsgatsby-remark-copy-linked-filesgatsby-remark-smartypants-","val":{"type":"root","children":[{"type":"heading","depth":1,"children":[{"type":"text","value":"ARTS06-20180811","position":{"start":{"line":1,"column":3,"offset":2},"end":{"line":1,"column":18,"offset":17},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":1,"column":18,"offset":17},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Algorithm","position":{"start":{"line":3,"column":4,"offset":22},"end":{"line":3,"column":13,"offset":31},"indent":[]}}],"position":{"start":{"line":3,"column":1,"offset":19},"end":{"line":3,"column":13,"offset":31},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"6. ZigZag Conversion","position":{"start":{"line":5,"column":5,"offset":37},"end":{"line":5,"column":25,"offset":57},"indent":[]}}],"position":{"start":{"line":5,"column":1,"offset":33},"end":{"line":5,"column":25,"offset":57},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The string ","position":{"start":{"line":7,"column":1,"offset":59},"end":{"line":7,"column":12,"offset":70},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">&quot;PAYPALISHIRING&quot;</code>","position":{"start":{"line":7,"column":12,"offset":70},"end":{"line":7,"column":30,"offset":88},"indent":[]}},{"type":"text","value":" is written in a zigzag pattern on a given number of rows like this: (you may want to display this pattern in a fixed font for better legibility)","position":{"start":{"line":7,"column":30,"offset":88},"end":{"line":7,"column":175,"offset":233},"indent":[]}}],"position":{"start":{"line":7,"column":1,"offset":59},"end":{"line":7,"column":175,"offset":233},"indent":[]}},{"type":"html","lang":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">P   A   H   N\nA P L S I I G\nY   I   R</code></pre></div>","position":{"start":{"line":9,"column":1,"offset":235},"end":{"line":13,"column":4,"offset":280},"indent":[1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"And then read line by line: ","position":{"start":{"line":15,"column":1,"offset":282},"end":{"line":15,"column":29,"offset":310},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">&quot;PAHNAPLSIIGYIR&quot;</code>","position":{"start":{"line":15,"column":29,"offset":310},"end":{"line":15,"column":47,"offset":328},"indent":[]}}],"position":{"start":{"line":15,"column":1,"offset":282},"end":{"line":15,"column":47,"offset":328},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Write the code that will take a string and make this conversion given a number of rows:","position":{"start":{"line":17,"column":1,"offset":330},"end":{"line":17,"column":88,"offset":417},"indent":[]}}],"position":{"start":{"line":17,"column":1,"offset":330},"end":{"line":17,"column":88,"offset":417},"indent":[]}},{"type":"html","lang":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">string convert(string s, int numRows);</code></pre></div>","position":{"start":{"line":19,"column":1,"offset":419},"end":{"line":21,"column":4,"offset":465},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Example 1:","position":{"start":{"line":23,"column":3,"offset":469},"end":{"line":23,"column":13,"offset":479},"indent":[]}}],"position":{"start":{"line":23,"column":1,"offset":467},"end":{"line":23,"column":15,"offset":481},"indent":[]}}],"position":{"start":{"line":23,"column":1,"offset":467},"end":{"line":23,"column":15,"offset":481},"indent":[]}},{"type":"html","lang":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Input: s = &quot;PAYPALISHIRING&quot;, numRows = 3\nOutput: &quot;PAHNAPLSIIGYIR&quot;</code></pre></div>","position":{"start":{"line":25,"column":1,"offset":483},"end":{"line":28,"column":4,"offset":556},"indent":[1,1,1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Example 2:","position":{"start":{"line":30,"column":3,"offset":560},"end":{"line":30,"column":13,"offset":570},"indent":[]}}],"position":{"start":{"line":30,"column":1,"offset":558},"end":{"line":30,"column":15,"offset":572},"indent":[]}}],"position":{"start":{"line":30,"column":1,"offset":558},"end":{"line":30,"column":15,"offset":572},"indent":[]}},{"type":"html","lang":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Input: s = &quot;PAYPALISHIRING&quot;, numRows = 4\nOutput: &quot;PINALSIGYAHRPI&quot;\nExplanation:\n\nP     I    N\nA   L S  I G\nY A   H R\nP     I</code></pre></div>","position":{"start":{"line":32,"column":1,"offset":574},"end":{"line":41,"column":4,"offset":705},"indent":[1,1,1,1,1,1,1,1,1]}},{"type":"html","lang":"java","value":"<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">package</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>nocoder<span class=\"token punctuation\">.</span>leetcode<span class=\"token punctuation\">.</span>solution</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">/**\n * 6. ZigZag Conversion\n *\n * The string \"PAYPALISHIRING\" is written in a zigzag pattern on a given number of rows like this: (you may want to display this pattern in a fixed font for better legibility)\n *\n * P   A   H   N\n * A P L S I I G\n * Y   I   R\n * And then read line by line: \"PAHNAPLSIIGYIR\"\n *\n * Write the code that will take a string and make this conversion given a number of rows:\n *\n * string convert(string s, int numRows);\n * Example 1:\n *\n * Input: s = \"PAYPALISHIRING\", numRows = 3\n * Output: \"PAHNAPLSIIGYIR\"\n * Example 2:\n *\n * Input: s = \"PAYPALISHIRING\", numRows = 4\n * Output: \"PINALSIGYAHRPI\"\n * Explanation:\n *\n * P     I    N\n * A   L S  I G\n * Y A   H R\n * P     I\n *\n * @author jason\n * @date 18/8/12.\n */</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ZigZagConversion</span> <span class=\"token punctuation\">{</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">String</span> <span class=\"token function\">convert</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> s<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> nRows<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>s <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">||</span> s<span class=\"token punctuation\">.</span><span class=\"token function\">length</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span> <span class=\"token operator\">||</span> nRows <span class=\"token operator\">&lt;=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">return</span> s<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token class-name\">StringBuilder</span> res <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">StringBuilder</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">int</span> size <span class=\"token operator\">=</span> <span class=\"token number\">2</span> <span class=\"token operator\">*</span> nRows <span class=\"token operator\">-</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> nRows<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> j <span class=\"token operator\">=</span> i<span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;</span> s<span class=\"token punctuation\">.</span><span class=\"token function\">length</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">+=</span> size<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                res<span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">.</span><span class=\"token function\">charAt</span><span class=\"token punctuation\">(</span>j<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">!=</span> <span class=\"token number\">0</span> <span class=\"token operator\">&amp;&amp;</span> i <span class=\"token operator\">!=</span> nRows <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                    <span class=\"token keyword\">int</span> temp <span class=\"token operator\">=</span> j <span class=\"token operator\">+</span> size <span class=\"token operator\">-</span> <span class=\"token number\">2</span> <span class=\"token operator\">*</span> i<span class=\"token punctuation\">;</span>\n                    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>temp <span class=\"token operator\">&lt;</span> s<span class=\"token punctuation\">.</span><span class=\"token function\">length</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                        res<span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">.</span><span class=\"token function\">charAt</span><span class=\"token punctuation\">(</span>temp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    <span class=\"token punctuation\">}</span>\n                <span class=\"token punctuation\">}</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">return</span> res<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":43,"column":1,"offset":707},"end":{"line":100,"column":4,"offset":2190},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Review","position":{"start":{"line":102,"column":4,"offset":2195},"end":{"line":102,"column":10,"offset":2201},"indent":[]}}],"position":{"start":{"line":102,"column":1,"offset":2192},"end":{"line":102,"column":10,"offset":2201},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"google chrome now labels http sites as ‘not secure’","position":{"start":{"line":104,"column":5,"offset":2207},"end":{"line":104,"column":56,"offset":2258},"indent":[]}}],"position":{"start":{"line":104,"column":1,"offset":2203},"end":{"line":104,"column":56,"offset":2258},"indent":[]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://www.wired.com/story/google-chrome-https-not-secure-label/","children":[{"type":"text","value":"https://www.wired.com/story/google-chrome-https-not-secure-label/","position":{"start":{"line":106,"column":1,"offset":2260},"end":{"line":106,"column":66,"offset":2325},"indent":[]}}],"position":{"start":{"line":106,"column":1,"offset":2260},"end":{"line":106,"column":66,"offset":2325},"indent":[]}}],"position":{"start":{"line":106,"column":1,"offset":2260},"end":{"line":106,"column":66,"offset":2325},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"两年前，谷歌实现了一个承诺，chrome浏览器在未加密的网站前面贴上警告标志，来标识非https网站为不安全网站。","position":{"start":{"line":108,"column":1,"offset":2327},"end":{"line":108,"column":58,"offset":2384},"indent":[]}}],"position":{"start":{"line":108,"column":1,"offset":2327},"end":{"line":108,"column":58,"offset":2384},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"但是居然还有骂声，“他们只是科技行业，网络比科技行业大得多，这就是傲慢。“来自Dave Winer，他是RSS的创造者之一。","position":{"start":{"line":110,"column":1,"offset":2386},"end":{"line":110,"column":63,"offset":2448},"indent":[]}}],"position":{"start":{"line":110,"column":1,"offset":2386},"end":{"line":110,"column":63,"offset":2448},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Let’s Encrypt 提供了支持HTTPS连接的免费证书，并且已加密超过1.13亿个网站。","position":{"start":{"line":112,"column":1,"offset":2450},"end":{"line":112,"column":49,"offset":2498},"indent":[]}}],"position":{"start":{"line":112,"column":1,"offset":2450},"end":{"line":112,"column":49,"offset":2498},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Tip","position":{"start":{"line":115,"column":4,"offset":2504},"end":{"line":115,"column":7,"offset":2507},"indent":[]}}],"position":{"start":{"line":115,"column":1,"offset":2501},"end":{"line":115,"column":7,"offset":2507},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Docker 容器多目录挂载","position":{"start":{"line":117,"column":5,"offset":2513},"end":{"line":117,"column":19,"offset":2527},"indent":[]}}],"position":{"start":{"line":117,"column":1,"offset":2509},"end":{"line":117,"column":19,"offset":2527},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"项目的配置文件，日志，以及要写入的文件，不要直接写在docker container 内部，因为一旦镜像更新要运行新的容器或者容器被删除，那么容器写入到内部的文件内容会丢失，所以这些需要挂载到宿主机上以保证数据的持久化。","position":{"start":{"line":119,"column":1,"offset":2529},"end":{"line":119,"column":111,"offset":2639},"indent":[]}}],"position":{"start":{"line":119,"column":1,"offset":2529},"end":{"line":119,"column":111,"offset":2639},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"目录挂载的使用非常容易，只需要遭docker run 命令后跟 ","position":{"start":{"line":121,"column":1,"offset":2641},"end":{"line":121,"column":33,"offset":2673},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">-v</code>","position":{"start":{"line":121,"column":33,"offset":2673},"end":{"line":121,"column":37,"offset":2677},"indent":[]}},{"type":"text","value":" 参数加上<宿主机目录路径>:<容器内目录路径>即可， 多个目录的挂载就使用 多个 ","position":{"start":{"line":121,"column":37,"offset":2677},"end":{"line":121,"column":79,"offset":2719},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">-v</code>","position":{"start":{"line":121,"column":79,"offset":2719},"end":{"line":121,"column":83,"offset":2723},"indent":[]}},{"type":"text","value":" 参数加上<宿主机目录路径>:<容器内目录路径>","position":{"start":{"line":121,"column":83,"offset":2723},"end":{"line":121,"column":107,"offset":2747},"indent":[]}}],"position":{"start":{"line":121,"column":1,"offset":2641},"end":{"line":121,"column":107,"offset":2747},"indent":[]}},{"type":"html","lang":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">docker run -it -p 8080:8080 -v /Users/jason/my-service/config/:/usr/local/my-service/config/ -v  /Users/jason/my-service/log:/usr/local/my-service/log 192.168.28.121:9090/my-service:1.0</code></pre></div>","position":{"start":{"line":123,"column":1,"offset":2749},"end":{"line":125,"column":4,"offset":2942},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"使用docker-compose的话在docker-compose.yml中增加","position":{"start":{"line":127,"column":1,"offset":2944},"end":{"line":127,"column":41,"offset":2984},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">volumes: - &quot;/source:/destination&quot;</code>","position":{"start":{"line":127,"column":41,"offset":2984},"end":{"line":127,"column":76,"offset":3019},"indent":[]}},{"type":"text","value":"即可。","position":{"start":{"line":127,"column":76,"offset":3019},"end":{"line":127,"column":79,"offset":3022},"indent":[]}}],"position":{"start":{"line":127,"column":1,"offset":2944},"end":{"line":127,"column":79,"offset":3022},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Share","position":{"start":{"line":129,"column":4,"offset":3027},"end":{"line":129,"column":9,"offset":3032},"indent":[]}}],"position":{"start":{"line":129,"column":1,"offset":3024},"end":{"line":129,"column":9,"offset":3032},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"分享一下我们现在的负载流程，使用阿里负载均衡加nginx代理转发","position":{"start":{"line":131,"column":5,"offset":3038},"end":{"line":131,"column":37,"offset":3070},"indent":[]}}],"position":{"start":{"line":131,"column":1,"offset":3034},"end":{"line":131,"column":37,"offset":3070},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"项目是采用DDD设计理念，前后端分离，前端使用vue.js，后端是基于springboot的多模块项目，大体分为web层和core层，web层负责处理客户端请求，core层包括domain和repository。每个项目使用两台server来运行docker化的web和core，也就是说运行了两个web，两个core。注册中心使用eureka。\n接下来描述一下负载均衡配合nginx代理转发的工作流程：\n首先请求会到负载均衡服务器，然后到nginx8080端口，如果是静态资源，则proxy_pass 到CDN，CDN回源到nginx80端口的web-front目录下，初次访问的时候从这里获取资源，缓存到CDN以加速客户端访问；如果是接口，则到对应的web层，然后到core层。","position":{"start":{"line":133,"column":1,"offset":3072},"end":{"line":135,"column":139,"offset":3413},"indent":[1,1]}}],"position":{"start":{"line":133,"column":1,"offset":3072},"end":{"line":135,"column":139,"offset":3413},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"image","title":null,"url":"https://raw.githubusercontent.com/yangjinlong86/nocoder/master/data/images/201808/%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1.png","alt":null,"position":{"start":{"line":137,"column":1,"offset":3415},"end":{"line":137,"column":128,"offset":3542},"indent":[]}}],"position":{"start":{"line":137,"column":1,"offset":3415},"end":{"line":137,"column":128,"offset":3542},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":138,"column":1,"offset":3543}}}}