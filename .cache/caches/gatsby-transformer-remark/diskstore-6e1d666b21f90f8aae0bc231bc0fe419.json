{"expireTime":9007200811184863000,"key":"transformer-remark-markdown-html-ast-b363e31f499494c3b0f21afe1bade806-gatsby-remark-imagesgatsby-remark-responsive-iframegatsby-remark-prismjsgatsby-remark-copy-linked-filesgatsby-remark-smartypants-","val":{"type":"root","children":[{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"维基百科的描述","position":{"start":{"line":2,"column":3,"offset":3},"end":{"line":2,"column":10,"offset":10}}}],"position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":10,"offset":10}}},{"type":"text","value":"\n"},{"type":"element","tagName":"blockquote","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"JavaScript，一种直译式脚本语言，是一种动态类型、基于原型的语言，内置支持类别。它的解释器被称为JavaScript引擎，为浏览器的一部分，广泛用于客户端的脚本语言，最早是在HTML网页上使用，用来给HTML网页增加动态功能。然而现在JavaScript也可被用于网络服务器，如Node.js。","position":{"start":{"line":4,"column":2,"offset":13},"end":{"line":4,"column":153,"offset":164}}}],"position":{"start":{"line":4,"column":2,"offset":13},"end":{"line":4,"column":153,"offset":164}}},{"type":"text","value":"\n"}],"position":{"start":{"line":4,"column":1,"offset":12},"end":{"line":4,"column":153,"offset":164}}},{"type":"text","value":"\n"},{"type":"element","tagName":"blockquote","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"在1995年时，由网景公司的布兰登·艾克，在网景导航者浏览器上首次设计实现而成。因为网景公司与昇阳公司的营销合作，加上网景公司管理层希望它外观看起来像Java，因此取名为JavaScript。但实际上它的语义与Self及Scheme较为接近。","position":{"start":{"line":6,"column":2,"offset":167},"end":{"line":6,"column":123,"offset":288}}}],"position":{"start":{"line":6,"column":2,"offset":167},"end":{"line":6,"column":123,"offset":288}}},{"type":"text","value":"\n"}],"position":{"start":{"line":6,"column":1,"offset":166},"end":{"line":6,"column":123,"offset":288}}},{"type":"text","value":"\n"},{"type":"element","tagName":"blockquote","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"为了获取技术优势，微软推出了JScript，与JavaScript同样可在浏览器上运行。为了统一规格，1997年，在ECMA（欧洲计算机制造商协会）的协调下，由网景、昇阳、微软和Borland公司组成的工作组确定统一标准：ECMA-262。因为JavaScript兼容于ECMA标准，因此也称为ECMAScript。","position":{"start":{"line":8,"column":2,"offset":291},"end":{"line":8,"column":160,"offset":449}}}],"position":{"start":{"line":8,"column":2,"offset":291},"end":{"line":8,"column":160,"offset":449}}},{"type":"text","value":"\n"}],"position":{"start":{"line":8,"column":1,"offset":290},"end":{"line":8,"column":160,"offset":449}}},{"type":"text","value":"\n"},{"type":"element","tagName":"blockquote","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"一般来说，完整的JavaScript包括以下几个部分：","position":{"start":{"line":10,"column":2,"offset":452},"end":{"line":10,"column":29,"offset":479}}}],"position":{"start":{"line":10,"column":2,"offset":452},"end":{"line":10,"column":29,"offset":479}}},{"type":"text","value":"\n"}],"position":{"start":{"line":10,"column":1,"offset":451},"end":{"line":10,"column":29,"offset":479}}},{"type":"text","value":"\n"},{"type":"element","tagName":"blockquote","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"ECMAScript，描述了该语言的语法和基本对象\n文档对象模型（DOM），描述处理网页内容的方法和接口\n浏览器对象模型（BOM），描述与浏览器进行交互的方法和接口\n它的基本特点如下：","position":{"start":{"line":12,"column":2,"offset":482},"end":{"line":15,"column":11,"offset":577}}}],"position":{"start":{"line":12,"column":2,"offset":482},"end":{"line":15,"column":11,"offset":577}}},{"type":"text","value":"\n"}],"position":{"start":{"line":12,"column":1,"offset":481},"end":{"line":15,"column":11,"offset":577}}},{"type":"text","value":"\n"},{"type":"element","tagName":"blockquote","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"是一种解释性脚本语言（代码不进行预编译）。","position":{"start":{"line":17,"column":5,"offset":583},"end":{"line":17,"column":26,"offset":604}}}],"position":{"start":{"line":17,"column":3,"offset":581},"end":{"line":17,"column":26,"offset":604}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"主要用来向HTML页面添加交互行为。","position":{"start":{"line":18,"column":5,"offset":609},"end":{"line":18,"column":23,"offset":627}}}],"position":{"start":{"line":18,"column":3,"offset":607},"end":{"line":18,"column":23,"offset":627}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"可以直接嵌入HTML页面，但写成单独的js文件有利于结构和行为的分离。\nJavaScript常用来完成以下任务：","position":{"start":{"line":19,"column":5,"offset":632},"end":{"line":20,"column":23,"offset":690}}}],"position":{"start":{"line":19,"column":3,"offset":630},"end":{"line":20,"column":23,"offset":690}}},{"type":"text","value":"\n"}],"position":{"start":{"line":17,"column":3,"offset":581},"end":{"line":20,"column":23,"offset":690}}},{"type":"text","value":"\n"}],"position":{"start":{"line":17,"column":1,"offset":579},"end":{"line":20,"column":23,"offset":690}}},{"type":"text","value":"\n"},{"type":"element","tagName":"blockquote","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":" 嵌入动态文本于HTML页面\n对浏览器事件作出响应\n读写HTML元素\n在数据被提交到服务器之前验证数据\n检测访客的浏览器信息\n控制cookies，包括创建和修改等","position":{"start":{"line":22,"column":3,"offset":694},"end":{"line":27,"column":22,"offset":790}}}],"position":{"start":{"line":22,"column":3,"offset":694},"end":{"line":27,"column":22,"offset":790}}},{"type":"text","value":"\n"}],"position":{"start":{"line":22,"column":1,"offset":692},"end":{"line":27,"column":22,"offset":790}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"语法（Syntax）","position":{"start":{"line":29,"column":3,"offset":794},"end":{"line":29,"column":13,"offset":804}}}],"position":{"start":{"line":29,"column":1,"offset":792},"end":{"line":29,"column":13,"offset":804}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"这节介绍一些JavaScript的基本语法规则。","position":{"start":{"line":31,"column":1,"offset":806},"end":{"line":31,"column":25,"offset":830}}}],"position":{"start":{"line":31,"column":1,"offset":806},"end":{"line":31,"column":25,"offset":830}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"语句和表达式（Statements versus expressions）","position":{"start":{"line":33,"column":4,"offset":835},"end":{"line":33,"column":41,"offset":872}}}],"position":{"start":{"line":33,"column":1,"offset":832},"end":{"line":33,"column":41,"offset":872}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"了解JavaScript的语法，这有助于了解（简而言之），它有两个主要的语法类型：语句和表达式。","position":{"start":{"line":35,"column":1,"offset":874},"end":{"line":35,"column":49,"offset":922}}}],"position":{"start":{"line":35,"column":1,"offset":874},"end":{"line":35,"column":49,"offset":922}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"语句通常“做某些事情”。程序是一组语句序列。举个例子，下面声明（创建）一个 变量 foo： var foo;\n表达式产生值。他们通常位于赋值操作的邮编，函数参数，等。举个例子： 3 * 7\n语句和表达式之间的区别最好通过实例说明，JavaScript（像Java）有两种不同的方式实现if-then-else。一种是用语句：","position":{"start":{"line":37,"column":1,"offset":924},"end":{"line":39,"column":68,"offset":1086}}}],"position":{"start":{"line":37,"column":1,"offset":924},"end":{"line":39,"column":68,"offset":1086}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> x<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>y <span class=\"token operator\">>=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    x <span class=\"token operator\">=</span> y<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n    x <span class=\"token operator\">=</span> <span class=\"token operator\">-</span>y<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":40,"column":1,"offset":1087},"end":{"line":47,"column":4,"offset":1159}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"另一种是表达式：","position":{"start":{"line":48,"column":1,"offset":1160},"end":{"line":48,"column":9,"offset":1168}}}],"position":{"start":{"line":48,"column":1,"offset":1160},"end":{"line":48,"column":9,"offset":1168}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"raw","value":"<code class=\"language-text\">var x = y &gt;= 0 ? y : -y;</code>","position":{"start":{"line":50,"column":1,"offset":1170},"end":{"line":50,"column":27,"offset":1196}}},{"type":"text","value":"\n你可以将后者作为函数参数（但前者不行）：","position":{"start":{"line":50,"column":27,"offset":1196},"end":{"line":51,"column":21,"offset":1217}}}],"position":{"start":{"line":50,"column":1,"offset":1170},"end":{"line":51,"column":21,"offset":1217}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"raw","value":"<code class=\"language-text\">myFunction(y &gt;= 0 ? y : -y)</code>","position":{"start":{"line":53,"column":1,"offset":1219},"end":{"line":53,"column":30,"offset":1248}}},{"type":"text","value":"\n最后，每当JavaScript期待一个语句，你也可以用一个表达式代替。例如：","position":{"start":{"line":53,"column":30,"offset":1248},"end":{"line":54,"column":39,"offset":1287}}}],"position":{"start":{"line":53,"column":1,"offset":1219},"end":{"line":54,"column":39,"offset":1287}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"raw","value":"<code class=\"language-text\">foo(bar(7, 1));</code>","position":{"start":{"line":56,"column":1,"offset":1289},"end":{"line":56,"column":18,"offset":1306}}},{"type":"text","value":"\nfoo(…)；是一个语句（也叫做表达式语句），bar(7, 1)是一个表达式。他们都实现函数调用。","position":{"start":{"line":56,"column":18,"offset":1306},"end":{"line":57,"column":52,"offset":1358}}}],"position":{"start":{"line":56,"column":1,"offset":1289},"end":{"line":57,"column":52,"offset":1358}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"流程控制语句和语句块（Control flow statements and blocks）","position":{"start":{"line":59,"column":1,"offset":1360},"end":{"line":59,"column":47,"offset":1406}}}],"position":{"start":{"line":59,"column":1,"offset":1360},"end":{"line":59,"column":47,"offset":1406}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"流程控制语句，其语句体可以是单条语句。举两个例子：","position":{"start":{"line":61,"column":1,"offset":1408},"end":{"line":61,"column":26,"offset":1433}}}],"position":{"start":{"line":61,"column":1,"offset":1408},"end":{"line":61,"column":26,"offset":1433}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>obj <span class=\"token operator\">!==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> obj<span class=\"token punctuation\">.</span><span class=\"token function\">foo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>x <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> x<span class=\"token operator\">--</span><span class=\"token punctuation\">;</span></code></pre></div>","position":{"start":{"line":63,"column":1,"offset":1435},"end":{"line":66,"column":4,"offset":1504}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"然而，任何语句总能被语句块代替，花括号包含零或多条语句。因此，你也可以这样写：","position":{"start":{"line":67,"column":1,"offset":1505},"end":{"line":67,"column":40,"offset":1544}}}],"position":{"start":{"line":67,"column":1,"offset":1505},"end":{"line":67,"column":40,"offset":1544}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>obj <span class=\"token operator\">!==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    obj<span class=\"token punctuation\">.</span><span class=\"token function\">foo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>x <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    x<span class=\"token operator\">--</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":68,"column":1,"offset":1545},"end":{"line":76,"column":4,"offset":1627}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"在本文中，我们只是用后一种方式。","position":{"start":{"line":77,"column":1,"offset":1628},"end":{"line":77,"column":17,"offset":1644}}}],"position":{"start":{"line":77,"column":1,"offset":1628},"end":{"line":77,"column":17,"offset":1644}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"分号（Semicolons）","position":{"start":{"line":79,"column":4,"offset":1649},"end":{"line":79,"column":18,"offset":1663}}}],"position":{"start":{"line":79,"column":1,"offset":1646},"end":{"line":79,"column":18,"offset":1663}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"分号在JavaScript中是可选的。但省略他们可能带来意想不到的结果，所以我建议你不要那样做。","position":{"start":{"line":81,"column":1,"offset":1665},"end":{"line":81,"column":49,"offset":1713}}}],"position":{"start":{"line":81,"column":1,"offset":1665},"end":{"line":81,"column":49,"offset":1713}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"正如上面所看到的，分号作为语句的结尾，但语句块不需要。仅有一种情况下你将见到块后面有分号：函数表达式后面的函数体块。表达式作为语句的结尾，后面是分号：","position":{"start":{"line":83,"column":1,"offset":1715},"end":{"line":83,"column":76,"offset":1790}}}],"position":{"start":{"line":83,"column":1,"offset":1715},"end":{"line":83,"column":76,"offset":1790}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"javascrpt\"><pre class=\"language-javascrpt\"><code class=\"language-javascrpt\">var x = 3 * 7;\nvar f = function () { };</code></pre></div>","position":{"start":{"line":85,"column":1,"offset":1792},"end":{"line":88,"column":4,"offset":1848}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"注释（Comments）","position":{"start":{"line":89,"column":4,"offset":1852},"end":{"line":89,"column":16,"offset":1864}}}],"position":{"start":{"line":89,"column":1,"offset":1849},"end":{"line":89,"column":16,"offset":1864}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"JavaScript有两种注释方式：单行注释和多行注释。单行注释以//开头，以换行符结尾：","position":{"start":{"line":91,"column":1,"offset":1866},"end":{"line":91,"column":46,"offset":1911}}}],"position":{"start":{"line":91,"column":1,"offset":1866},"end":{"line":91,"column":46,"offset":1911}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">x<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 单行（single-line）注释</span></code></pre></div>","position":{"start":{"line":93,"column":1,"offset":1913},"end":{"line":95,"column":4,"offset":1957}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"多行注释用/**/包裹","position":{"start":{"line":96,"column":1,"offset":1958},"end":{"line":96,"column":12,"offset":1969}}}],"position":{"start":{"line":96,"column":1,"offset":1958},"end":{"line":96,"column":12,"offset":1969}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">/* \n 这是多行注释\n 多行哦\n */</span></code></pre></div>","position":{"start":{"line":97,"column":1,"offset":1970},"end":{"line":102,"column":4,"offset":2008}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"变量和赋值（Variables and assignment）","position":{"start":{"line":103,"column":4,"offset":2012},"end":{"line":103,"column":35,"offset":2043}}}],"position":{"start":{"line":103,"column":1,"offset":2009},"end":{"line":103,"column":35,"offset":2043}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"JavaScript中的变量在使用之前必须先声明：","position":{"start":{"line":105,"column":1,"offset":2045},"end":{"line":105,"column":26,"offset":2070}}}],"position":{"start":{"line":105,"column":1,"offset":2045},"end":{"line":105,"column":26,"offset":2070}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"var foo;  // 声明变量“foo”","position":{"start":{"line":107,"column":1,"offset":2072},"end":{"line":107,"column":23,"offset":2094}}}],"position":{"start":{"line":107,"column":1,"offset":2072},"end":{"line":107,"column":23,"offset":2094}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"赋值（Assignment）","position":{"start":{"line":108,"column":5,"offset":2099},"end":{"line":108,"column":19,"offset":2113}}}],"position":{"start":{"line":108,"column":1,"offset":2095},"end":{"line":108,"column":19,"offset":2113}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"你可以在生命变量的同时给它赋值：","position":{"start":{"line":110,"column":1,"offset":2115},"end":{"line":110,"column":17,"offset":2131}}}],"position":{"start":{"line":110,"column":1,"offset":2115},"end":{"line":110,"column":17,"offset":2131}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> foo <span class=\"token operator\">=</span> <span class=\"token number\">6</span><span class=\"token punctuation\">;</span></code></pre></div>","position":{"start":{"line":112,"column":1,"offset":2133},"end":{"line":114,"column":4,"offset":2163}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"你也可以给已经存在的变量重新赋值：","position":{"start":{"line":115,"column":1,"offset":2164},"end":{"line":115,"column":18,"offset":2181}}}],"position":{"start":{"line":115,"column":1,"offset":2164},"end":{"line":115,"column":18,"offset":2181}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">foo <span class=\"token operator\">=</span> <span class=\"token number\">4</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// 更改变量的值</span></code></pre></div>","position":{"start":{"line":116,"column":1,"offset":2182},"end":{"line":118,"column":4,"offset":2219}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"复合赋值操作符（Compount assignment operators）","position":{"start":{"line":119,"column":5,"offset":2224},"end":{"line":119,"column":43,"offset":2262}}}],"position":{"start":{"line":119,"column":1,"offset":2220},"end":{"line":119,"column":43,"offset":2262}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"有很多符合赋值操作符，例如+=。下面的两个赋值操作等价：","position":{"start":{"line":121,"column":1,"offset":2264},"end":{"line":121,"column":29,"offset":2292}}}],"position":{"start":{"line":121,"column":1,"offset":2264},"end":{"line":121,"column":29,"offset":2292}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">x <span class=\"token operator\">+=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\nx <span class=\"token operator\">=</span> x <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></code></pre></div>","position":{"start":{"line":123,"column":1,"offset":2294},"end":{"line":126,"column":4,"offset":2330}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"标识符和变量名（Identifiers and variable names）","position":{"start":{"line":127,"column":5,"offset":2335},"end":{"line":127,"column":44,"offset":2374}}}],"position":{"start":{"line":127,"column":1,"offset":2331},"end":{"line":127,"column":44,"offset":2374}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"标识符就是事物的名字，在JavaScript中他们扮演不同的语法角色。例如，变量的名称是一个标识符。","position":{"start":{"line":129,"column":1,"offset":2376},"end":{"line":129,"column":51,"offset":2426}}}],"position":{"start":{"line":129,"column":1,"offset":2376},"end":{"line":129,"column":51,"offset":2426}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"大体上，标识符的第一个字符可以是任何Unicode字符，美元标志符（$）或下划线（_）。后面的字符可以是任意字符和数字。因此，下面全是合法的标识符：","position":{"start":{"line":131,"column":1,"offset":2428},"end":{"line":131,"column":75,"offset":2502}}}],"position":{"start":{"line":131,"column":1,"offset":2428},"end":{"line":131,"column":75,"offset":2502}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">arg0\n_tmp\n$elem\nπ</code></pre></div>","position":{"start":{"line":132,"column":1,"offset":2503},"end":{"line":137,"column":4,"offset":2538}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"一些标识符是“保留关键字”——他们是语法的一部分，不能用作变量名：","position":{"start":{"line":138,"column":1,"offset":2539},"end":{"line":138,"column":34,"offset":2572}}}],"position":{"start":{"line":138,"column":1,"offset":2539},"end":{"line":138,"column":34,"offset":2572}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">arguments <span class=\"token keyword\">break</span> <span class=\"token keyword\">case</span> catch <span class=\"token keyword\">class</span> <span class=\"token class-name\">const</span> <span class=\"token keyword\">continue</span> <span class=\"token keyword\">debugger</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">delete</span> <span class=\"token keyword\">do</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">enum</span> eval <span class=\"token keyword\">export</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">false</span> <span class=\"token keyword\">finally</span> <span class=\"token keyword\">for</span> <span class=\"token keyword\">function</span> <span class=\"token keyword\">if</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">import</span> <span class=\"token keyword\">in</span> <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">interface</span> <span class=\"token keyword\">let</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">null</span> <span class=\"token keyword\">package</span> <span class=\"token keyword\">private</span> <span class=\"token keyword\">protected</span> <span class=\"token keyword\">public</span> <span class=\"token keyword\">return</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">super</span> <span class=\"token keyword\">switch</span> <span class=\"token keyword\">this</span> <span class=\"token keyword\">throw</span> <span class=\"token boolean\">true</span> <span class=\"token keyword\">try</span> <span class=\"token keyword\">typeof</span> <span class=\"token keyword\">var</span> <span class=\"token keyword\">void</span> <span class=\"token keyword\">while</span> <span class=\"token keyword\">with</span> <span class=\"token keyword\">yield</span></code></pre></div>","position":{"start":{"line":139,"column":1,"offset":2573},"end":{"line":141,"column":4,"offset":2893}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"从技术上讲，下面三个标识符不是保留字，但也不应该作为变量名：","position":{"start":{"line":142,"column":1,"offset":2894},"end":{"line":142,"column":31,"offset":2924}}}],"position":{"start":{"line":142,"column":1,"offset":2894},"end":{"line":142,"column":31,"offset":2924}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token number\">Infinity</span> <span class=\"token number\">NaN</span> <span class=\"token keyword\">undefined</span></code></pre></div>","position":{"start":{"line":143,"column":1,"offset":2925},"end":{"line":145,"column":4,"offset":2965}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"值（Values）","position":{"start":{"line":146,"column":4,"offset":2969},"end":{"line":146,"column":13,"offset":2978}}}],"position":{"start":{"line":146,"column":1,"offset":2966},"end":{"line":146,"column":13,"offset":2978}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"JavaScript有所有我们期待的编程语言值类型：布尔，数字，字符串，数组等。JavaScript中的所有值都有属性。每个属性有一个键（或名字）和一个值。考虑记录的域（fields of record）。你可以使用点（.）操作符读取属性：","position":{"start":{"line":148,"column":1,"offset":2980},"end":{"line":148,"column":121,"offset":3100}}}],"position":{"start":{"line":148,"column":1,"offset":2980},"end":{"line":148,"column":121,"offset":3100}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"value.propKey\n举个例子：字符串“abc”有属性lenght（长度）。","position":{"start":{"line":150,"column":1,"offset":3102},"end":{"line":151,"column":28,"offset":3143}}}],"position":{"start":{"line":150,"column":1,"offset":3102},"end":{"line":151,"column":28,"offset":3143}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"> <span class=\"token operator\">></span> <span class=\"token keyword\">var</span> str <span class=\"token operator\">=</span> <span class=\"token string\">'abc'</span><span class=\"token punctuation\">;</span>\n <span class=\"token operator\">></span> str<span class=\"token punctuation\">.</span>length\n   <span class=\"token number\">3</span></code></pre></div>","position":{"start":{"line":152,"column":1,"offset":3144},"end":{"line":156,"column":4,"offset":3200}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"上面的代码也可以写成下面这样：","position":{"start":{"line":157,"column":1,"offset":3201},"end":{"line":157,"column":16,"offset":3216}}}],"position":{"start":{"line":157,"column":1,"offset":3201},"end":{"line":157,"column":16,"offset":3216}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token operator\">></span> <span class=\"token string\">'abc'</span><span class=\"token punctuation\">.</span>length\n  <span class=\"token number\">3</span></code></pre></div>","position":{"start":{"line":158,"column":1,"offset":3217},"end":{"line":161,"column":4,"offset":3253}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"点操作符也可以用来给属性赋值：","position":{"start":{"line":162,"column":1,"offset":3254},"end":{"line":162,"column":16,"offset":3269}}}],"position":{"start":{"line":162,"column":1,"offset":3254},"end":{"line":162,"column":16,"offset":3269}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"> <span class=\"token operator\">></span> <span class=\"token keyword\">var</span> obj <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// 空对象</span>\n <span class=\"token operator\">></span> obj<span class=\"token punctuation\">.</span>foo <span class=\"token operator\">=</span> <span class=\"token number\">123</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 创建属性“foo”，设置它为123</span>\n   <span class=\"token number\">123</span>\n <span class=\"token operator\">></span> obj<span class=\"token punctuation\">.</span>foo\n   <span class=\"token number\">123</span></code></pre></div>","position":{"start":{"line":163,"column":1,"offset":3270},"end":{"line":169,"column":4,"offset":3376}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"你也可以通过它（.）调用方法：","position":{"start":{"line":170,"column":1,"offset":3377},"end":{"line":170,"column":16,"offset":3392}}}],"position":{"start":{"line":170,"column":1,"offset":3377},"end":{"line":170,"column":16,"offset":3392}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token operator\">></span> <span class=\"token string\">'hello'</span><span class=\"token punctuation\">.</span><span class=\"token function\">toUpperCase</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token string\">'HELLO'</span></code></pre></div>","position":{"start":{"line":171,"column":1,"offset":3393},"end":{"line":174,"column":4,"offset":3444}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"上面，我们在值“hello”上面调用方法 toUpperCase()。","position":{"start":{"line":175,"column":1,"offset":3445},"end":{"line":175,"column":36,"offset":3480}}}],"position":{"start":{"line":175,"column":1,"offset":3445},"end":{"line":175,"column":36,"offset":3480}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"原始类型值和对象（Primitive values versus objects）","position":{"start":{"line":177,"column":1,"offset":3482},"end":{"line":177,"column":42,"offset":3523}}}],"position":{"start":{"line":177,"column":1,"offset":3482},"end":{"line":177,"column":42,"offset":3523}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"JavaScript定义了不同值之间的区别：","position":{"start":{"line":179,"column":1,"offset":3525},"end":{"line":179,"column":23,"offset":3547}}}],"position":{"start":{"line":179,"column":1,"offset":3525},"end":{"line":179,"column":23,"offset":3547}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"原始值包括：boolean，number，string，null和undefined，\n所有其他的值都是对象。实际上对象被定义为——所有不为原始类型的值。\n两者之间的主要区别在于他们是如何被比较的：每一个对象有一个独一无二的标志，并且仅和自己相等：","position":{"start":{"line":181,"column":1,"offset":3549},"end":{"line":183,"column":47,"offset":3673}}}],"position":{"start":{"line":181,"column":1,"offset":3549},"end":{"line":183,"column":47,"offset":3673}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token operator\">></span> <span class=\"token keyword\">var</span> obj1 <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// 一个空对象</span>\n<span class=\"token operator\">></span> <span class=\"token keyword\">var</span> obj2 <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// 另一个空对象</span>\n<span class=\"token operator\">></span> obj1 <span class=\"token operator\">===</span> obj2\n  <span class=\"token boolean\">false</span>\n<span class=\"token operator\">></span> obj1 <span class=\"token operator\">===</span> obj1\n  <span class=\"token boolean\">true</span></code></pre></div>","position":{"start":{"line":184,"column":1,"offset":3674},"end":{"line":191,"column":4,"offset":3793}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"相反，所有原始值只要编码值相同就被认为是相同的：","position":{"start":{"line":192,"column":1,"offset":3794},"end":{"line":192,"column":25,"offset":3818}}}],"position":{"start":{"line":192,"column":1,"offset":3794},"end":{"line":192,"column":25,"offset":3818}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token operator\">></span> <span class=\"token keyword\">var</span> prim1 <span class=\"token operator\">=</span> <span class=\"token number\">123</span><span class=\"token punctuation\">;</span>\n<span class=\"token operator\">></span> <span class=\"token keyword\">var</span> prim2 <span class=\"token operator\">=</span> <span class=\"token number\">123</span><span class=\"token punctuation\">;</span>\n<span class=\"token operator\">></span> prim1 <span class=\"token operator\">===</span> prim2\n  <span class=\"token boolean\">true</span></code></pre></div>","position":{"start":{"line":193,"column":1,"offset":3819},"end":{"line":198,"column":4,"offset":3899}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"接下来的两节介绍原始值和对象的更多细节。","position":{"start":{"line":199,"column":1,"offset":3900},"end":{"line":199,"column":21,"offset":3920}}}],"position":{"start":{"line":199,"column":1,"offset":3900},"end":{"line":199,"column":21,"offset":3920}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"原始类型值（Primitive values）","position":{"start":{"line":201,"column":1,"offset":3922},"end":{"line":201,"column":24,"offset":3945}}}],"position":{"start":{"line":201,"column":1,"offset":3922},"end":{"line":201,"column":24,"offset":3945}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"下面的全是原始类型值（简称：原始值）：","position":{"start":{"line":203,"column":1,"offset":3947},"end":{"line":203,"column":20,"offset":3966}}}],"position":{"start":{"line":203,"column":1,"offset":3947},"end":{"line":203,"column":20,"offset":3966}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"布尔类型：true，false\n数字类型：1736，1.351\n字符串类型: ‘abc’，“abc”\n两个“无值（non-values）”：undefined，null\n原始值的特征：","position":{"start":{"line":205,"column":1,"offset":3968},"end":{"line":209,"column":8,"offset":4060}}}],"position":{"start":{"line":205,"column":1,"offset":3968},"end":{"line":209,"column":8,"offset":4060}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"值做比较时：“内容”做比较。","position":{"start":{"line":211,"column":1,"offset":4062},"end":{"line":211,"column":15,"offset":4076}}}],"position":{"start":{"line":211,"column":1,"offset":4062},"end":{"line":211,"column":15,"offset":4076}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token operator\">></span> <span class=\"token number\">3</span> <span class=\"token operator\">===</span> <span class=\"token number\">3</span>\n  <span class=\"token boolean\">true</span>\n<span class=\"token operator\">></span> <span class=\"token string\">'abc'</span> <span class=\"token operator\">===</span> <span class=\"token string\">'abc'</span>\n  <span class=\"token boolean\">true</span></code></pre></div>","position":{"start":{"line":212,"column":1,"offset":4077},"end":{"line":217,"column":4,"offset":4136}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"无法更改：值的属性无法更改，无法添加和移除属性。","position":{"start":{"line":218,"column":1,"offset":4137},"end":{"line":218,"column":25,"offset":4161}}}],"position":{"start":{"line":218,"column":1,"offset":4137},"end":{"line":218,"column":25,"offset":4161}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token operator\">></span> <span class=\"token keyword\">var</span> str <span class=\"token operator\">=</span> <span class=\"token string\">'abc'</span><span class=\"token punctuation\">;</span>\n<span class=\"token operator\">></span> str<span class=\"token punctuation\">.</span>foo <span class=\"token operator\">=</span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// try to create property `foo` ⇒ no effect</span>\n<span class=\"token operator\">></span> str<span class=\"token punctuation\">.</span>foo  <span class=\"token comment\">// unknown property</span>\n  <span class=\"token keyword\">undefined</span> </code></pre></div>","position":{"start":{"line":219,"column":1,"offset":4162},"end":{"line":224,"column":4,"offset":4301}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"(获取未知属性总返回undefined)","position":{"start":{"line":225,"column":1,"offset":4302},"end":{"line":225,"column":21,"offset":4322}}}],"position":{"start":{"line":225,"column":1,"offset":4302},"end":{"line":225,"column":21,"offset":4322}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"原始值的集合是固定的（fixed set of values）：你不能自定义原始值。","position":{"start":{"line":227,"column":1,"offset":4324},"end":{"line":227,"column":43,"offset":4366}}}],"position":{"start":{"line":227,"column":1,"offset":4324},"end":{"line":227,"column":43,"offset":4366}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"对象（Objects）","position":{"start":{"line":228,"column":4,"offset":4370},"end":{"line":228,"column":15,"offset":4381}}}],"position":{"start":{"line":228,"column":1,"offset":4367},"end":{"line":228,"column":15,"offset":4381}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"所有非原始值（non-primitive）的值都是对象。最常见的几种对象类型是：","position":{"start":{"line":230,"column":1,"offset":4383},"end":{"line":230,"column":41,"offset":4423}}}],"position":{"start":{"line":230,"column":1,"offset":4383},"end":{"line":230,"column":41,"offset":4423}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"简单对象（类型是Object）能通过对象字面量创建：","position":{"start":{"line":232,"column":1,"offset":4425},"end":{"line":232,"column":27,"offset":4451}}}],"position":{"start":{"line":232,"column":1,"offset":4425},"end":{"line":232,"column":27,"offset":4451}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token punctuation\">{</span> firstName<span class=\"token punctuation\">:</span> <span class=\"token string\">'Jane'</span><span class=\"token punctuation\">,</span> lastName<span class=\"token punctuation\">:</span> <span class=\"token string\">'Doe'</span> <span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":233,"column":1,"offset":4452},"end":{"line":235,"column":4,"offset":4508}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"上面的对象有两个属性：firstName属性的值是“Jane”，lastName属性的值是“Doe”。","position":{"start":{"line":236,"column":1,"offset":4509},"end":{"line":236,"column":52,"offset":4560}}}],"position":{"start":{"line":236,"column":1,"offset":4509},"end":{"line":236,"column":52,"offset":4560}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"数组（类型是 Array）能通过数组字面量创建：","position":{"start":{"line":238,"column":1,"offset":4562},"end":{"line":238,"column":25,"offset":4586}}}],"position":{"start":{"line":238,"column":1,"offset":4562},"end":{"line":238,"column":25,"offset":4586}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token punctuation\">[</span> <span class=\"token string\">'apple'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'banana'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'cherry'</span> <span class=\"token punctuation\">]</span></code></pre></div>","position":{"start":{"line":239,"column":1,"offset":4587},"end":{"line":241,"column":4,"offset":4636}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"上面的数组有三个元素，可以通过数字索引访问。例如“apple”的索引是0.","position":{"start":{"line":242,"column":1,"offset":4637},"end":{"line":242,"column":38,"offset":4674}}}],"position":{"start":{"line":242,"column":1,"offset":4637},"end":{"line":242,"column":38,"offset":4674}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"正则表达式对象（类型是 RegExp）能通过正则表达式字面量创建。","position":{"start":{"line":244,"column":1,"offset":4676},"end":{"line":244,"column":34,"offset":4709}}}],"position":{"start":{"line":244,"column":1,"offset":4676},"end":{"line":244,"column":34,"offset":4709}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"/^a+b+$/","position":{"start":{"line":246,"column":1,"offset":4711},"end":{"line":246,"column":9,"offset":4719}}}],"position":{"start":{"line":246,"column":1,"offset":4711},"end":{"line":246,"column":9,"offset":4719}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"对象的特征：","position":{"start":{"line":248,"column":1,"offset":4721},"end":{"line":248,"column":7,"offset":4727}}}],"position":{"start":{"line":248,"column":1,"offset":4721},"end":{"line":248,"column":7,"offset":4727}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"比较的是引用：比较的是标识符，每个值有自己的标识符。","position":{"start":{"line":250,"column":1,"offset":4729},"end":{"line":250,"column":27,"offset":4755}}}],"position":{"start":{"line":250,"column":1,"offset":4729},"end":{"line":250,"column":27,"offset":4755}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token operator\">></span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span> <span class=\"token operator\">===</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>  <span class=\"token comment\">// 两个不同的空对象</span>\n  <span class=\"token boolean\">false</span>\n\n\n<span class=\"token operator\">></span> <span class=\"token keyword\">var</span> obj1 <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token operator\">></span> <span class=\"token keyword\">var</span> obj2 <span class=\"token operator\">=</span> obj1<span class=\"token punctuation\">;</span>\n<span class=\"token operator\">></span> obj1 <span class=\"token operator\">===</span> obj2\n  <span class=\"token boolean\">true</span></code></pre></div>","position":{"start":{"line":251,"column":1,"offset":4756},"end":{"line":260,"column":4,"offset":4867}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"默认可以更改。","position":{"start":{"line":261,"column":1,"offset":4868},"end":{"line":261,"column":8,"offset":4875}}}],"position":{"start":{"line":261,"column":1,"offset":4868},"end":{"line":261,"column":8,"offset":4875}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"> <span class=\"token operator\">></span> <span class=\"token keyword\">var</span> obj <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n <span class=\"token operator\">></span> obj<span class=\"token punctuation\">.</span>foo <span class=\"token operator\">=</span> <span class=\"token number\">123</span><span class=\"token punctuation\">;</span>\n <span class=\"token operator\">></span> obj<span class=\"token punctuation\">.</span>foo\n   <span class=\"token number\">123</span></code></pre></div>","position":{"start":{"line":262,"column":1,"offset":4876},"end":{"line":267,"column":4,"offset":4946}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"-** 用户可扩展（user-extensible）：**你可以通过构造函数定义新的对象类型。","position":{"start":{"line":268,"column":1,"offset":4947},"end":{"line":268,"column":48,"offset":4994}}}],"position":{"start":{"line":268,"column":1,"offset":4947},"end":{"line":268,"column":48,"offset":4994}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"数组所有的数据结构（如）都是对象，但并不是所有的对象都是数据结构。例如：正则表达式是对象，但不是一个数据结构。","position":{"start":{"line":270,"column":1,"offset":4996},"end":{"line":270,"column":56,"offset":5051}}}],"position":{"start":{"line":270,"column":1,"offset":4996},"end":{"line":270,"column":56,"offset":5051}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"undefined 和 null（undefined and null）","position":{"start":{"line":272,"column":1,"offset":5053},"end":{"line":272,"column":37,"offset":5089}}}],"position":{"start":{"line":272,"column":1,"offset":5053},"end":{"line":272,"column":37,"offset":5089}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"多少有些不必要，JavaScript有两个“无值（non-values）”：undefined 和 null。","position":{"start":{"line":274,"column":1,"offset":5091},"end":{"line":274,"column":56,"offset":5146}}}],"position":{"start":{"line":274,"column":1,"offset":5091},"end":{"line":274,"column":56,"offset":5146}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"undefined的意思是“没有值（no value）”。为初始化的变量是undefined：","position":{"start":{"line":276,"column":1,"offset":5148},"end":{"line":276,"column":48,"offset":5195}}}],"position":{"start":{"line":276,"column":1,"offset":5148},"end":{"line":276,"column":48,"offset":5195}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token operator\">></span> <span class=\"token keyword\">var</span> foo<span class=\"token punctuation\">;</span>\n<span class=\"token operator\">></span> foo\n<span class=\"token keyword\">undefined</span></code></pre></div>","position":{"start":{"line":277,"column":1,"offset":5196},"end":{"line":281,"column":4,"offset":5240}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"如果你读取不存在的属性，将返回undefined：","position":{"start":{"line":282,"column":1,"offset":5241},"end":{"line":282,"column":26,"offset":5266}}}],"position":{"start":{"line":282,"column":1,"offset":5241},"end":{"line":282,"column":26,"offset":5266}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token operator\">></span> <span class=\"token keyword\">var</span> obj <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 空对象</span>\n<span class=\"token operator\">></span> obj<span class=\"token punctuation\">.</span>foo\n  <span class=\"token keyword\">undefined</span></code></pre></div>","position":{"start":{"line":283,"column":1,"offset":5267},"end":{"line":287,"column":4,"offset":5329}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"未传递的参数也是undefined：","position":{"start":{"line":288,"column":1,"offset":5330},"end":{"line":288,"column":19,"offset":5348}}}],"position":{"start":{"line":288,"column":1,"offset":5330},"end":{"line":288,"column":19,"offset":5348}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token operator\">></span> <span class=\"token keyword\">function</span> <span class=\"token function\">f</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">x</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token keyword\">return</span> x <span class=\"token punctuation\">}</span>\n<span class=\"token operator\">></span> <span class=\"token function\">f</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">undefined</span></code></pre></div>","position":{"start":{"line":289,"column":1,"offset":5349},"end":{"line":293,"column":4,"offset":5413}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"null的意思是“没有对象（no object）”。它被用来表示对象的无值（参数，链上的对象等）。","position":{"start":{"line":294,"column":1,"offset":5414},"end":{"line":294,"column":50,"offset":5463}}}],"position":{"start":{"line":294,"column":1,"offset":5414},"end":{"line":294,"column":50,"offset":5463}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"通常情况下你应该把undefined和null看成是等价的，如果他们代表相同意义的无值的话。检查他们的一种方式是通过严格比较：","position":{"start":{"line":296,"column":1,"offset":5465},"end":{"line":296,"column":64,"offset":5528}}}],"position":{"start":{"line":296,"column":1,"offset":5465},"end":{"line":296,"column":64,"offset":5528}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>x <span class=\"token operator\">===</span> <span class=\"token keyword\">undefined</span> <span class=\"token operator\">||</span> x <span class=\"token operator\">===</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token operator\">...</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":297,"column":1,"offset":5529},"end":{"line":301,"column":4,"offset":5593}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"另一种在实际中使用的方法是认为undefined 和 null 都是false：","position":{"start":{"line":302,"column":1,"offset":5594},"end":{"line":302,"column":41,"offset":5634}}}],"position":{"start":{"line":302,"column":1,"offset":5594},"end":{"line":302,"column":41,"offset":5634}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>x<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token operator\">...</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":303,"column":1,"offset":5635},"end":{"line":307,"column":4,"offset":5672}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"警告：","position":{"start":{"line":308,"column":3,"offset":5675},"end":{"line":308,"column":6,"offset":5678}}}],"position":{"start":{"line":308,"column":1,"offset":5673},"end":{"line":308,"column":8,"offset":5680}}},{"type":"text","value":"false，0，NaN 和 “” 都被当作false。","position":{"start":{"line":308,"column":8,"offset":5680},"end":{"line":308,"column":35,"offset":5707}}}],"position":{"start":{"line":308,"column":1,"offset":5673},"end":{"line":308,"column":35,"offset":5707}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"包装类型（Wrapper types）","position":{"start":{"line":310,"column":4,"offset":5712},"end":{"line":310,"column":23,"offset":5731}}}],"position":{"start":{"line":310,"column":1,"offset":5709},"end":{"line":310,"column":23,"offset":5731}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"对象类型的实例Foo（包括内建类型，例如Array和其他自定义类型）从对象Foo.prototype上获取方法。你可以通过读这个方法但不调用它的方式验证这点：","position":{"start":{"line":312,"column":1,"offset":5733},"end":{"line":312,"column":80,"offset":5812}}}],"position":{"start":{"line":312,"column":1,"offset":5733},"end":{"line":312,"column":80,"offset":5812}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token operator\">></span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>push <span class=\"token operator\">===</span> <span class=\"token class-name\">Array</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span>push\n  <span class=\"token boolean\">true</span></code></pre></div>","position":{"start":{"line":313,"column":1,"offset":5813},"end":{"line":316,"column":4,"offset":5872}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"相反，原始类型是没有类型的，所以每个原始类型有一个关联类型，称之为包装类型：","position":{"start":{"line":317,"column":1,"offset":5873},"end":{"line":317,"column":39,"offset":5911}}}],"position":{"start":{"line":317,"column":1,"offset":5873},"end":{"line":317,"column":39,"offset":5911}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"布尔值的包装类型是 Boolean。布尔值从Boolean.prototype上获取方法：","position":{"start":{"line":319,"column":1,"offset":5913},"end":{"line":319,"column":46,"offset":5958}}}],"position":{"start":{"line":319,"column":1,"offset":5913},"end":{"line":319,"column":46,"offset":5958}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token operator\">></span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">.</span>toString <span class=\"token operator\">===</span> <span class=\"token class-name\">Boolean</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span>toString\n  <span class=\"token boolean\">true</span></code></pre></div>","position":{"start":{"line":320,"column":1,"offset":5959},"end":{"line":323,"column":4,"offset":6030}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"注意包装类型的名字首个字母是大写的B。如果在JavaScript中布尔值的类型可以访问，那么它可能会被成为布尔对象。","position":{"start":{"line":324,"column":1,"offset":6031},"end":{"line":324,"column":59,"offset":6089}}}],"position":{"start":{"line":324,"column":1,"offset":6031},"end":{"line":324,"column":59,"offset":6089}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"数字值的包装类型是Number。\n字符串值的包装类型是String。\n包装类型也有实例（他们的实例是对象），但不常用。相反，包装类型有其他用处：如果你将他们作为函数调用，他们可以将值转换为原始类型。","position":{"start":{"line":326,"column":1,"offset":6091},"end":{"line":328,"column":65,"offset":6190}}}],"position":{"start":{"line":326,"column":1,"offset":6091},"end":{"line":328,"column":65,"offset":6190}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token operator\">></span> <span class=\"token function\">Number</span><span class=\"token punctuation\">(</span><span class=\"token string\">'123'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token number\">123</span>\n<span class=\"token operator\">></span> <span class=\"token function\">String</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span>\n  <span class=\"token string\">'true'</span></code></pre></div>","position":{"start":{"line":329,"column":1,"offset":6191},"end":{"line":334,"column":4,"offset":6254}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"通过typeof 和 instanceof 将值分类（Categorizing values via typeof and instanceof）","position":{"start":{"line":335,"column":1,"offset":6255},"end":{"line":335,"column":74,"offset":6328}}}],"position":{"start":{"line":335,"column":1,"offset":6255},"end":{"line":335,"column":74,"offset":6328}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"有两个操作符可以用来将值分类：typeof 主要用来操作原始值，instanceof 主要用来造作对象。","position":{"start":{"line":337,"column":1,"offset":6330},"end":{"line":337,"column":53,"offset":6382}}}],"position":{"start":{"line":337,"column":1,"offset":6330},"end":{"line":337,"column":53,"offset":6382}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"typeof 使用方法如下：","position":{"start":{"line":339,"column":1,"offset":6384},"end":{"line":339,"column":15,"offset":6398}}}],"position":{"start":{"line":339,"column":1,"offset":6384},"end":{"line":339,"column":15,"offset":6398}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">typeof</span> «value»</code></pre></div>","position":{"start":{"line":340,"column":1,"offset":6399},"end":{"line":342,"column":4,"offset":6431}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"它返回描述 value “类型”的一个字符串。例如：","position":{"start":{"line":343,"column":1,"offset":6432},"end":{"line":343,"column":27,"offset":6458}}}],"position":{"start":{"line":343,"column":1,"offset":6432},"end":{"line":343,"column":27,"offset":6458}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token operator\">></span> <span class=\"token keyword\">typeof</span> <span class=\"token boolean\">true</span>\n  <span class=\"token string\">'boolean'</span>\n<span class=\"token operator\">></span> <span class=\"token keyword\">typeof</span> <span class=\"token string\">'abc'</span>\n  <span class=\"token string\">'string'</span>\n<span class=\"token operator\">></span> <span class=\"token keyword\">typeof</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span> <span class=\"token comment\">// 空对象字面量</span>\n  <span class=\"token string\">'object'</span>\n<span class=\"token operator\">></span> <span class=\"token keyword\">typeof</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token comment\">// 空数组字面量</span>\n  <span class=\"token string\">'object'</span></code></pre></div>","position":{"start":{"line":344,"column":1,"offset":6459},"end":{"line":353,"column":4,"offset":6594}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"下标列出了所有typeof的结果：","position":{"start":{"line":354,"column":1,"offset":6595},"end":{"line":354,"column":18,"offset":6612}}}],"position":{"start":{"line":354,"column":1,"offset":6595},"end":{"line":354,"column":18,"offset":6612}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"操作数\t结果","position":{"start":{"line":356,"column":1,"offset":6614},"end":{"line":356,"column":7,"offset":6620}}}],"position":{"start":{"line":356,"column":1,"offset":6614},"end":{"line":356,"column":7,"offset":6620}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">undefined</span>\t<span class=\"token string\">'undefined'</span>\n<span class=\"token keyword\">null</span>\t<span class=\"token string\">'object'</span>\nBoolean value\t<span class=\"token string\">'boolean'</span>\nNumber value\t<span class=\"token string\">'number'</span>\nString value\t<span class=\"token string\">'string'</span>\nFunction\t<span class=\"token string\">'function'</span>\nAll other values\t<span class=\"token string\">'object'</span></code></pre></div>","position":{"start":{"line":357,"column":1,"offset":6621},"end":{"line":365,"column":4,"offset":6788}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"有两个东西和我们所说的原始值和对象是矛盾的：","position":{"start":{"line":366,"column":1,"offset":6789},"end":{"line":366,"column":23,"offset":6811}}}],"position":{"start":{"line":366,"column":1,"offset":6789},"end":{"line":366,"column":23,"offset":6811}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"函数的类型是“function”而不是“object”。鉴于函数（类型为“function”）是对象（类型是对象）的子类型，这不是一个错误。\nnull的类型是“object”。这是一个bug，但从没被修复，因为修复后会破坏现有的代码。\ninstanceof使用方法如下：","position":{"start":{"line":368,"column":1,"offset":6813},"end":{"line":370,"column":18,"offset":6948}}}],"position":{"start":{"line":368,"column":1,"offset":6813},"end":{"line":370,"column":18,"offset":6948}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"«value» instanceof «Constr»\n如果 value 是一个对象，并且value 是由构造函数Constr创建的（考虑：类）。例如：","position":{"start":{"line":372,"column":1,"offset":6950},"end":{"line":373,"column":49,"offset":7026}}}],"position":{"start":{"line":372,"column":1,"offset":6950},"end":{"line":373,"column":49,"offset":7026}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token operator\">></span> <span class=\"token keyword\">var</span> b <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Bar</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// 通过构造函数Bar创建对象</span>\n<span class=\"token operator\">></span> b <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">Bar</span>\n  <span class=\"token boolean\">true</span>\n<span class=\"token operator\">></span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span> <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">Object</span>\n  <span class=\"token boolean\">true</span>\n<span class=\"token operator\">></span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">Array</span>\n  <span class=\"token boolean\">true</span>\n<span class=\"token operator\">></span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">Object</span>  <span class=\"token comment\">// 数字是对象的子类型</span>\n  <span class=\"token boolean\">true</span></code></pre></div>","position":{"start":{"line":374,"column":1,"offset":7027},"end":{"line":384,"column":4,"offset":7212}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"布尔（Booleans）","position":{"start":{"line":385,"column":4,"offset":7216},"end":{"line":385,"column":16,"offset":7228}}}],"position":{"start":{"line":385,"column":1,"offset":7213},"end":{"line":385,"column":16,"offset":7228}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"布尔类型原始值包括true和false。下面的操作符产生布尔值：","position":{"start":{"line":387,"column":1,"offset":7230},"end":{"line":387,"column":33,"offset":7262}}}],"position":{"start":{"line":387,"column":1,"offset":7230},"end":{"line":387,"column":33,"offset":7262}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"二元逻辑运算符：&&（与），||（或）\n前缀逻辑运算符：!（非）\n等值运算符：=== !== == !=\n比较运算符（字符串或数字）：> >= < <=\n真值和假值（Truthy and falsy）","position":{"start":{"line":389,"column":1,"offset":7264},"end":{"line":393,"column":24,"offset":7364}}}],"position":{"start":{"line":389,"column":1,"offset":7264},"end":{"line":393,"column":24,"offset":7364}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"每当JavaScript希望一个布尔值时（例如：if语句的条件），可以使用任何值。它将被理解（转换）为true或false。下面的值被理解为false：","position":{"start":{"line":395,"column":1,"offset":7366},"end":{"line":395,"column":77,"offset":7442}}}],"position":{"start":{"line":395,"column":1,"offset":7366},"end":{"line":395,"column":77,"offset":7442}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"undefined, null\n布尔: false\n数字: -0, NaN\n字符串: ”\n所有其他值被认为true。被理解为false的值成为假值（falsy），被理解为true的值成为真值（truthy）。可以使用Boolean作为函数测试值被理解为什么。","position":{"start":{"line":397,"column":1,"offset":7444},"end":{"line":401,"column":85,"offset":7574}}}],"position":{"start":{"line":397,"column":1,"offset":7444},"end":{"line":401,"column":85,"offset":7574}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token operator\">></span> <span class=\"token function\">Boolean</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">undefined</span><span class=\"token punctuation\">)</span>\n  <span class=\"token boolean\">false</span>\n<span class=\"token operator\">></span> <span class=\"token function\">Boolean</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n  <span class=\"token boolean\">false</span>\n<span class=\"token operator\">></span> <span class=\"token function\">Boolean</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span>\n  <span class=\"token boolean\">true</span></code></pre></div>","position":{"start":{"line":402,"column":1,"offset":7575},"end":{"line":409,"column":4,"offset":7662}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"二元逻辑运算符（Binary logical operators）","position":{"start":{"line":410,"column":5,"offset":7667},"end":{"line":410,"column":38,"offset":7700}}}],"position":{"start":{"line":410,"column":1,"offset":7663},"end":{"line":410,"column":38,"offset":7700}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"JavaScript中的二元逻辑运算符是短路运算——如果第一个操作数可以确定结果，第二个操作数将不被验证。例如，在下面的代码中，函数foo()不会被调用。","position":{"start":{"line":412,"column":1,"offset":7702},"end":{"line":412,"column":78,"offset":7779}}}],"position":{"start":{"line":412,"column":1,"offset":7702},"end":{"line":412,"column":78,"offset":7779}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"false && foo()\ntrue  || foo()\n此外，二元逻辑运算符返回操作数中的一个——可能是一个布尔值，也可能不是。一张真值表用来决定返回哪个值：","position":{"start":{"line":414,"column":1,"offset":7781},"end":{"line":416,"column":52,"offset":7862}}}],"position":{"start":{"line":414,"column":1,"offset":7781},"end":{"line":416,"column":52,"offset":7862}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"与：如果第一个操作数是假值，返回第一个。否则返回第二个操作数。","position":{"start":{"line":418,"column":1,"offset":7864},"end":{"line":418,"column":32,"offset":7895}}}],"position":{"start":{"line":418,"column":1,"offset":7864},"end":{"line":418,"column":32,"offset":7895}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token operator\">></span> <span class=\"token number\">NaN</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token string\">'abc'</span>\n  <span class=\"token number\">NaN</span>\n<span class=\"token operator\">></span> <span class=\"token number\">123</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token string\">'abc'</span>\n  <span class=\"token string\">'abc'</span></code></pre></div>","position":{"start":{"line":419,"column":1,"offset":7896},"end":{"line":424,"column":4,"offset":7957}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"或：如果第一个操作数是真值，返回第一个。否则，返回第二个操作数。","position":{"start":{"line":425,"column":1,"offset":7958},"end":{"line":425,"column":33,"offset":7990}}}],"position":{"start":{"line":425,"column":1,"offset":7958},"end":{"line":425,"column":33,"offset":7990}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token operator\">></span> <span class=\"token string\">'abc'</span> <span class=\"token operator\">||</span> <span class=\"token number\">123</span>\n  <span class=\"token string\">'abc'</span>\n<span class=\"token operator\">></span> <span class=\"token string\">''</span> <span class=\"token operator\">||</span> <span class=\"token number\">123</span>\n  <span class=\"token number\">123</span></code></pre></div>","position":{"start":{"line":426,"column":1,"offset":7991},"end":{"line":431,"column":4,"offset":8049}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"等值运算符（Equality operators）","position":{"start":{"line":432,"column":5,"offset":8054},"end":{"line":432,"column":30,"offset":8079}}}],"position":{"start":{"line":432,"column":1,"offset":8050},"end":{"line":432,"column":30,"offset":8079}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"在JavaScript中检测相等，你可以使用严格相等（===）和严格不等（!==）。或者你也可以使用非严格相等（==）和非严格不等（!=）。经验规则：总是用严格运算符，假装非严格运算符不存在。严格相等更安全。","position":{"start":{"line":434,"column":1,"offset":8081},"end":{"line":434,"column":105,"offset":8185}}}],"position":{"start":{"line":434,"column":1,"offset":8081},"end":{"line":434,"column":105,"offset":8185}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"数字（Numbers）","position":{"start":{"line":436,"column":4,"offset":8190},"end":{"line":436,"column":15,"offset":8201}}}],"position":{"start":{"line":436,"column":1,"offset":8187},"end":{"line":436,"column":15,"offset":8201}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"JavaScript中的所有数字都是浮点型（虽然大部分的JavaScript引擎内部也使用整数）。至于为什么这样设计，查看这里（每一个JavaScript开发者应该了解的浮点知识）。","position":{"start":{"line":438,"column":1,"offset":8203},"end":{"line":438,"column":92,"offset":8294}}}],"position":{"start":{"line":438,"column":1,"offset":8203},"end":{"line":438,"column":92,"offset":8294}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token operator\">></span> <span class=\"token number\">1</span> <span class=\"token operator\">===</span> <span class=\"token number\">1.0</span>\n  <span class=\"token boolean\">true</span></code></pre></div>","position":{"start":{"line":439,"column":1,"offset":8295},"end":{"line":442,"column":4,"offset":8331}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"特殊数字：\nNaN (“不是一个数字 not a number”): 错误值。","position":{"start":{"line":443,"column":1,"offset":8332},"end":{"line":444,"column":34,"offset":8371}}}],"position":{"start":{"line":443,"column":1,"offset":8332},"end":{"line":444,"column":34,"offset":8371}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token operator\">></span> <span class=\"token function\">Number</span><span class=\"token punctuation\">(</span><span class=\"token string\">'xyz'</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\">// 'xyz' 不能被转换为数字</span>\n  <span class=\"token number\">NaN</span></code></pre></div>","position":{"start":{"line":445,"column":1,"offset":8372},"end":{"line":448,"column":4,"offset":8430}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Infinity：也是最大错误值（溢出）.","position":{"start":{"line":449,"column":1,"offset":8431},"end":{"line":449,"column":22,"offset":8452}}}],"position":{"start":{"line":449,"column":1,"offset":8431},"end":{"line":449,"column":22,"offset":8452}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token operator\">></span> <span class=\"token number\">3</span> <span class=\"token operator\">/</span> <span class=\"token number\">0</span>\n  <span class=\"token number\">Infinity</span>\n<span class=\"token operator\">></span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">pow</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1024</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\">// 数字太大了</span>\n  <span class=\"token number\">Infinity</span></code></pre></div>","position":{"start":{"line":450,"column":1,"offset":8453},"end":{"line":455,"column":4,"offset":8530}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Infinity 有时很有用，因为它比任何其他数字都大。同样，-Infinity 比其他任何数字都小。","position":{"start":{"line":456,"column":1,"offset":8531},"end":{"line":456,"column":52,"offset":8582}}}],"position":{"start":{"line":456,"column":1,"offset":8531},"end":{"line":456,"column":52,"offset":8582}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"JavaScript有两个零，+0 和 -0。它通常不让你看到，并简单将两个零都显示为0：","position":{"start":{"line":458,"column":1,"offset":8584},"end":{"line":458,"column":46,"offset":8629}}}],"position":{"start":{"line":458,"column":1,"offset":8584},"end":{"line":458,"column":46,"offset":8629}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token operator\">></span> <span class=\"token operator\">+</span><span class=\"token number\">0</span>\n  <span class=\"token number\">0</span>\n<span class=\"token operator\">></span> <span class=\"token operator\">-</span><span class=\"token number\">0</span>\n  <span class=\"token number\">0</span></code></pre></div>","position":{"start":{"line":459,"column":1,"offset":8630},"end":{"line":464,"column":4,"offset":8665}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"因此最好假装只有一个零（正如我们看到假值时所做的那样：-0 和 +0 都是假值）。","position":{"start":{"line":465,"column":1,"offset":8666},"end":{"line":465,"column":42,"offset":8707}}}],"position":{"start":{"line":465,"column":1,"offset":8666},"end":{"line":465,"column":42,"offset":8707}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"运算符（Operators）","position":{"start":{"line":467,"column":4,"offset":8712},"end":{"line":467,"column":18,"offset":8726}}}],"position":{"start":{"line":467,"column":1,"offset":8709},"end":{"line":467,"column":18,"offset":8726}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"JavaScript中有下列算数运算符：","position":{"start":{"line":469,"column":1,"offset":8728},"end":{"line":469,"column":21,"offset":8748}}}],"position":{"start":{"line":469,"column":1,"offset":8728},"end":{"line":469,"column":21,"offset":8748}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"加: number1 + number2\n减: number1 - number2\n乘: number1 * number2\n除: number1 / number2\n求模: number1 % number2\n自增: ++variable, variable++\n自减: —variable, variable—\n负值: -value\n转换为数字: +value\n全局对象Math通过函数提供更多算数运算操作。","position":{"start":{"line":471,"column":1,"offset":8750},"end":{"line":480,"column":24,"offset":8958}}}],"position":{"start":{"line":471,"column":1,"offset":8750},"end":{"line":480,"column":24,"offset":8958}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"JavaScript中也有位运算符（例如：位与 &）。","position":{"start":{"line":482,"column":1,"offset":8960},"end":{"line":482,"column":28,"offset":8987}}}],"position":{"start":{"line":482,"column":1,"offset":8960},"end":{"line":482,"column":28,"offset":8987}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"字符串（Strings）","position":{"start":{"line":484,"column":4,"offset":8992},"end":{"line":484,"column":16,"offset":9004}}}],"position":{"start":{"line":484,"column":1,"offset":8989},"end":{"line":484,"column":16,"offset":9004}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"字符串可以直接通过字符串字面量创建。这些字面量被单引号或双引号包裹。反斜线（\\）转义字符并且产生一些控制字符。例如：","position":{"start":{"line":486,"column":1,"offset":9006},"end":{"line":486,"column":59,"offset":9064}}}],"position":{"start":{"line":486,"column":1,"offset":9006},"end":{"line":486,"column":59,"offset":9064}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token string\">'abc'</span>\n<span class=\"token string\">\"abc\"</span>\n\n<span class=\"token string\">'Did she say \"Hello\"?'</span>\n<span class=\"token string\">\"Did she say \\\"Hello\\\"?\"</span>\n\n<span class=\"token string\">'That\\'s nice!'</span>\n<span class=\"token string\">\"That's nice!\"</span>\n\n<span class=\"token string\">'Line 1\\nLine 2'</span>  <span class=\"token comment\">// 换行</span>\n<span class=\"token string\">'Backlash: \\\\'</span></code></pre></div>","position":{"start":{"line":487,"column":1,"offset":9065},"end":{"line":499,"column":4,"offset":9215}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"可以通过方括号访问单个字符：","position":{"start":{"line":500,"column":1,"offset":9216},"end":{"line":500,"column":15,"offset":9230}}}],"position":{"start":{"line":500,"column":1,"offset":9216},"end":{"line":500,"column":15,"offset":9230}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token operator\">></span> <span class=\"token keyword\">var</span> str <span class=\"token operator\">=</span> <span class=\"token string\">'abc'</span><span class=\"token punctuation\">;</span>\n<span class=\"token operator\">></span> str<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span>\n  <span class=\"token string\">'b'</span></code></pre></div>","position":{"start":{"line":501,"column":1,"offset":9231},"end":{"line":505,"column":4,"offset":9282}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"length属性是字符串的字符数量。","position":{"start":{"line":506,"column":1,"offset":9283},"end":{"line":506,"column":19,"offset":9301}}}],"position":{"start":{"line":506,"column":1,"offset":9283},"end":{"line":506,"column":19,"offset":9301}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token operator\">></span> <span class=\"token string\">'abc'</span><span class=\"token punctuation\">.</span>length\n  <span class=\"token number\">3</span></code></pre></div>","position":{"start":{"line":507,"column":1,"offset":9302},"end":{"line":510,"column":4,"offset":9338}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"提醒：字符串是不可变的，如果你想改变现有字符串，你需要创建一个行的字符串。","position":{"start":{"line":511,"column":1,"offset":9339},"end":{"line":511,"column":38,"offset":9376}}}],"position":{"start":{"line":511,"column":1,"offset":9339},"end":{"line":511,"column":38,"offset":9376}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"字符串运算符（String operators）","position":{"start":{"line":513,"column":5,"offset":9382},"end":{"line":513,"column":29,"offset":9406}}}],"position":{"start":{"line":513,"column":1,"offset":9378},"end":{"line":513,"column":29,"offset":9406}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"字符串可以通过加号操作符（+）拼接，如果其中一个操作数为字符串，会将另一个操作数也转换为字符串。","position":{"start":{"line":515,"column":1,"offset":9408},"end":{"line":515,"column":49,"offset":9456}}}],"position":{"start":{"line":515,"column":1,"offset":9408},"end":{"line":515,"column":49,"offset":9456}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token operator\">></span> <span class=\"token keyword\">var</span> messageCount <span class=\"token operator\">=</span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span>\n<span class=\"token operator\">></span> <span class=\"token string\">'You have '</span><span class=\"token operator\">+</span>messageCount<span class=\"token operator\">+</span><span class=\"token string\">' messages'</span>\n  <span class=\"token string\">'You have 3 messages'</span></code></pre></div>","position":{"start":{"line":516,"column":1,"offset":9457},"end":{"line":520,"column":4,"offset":9561}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"连续执行拼接操作可以使用 += 操作符：","position":{"start":{"line":521,"column":1,"offset":9562},"end":{"line":521,"column":21,"offset":9582}}}],"position":{"start":{"line":521,"column":1,"offset":9562},"end":{"line":521,"column":21,"offset":9582}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token operator\">></span> <span class=\"token keyword\">var</span> str <span class=\"token operator\">=</span> <span class=\"token string\">''</span><span class=\"token punctuation\">;</span>\n<span class=\"token operator\">></span> str <span class=\"token operator\">+=</span> <span class=\"token string\">'Multiple '</span><span class=\"token punctuation\">;</span>\n<span class=\"token operator\">></span> str <span class=\"token operator\">+=</span> <span class=\"token string\">'pieces '</span><span class=\"token punctuation\">;</span>\n<span class=\"token operator\">></span> str <span class=\"token operator\">+=</span> <span class=\"token string\">'are concatenated.'</span><span class=\"token punctuation\">;</span>\n<span class=\"token operator\">></span> str\n  <span class=\"token string\">'Multiple pieces are concatenated.'</span></code></pre></div>","position":{"start":{"line":522,"column":1,"offset":9583},"end":{"line":529,"column":4,"offset":9732}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"字符串方法（String methods）","position":{"start":{"line":530,"column":5,"offset":9737},"end":{"line":530,"column":26,"offset":9758}}}],"position":{"start":{"line":530,"column":1,"offset":9733},"end":{"line":530,"column":26,"offset":9758}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"字符串有许多有用的方法。例如：","position":{"start":{"line":532,"column":1,"offset":9760},"end":{"line":532,"column":16,"offset":9775}}}],"position":{"start":{"line":532,"column":1,"offset":9760},"end":{"line":532,"column":16,"offset":9775}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token operator\">></span> <span class=\"token string\">'abc'</span><span class=\"token punctuation\">.</span><span class=\"token function\">slice</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\">// 复制子字符串</span>\n  <span class=\"token string\">'bc'</span>\n<span class=\"token operator\">></span> <span class=\"token string\">'abc'</span><span class=\"token punctuation\">.</span><span class=\"token function\">slice</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\n  <span class=\"token string\">'b'</span>\n\n<span class=\"token operator\">></span> <span class=\"token string\">'\\t xyz  '</span><span class=\"token punctuation\">.</span><span class=\"token function\">trim</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\">// 移除空白字符</span>\n  <span class=\"token string\">'xyz'</span>\n\n<span class=\"token operator\">></span> <span class=\"token string\">'mjölnir'</span><span class=\"token punctuation\">.</span><span class=\"token function\">toUpperCase</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token string\">'MJÖLNIR'</span>\n\n<span class=\"token operator\">></span> <span class=\"token string\">'abc'</span><span class=\"token punctuation\">.</span><span class=\"token function\">indexOf</span><span class=\"token punctuation\">(</span><span class=\"token string\">'b'</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\">// 查找字符串</span>\n  <span class=\"token number\">1</span>\n<span class=\"token operator\">></span> <span class=\"token string\">'abc'</span><span class=\"token punctuation\">.</span><span class=\"token function\">indexOf</span><span class=\"token punctuation\">(</span><span class=\"token string\">'x'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token operator\">-</span><span class=\"token number\">1</span></code></pre></div>","position":{"start":{"line":533,"column":1,"offset":9776},"end":{"line":549,"column":4,"offset":9995}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"语句（Statements）","position":{"start":{"line":551,"column":4,"offset":10000},"end":{"line":551,"column":18,"offset":10014}}}],"position":{"start":{"line":551,"column":1,"offset":9997},"end":{"line":551,"column":18,"offset":10014}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"条件（Conditionals）","position":{"start":{"line":553,"column":5,"offset":10020},"end":{"line":553,"column":21,"offset":10036}}}],"position":{"start":{"line":553,"column":1,"offset":10016},"end":{"line":553,"column":21,"offset":10036}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"if语句通过布尔条件决定执行那个分支：","position":{"start":{"line":555,"column":1,"offset":10038},"end":{"line":555,"column":20,"offset":10057}}}],"position":{"start":{"line":555,"column":1,"offset":10038},"end":{"line":555,"column":20,"offset":10057}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>myvar <span class=\"token operator\">===</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// then</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>myvar <span class=\"token operator\">===</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// then</span>\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// else</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>myvar <span class=\"token operator\">===</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// then</span>\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>myvar <span class=\"token operator\">===</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// else-if</span>\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>myvar <span class=\"token operator\">===</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// else-if</span>\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// else</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":556,"column":1,"offset":10058},"end":{"line":576,"column":4,"offset":10300}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"下面的switch语句，furit的值决定那个分支被执行。","position":{"start":{"line":577,"column":1,"offset":10301},"end":{"line":577,"column":30,"offset":10330}}}],"position":{"start":{"line":577,"column":1,"offset":10301},"end":{"line":577,"column":30,"offset":10330}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">switch</span> <span class=\"token punctuation\">(</span>fruit<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">case</span> <span class=\"token string\">'banana'</span><span class=\"token punctuation\">:</span>\n        <span class=\"token comment\">// ...</span>\n        <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">case</span> <span class=\"token string\">'apple'</span><span class=\"token punctuation\">:</span>\n        <span class=\"token comment\">// ...</span>\n        <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">default</span><span class=\"token punctuation\">:</span>  <span class=\"token comment\">// 所有其他情况</span>\n        <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":578,"column":1,"offset":10331},"end":{"line":589,"column":4,"offset":10503}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"循环（Loops）","position":{"start":{"line":590,"column":5,"offset":10508},"end":{"line":590,"column":14,"offset":10517}}}],"position":{"start":{"line":590,"column":1,"offset":10504},"end":{"line":590,"column":14,"offset":10517}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"for 循环的格式如下：","position":{"start":{"line":592,"column":1,"offset":10519},"end":{"line":592,"column":13,"offset":10531}}}],"position":{"start":{"line":592,"column":1,"offset":10519},"end":{"line":592,"column":13,"offset":10531}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"for(初始化; 当条件成立时循环; 下一步操作)\n例子：","position":{"start":{"line":594,"column":1,"offset":10533},"end":{"line":595,"column":4,"offset":10562}}}],"position":{"start":{"line":594,"column":1,"offset":10533},"end":{"line":595,"column":4,"offset":10562}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> arr<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":596,"column":1,"offset":10563},"end":{"line":600,"column":4,"offset":10644}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"当条件成立时while循环继续循环它的循环体。","position":{"start":{"line":601,"column":1,"offset":10645},"end":{"line":601,"column":24,"offset":10668}}}],"position":{"start":{"line":601,"column":1,"offset":10645},"end":{"line":601,"column":24,"offset":10668}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// 和上面的for循环相等</span>\n<span class=\"token keyword\">var</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">&lt;</span> arr<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    i<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":602,"column":1,"offset":10669},"end":{"line":609,"column":4,"offset":10773}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"当条件成立时，do-while循环继续循环。由于条件位于循环体之后，所以循环体总是被至少至少执行一次。","position":{"start":{"line":610,"column":1,"offset":10774},"end":{"line":610,"column":52,"offset":10825}}}],"position":{"start":{"line":610,"column":1,"offset":10774},"end":{"line":610,"column":52,"offset":10825}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">do</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span>条件<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>","position":{"start":{"line":611,"column":1,"offset":10826},"end":{"line":615,"column":4,"offset":10872}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"在所有的循环中：","position":{"start":{"line":616,"column":1,"offset":10873},"end":{"line":616,"column":9,"offset":10881}}}],"position":{"start":{"line":616,"column":1,"offset":10873},"end":{"line":616,"column":9,"offset":10881}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"break中断循环\ncontinue开始一个新的循环迭代\n函数（Functions）","position":{"start":{"line":618,"column":1,"offset":10883},"end":{"line":620,"column":14,"offset":10925}}}],"position":{"start":{"line":618,"column":1,"offset":10883},"end":{"line":620,"column":14,"offset":10925}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"定义函数的一种方法是通过函数声明：","position":{"start":{"line":622,"column":1,"offset":10927},"end":{"line":622,"column":18,"offset":10944}}}],"position":{"start":{"line":622,"column":1,"offset":10927},"end":{"line":622,"column":18,"offset":10944}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">param1<span class=\"token punctuation\">,</span> param2</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> param1 <span class=\"token operator\">+</span> param2<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":623,"column":1,"offset":10945},"end":{"line":627,"column":4,"offset":11023}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"上面的代码定义一个名称叫做add的函数，有两个参数param1和param2，并且返回参数的和。下面是你如何调用这个函数：","position":{"start":{"line":628,"column":1,"offset":11024},"end":{"line":628,"column":62,"offset":11085}}}],"position":{"start":{"line":628,"column":1,"offset":11024},"end":{"line":628,"column":62,"offset":11085}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token operator\">></span> <span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token number\">6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n  <span class=\"token number\">7</span>\n<span class=\"token operator\">></span> <span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token string\">'a'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'b'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token string\">'ab'</span></code></pre></div>","position":{"start":{"line":629,"column":1,"offset":11086},"end":{"line":634,"column":4,"offset":11142}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"另一种定义add()函数的方法是通过函数表达式：","position":{"start":{"line":635,"column":1,"offset":11143},"end":{"line":635,"column":25,"offset":11167}}}],"position":{"start":{"line":635,"column":1,"offset":11143},"end":{"line":635,"column":25,"offset":11167}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> <span class=\"token function-variable function\">add</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">param1<span class=\"token punctuation\">,</span> param2</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> param1 <span class=\"token operator\">+</span> param2<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>","position":{"start":{"line":636,"column":1,"offset":11168},"end":{"line":640,"column":4,"offset":11254}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"函数表达式产生一个值，因此可以直接将函数作为参数传递给其他函数：","position":{"start":{"line":641,"column":1,"offset":11255},"end":{"line":641,"column":33,"offset":11287}}}],"position":{"start":{"line":641,"column":1,"offset":11255},"end":{"line":641,"column":33,"offset":11287}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"someOtherFunction(function (p1, p2) { … });\n函数声明提升（Function declarations are hoisted）","position":{"start":{"line":643,"column":1,"offset":11289},"end":{"line":644,"column":42,"offset":11376}}}],"position":{"start":{"line":643,"column":1,"offset":11289},"end":{"line":644,"column":42,"offset":11376}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"函数声明会被提升，他们全被移动到当前作用域开始之处。这允许你在函数声明之前调用它们：","position":{"start":{"line":646,"column":1,"offset":11378},"end":{"line":646,"column":43,"offset":11420}}}],"position":{"start":{"line":646,"column":1,"offset":11378},"end":{"line":646,"column":43,"offset":11420}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">foo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">bar</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// 没问题，bar被提升</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">bar</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token operator\">...</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":647,"column":1,"offset":11421},"end":{"line":654,"column":4,"offset":11522}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"注意：虽然变量声明也会被提升，但赋值的过程不会被提升：","position":{"start":{"line":655,"column":1,"offset":11523},"end":{"line":655,"column":28,"offset":11550}}}],"position":{"start":{"line":655,"column":1,"offset":11523},"end":{"line":655,"column":28,"offset":11550}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">foo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">bar</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// 有问题，bar是undefined</span>\n    <span class=\"token keyword\">var</span> <span class=\"token function-variable function\">bar</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// ...</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":656,"column":1,"offset":11551},"end":{"line":663,"column":4,"offset":11670}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"特殊变量arguments（The special variable arguments）","position":{"start":{"line":664,"column":5,"offset":11675},"end":{"line":664,"column":50,"offset":11720}}}],"position":{"start":{"line":664,"column":1,"offset":11671},"end":{"line":664,"column":50,"offset":11720}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"在JavaScript中你可以调用任意函数并传递任意数量的参数——语言绝不会抱怨。那可以工作，然而，使所有参数可访问需要通过特殊变量 arguments。arguments 看起来像数组，但它没有数组的方法。","position":{"start":{"line":666,"column":1,"offset":11722},"end":{"line":666,"column":105,"offset":11826}}}],"position":{"start":{"line":666,"column":1,"offset":11722},"end":{"line":666,"column":105,"offset":11826}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token operator\">></span> <span class=\"token keyword\">function</span> <span class=\"token function\">f</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token keyword\">return</span> arguments <span class=\"token punctuation\">}</span>\n<span class=\"token operator\">></span> <span class=\"token keyword\">var</span> args <span class=\"token operator\">=</span> <span class=\"token function\">f</span><span class=\"token punctuation\">(</span><span class=\"token string\">'a'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'b'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'c'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token operator\">></span> args<span class=\"token punctuation\">.</span>length\n<span class=\"token number\">3</span>\n<span class=\"token operator\">></span> args<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span>  <span class=\"token comment\">// 获取索引为0的元素</span>\n<span class=\"token string\">'a'</span></code></pre></div>","position":{"start":{"line":667,"column":1,"offset":11827},"end":{"line":674,"column":4,"offset":11955}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"太多或太少参数（Too many or too few arguments）","position":{"start":{"line":675,"column":5,"offset":11960},"end":{"line":675,"column":43,"offset":11998}}}],"position":{"start":{"line":675,"column":1,"offset":11956},"end":{"line":675,"column":43,"offset":11998}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"让我们通过下面的函数探索JavaScript中传递太多或太少参数时如何处理（函数 toArray在后面提到）","position":{"start":{"line":677,"column":1,"offset":12000},"end":{"line":677,"column":55,"offset":12054}}}],"position":{"start":{"line":677,"column":1,"offset":12000},"end":{"line":677,"column":55,"offset":12054}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">f</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">x<span class=\"token punctuation\">,</span> y</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token function\">toArray</span><span class=\"token punctuation\">(</span>arguments<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":678,"column":1,"offset":12055},"end":{"line":683,"column":4,"offset":12153}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"多出的参数将被忽略（可以通过arguments访问）：","position":{"start":{"line":684,"column":1,"offset":12154},"end":{"line":684,"column":28,"offset":12181}}}],"position":{"start":{"line":684,"column":1,"offset":12154},"end":{"line":684,"column":28,"offset":12181}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token operator\">></span> <span class=\"token function\">f</span><span class=\"token punctuation\">(</span><span class=\"token string\">'a'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'b'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'c'</span><span class=\"token punctuation\">)</span>\na b\n<span class=\"token punctuation\">[</span> <span class=\"token string\">'a'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'b'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'c'</span> <span class=\"token punctuation\">]</span></code></pre></div>","position":{"start":{"line":685,"column":1,"offset":12182},"end":{"line":689,"column":4,"offset":12240}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"缺少的参数将是undefined：","position":{"start":{"line":690,"column":1,"offset":12241},"end":{"line":690,"column":18,"offset":12258}}}],"position":{"start":{"line":690,"column":1,"offset":12241},"end":{"line":690,"column":18,"offset":12258}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token operator\">></span> <span class=\"token function\">f</span><span class=\"token punctuation\">(</span><span class=\"token string\">'a'</span><span class=\"token punctuation\">)</span>\na <span class=\"token keyword\">undefined</span>\n<span class=\"token punctuation\">[</span> <span class=\"token string\">'a'</span> <span class=\"token punctuation\">]</span>\n<span class=\"token operator\">></span> <span class=\"token function\">f</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">undefined</span> <span class=\"token keyword\">undefined</span>\n<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></code></pre></div>","position":{"start":{"line":691,"column":1,"offset":12259},"end":{"line":698,"column":4,"offset":12334}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"可选参数（Optional parameters）","position":{"start":{"line":699,"column":5,"offset":12339},"end":{"line":699,"column":30,"offset":12364}}}],"position":{"start":{"line":699,"column":1,"offset":12335},"end":{"line":699,"column":30,"offset":12364}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"下面是一个常见模式，给参数设置默认值：","position":{"start":{"line":701,"column":1,"offset":12366},"end":{"line":701,"column":20,"offset":12385}}}],"position":{"start":{"line":701,"column":1,"offset":12366},"end":{"line":701,"column":20,"offset":12385}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">pair</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">x<span class=\"token punctuation\">,</span> y</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    x <span class=\"token operator\">=</span> x <span class=\"token operator\">||</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// (*)</span>\n    y <span class=\"token operator\">=</span> y <span class=\"token operator\">||</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">[</span> x<span class=\"token punctuation\">,</span> y <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":702,"column":1,"offset":12386},"end":{"line":708,"column":4,"offset":12488}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"在（*）这行，如果x是真值（除了：null，undefined 等），||操作符返回x。否则，它返回第二个操作数。","position":{"start":{"line":709,"column":1,"offset":12489},"end":{"line":709,"column":58,"offset":12546}}}],"position":{"start":{"line":709,"column":1,"offset":12489},"end":{"line":709,"column":58,"offset":12546}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token operator\">></span> <span class=\"token function\">pair</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">[</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">]</span>\n<span class=\"token operator\">></span> <span class=\"token function\">pair</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">[</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">]</span>\n<span class=\"token operator\">></span> <span class=\"token function\">pair</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">[</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span> <span class=\"token punctuation\">]</span> </code></pre></div>","position":{"start":{"line":710,"column":1,"offset":12547},"end":{"line":717,"column":4,"offset":12624}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"强制数量（Enforcing an arity）","position":{"start":{"line":718,"column":1,"offset":12625},"end":{"line":718,"column":25,"offset":12649}}}],"position":{"start":{"line":718,"column":1,"offset":12625},"end":{"line":718,"column":25,"offset":12649}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"如果你想强制参数的数量，你可以检测arguments.length：","position":{"start":{"line":720,"column":1,"offset":12651},"end":{"line":720,"column":35,"offset":12685}}}],"position":{"start":{"line":720,"column":1,"offset":12651},"end":{"line":720,"column":35,"offset":12685}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">pair</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">x<span class=\"token punctuation\">,</span> y</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>arguments<span class=\"token punctuation\">.</span>length <span class=\"token operator\">!==</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Error</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Need exactly 2 arguments'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token operator\">...</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":721,"column":1,"offset":12686},"end":{"line":728,"column":4,"offset":12828}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"将arguments 转换为数组（Converting arguments to an array）","position":{"start":{"line":729,"column":1,"offset":12829},"end":{"line":729,"column":51,"offset":12879}}}],"position":{"start":{"line":729,"column":1,"offset":12829},"end":{"line":729,"column":51,"offset":12879}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"arguments 不是一个数组，它仅仅是类数组（array-like）：它有一个length属性，并且你可以通过方括号索引方式访问它的元素。然而，你不能移除元素，或在它上面调用任何数组方法。因此，有时你需要将其转换为数组。这就是下面函数的作用。","position":{"start":{"line":731,"column":1,"offset":12881},"end":{"line":731,"column":124,"offset":13004}}}],"position":{"start":{"line":731,"column":1,"offset":12881},"end":{"line":731,"column":124,"offset":13004}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">toArray</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">arrayLikeObject</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">slice</span><span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span>arrayLikeObject<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":732,"column":1,"offset":13005},"end":{"line":736,"column":4,"offset":13103}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"异常处理（Exception handling）","position":{"start":{"line":737,"column":4,"offset":13107},"end":{"line":737,"column":28,"offset":13131}}}],"position":{"start":{"line":737,"column":1,"offset":13104},"end":{"line":737,"column":28,"offset":13131}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"异常处理最常见的方式像下面这样：","position":{"start":{"line":739,"column":1,"offset":13133},"end":{"line":739,"column":17,"offset":13149}}}],"position":{"start":{"line":739,"column":1,"offset":13133},"end":{"line":739,"column":17,"offset":13149}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">throwException</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Error</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Problem!'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">throwException</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// 错误：信息</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>stack<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// 非标准，但大部分浏览器支持</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":740,"column":1,"offset":13150},"end":{"line":751,"column":4,"offset":13349}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"try分支包裹易出错的代码，如果try分支内部抛出异常，catch分支将会执行。","position":{"start":{"line":752,"column":1,"offset":13350},"end":{"line":752,"column":41,"offset":13390}}}],"position":{"start":{"line":752,"column":1,"offset":13350},"end":{"line":752,"column":41,"offset":13390}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"严格模式（Strict mode）","position":{"start":{"line":754,"column":4,"offset":13395},"end":{"line":754,"column":21,"offset":13412}}}],"position":{"start":{"line":754,"column":1,"offset":13392},"end":{"line":754,"column":21,"offset":13412}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"严格模式开启检测和一些其他措施，是JavaScript变成更整洁的语言。推荐使用严格模式。为了开启严格模式，只需在JavaScript文件或script标签第一行添加如下语句：","position":{"start":{"line":756,"column":1,"offset":13414},"end":{"line":756,"column":89,"offset":13502}}}],"position":{"start":{"line":756,"column":1,"offset":13414},"end":{"line":756,"column":89,"offset":13502}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"‘use strict’;\n你也可以在每个函数上选择性开启严格模式，只需将上面的代码放在函数的开头：","position":{"start":{"line":758,"column":1,"offset":13504},"end":{"line":759,"column":37,"offset":13554}}}],"position":{"start":{"line":758,"column":1,"offset":13504},"end":{"line":759,"column":37,"offset":13554}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">functionInStrictMode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token string\">'use strict'</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":760,"column":1,"offset":13555},"end":{"line":764,"column":4,"offset":13626}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"下面的两小节看下严格模式的三大好处。","position":{"start":{"line":765,"column":1,"offset":13627},"end":{"line":765,"column":19,"offset":13645}}}],"position":{"start":{"line":765,"column":1,"offset":13627},"end":{"line":765,"column":19,"offset":13645}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"明确错误（Explicit errors）","position":{"start":{"line":767,"column":4,"offset":13650},"end":{"line":767,"column":25,"offset":13671}}}],"position":{"start":{"line":767,"column":1,"offset":13647},"end":{"line":767,"column":25,"offset":13671}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"让我们看一个例子，严格模式给我们明确的错误，否则JavaScript总是静默失败：下面的函数 f() 执行一些非法操作，它试图更改所有字符串都有的只读属性——length：","position":{"start":{"line":769,"column":1,"offset":13673},"end":{"line":769,"column":87,"offset":13759}}}],"position":{"start":{"line":769,"column":1,"offset":13673},"end":{"line":769,"column":87,"offset":13759}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">f</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token string\">'abc'</span><span class=\"token punctuation\">.</span>length <span class=\"token operator\">=</span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":770,"column":1,"offset":13760},"end":{"line":774,"column":4,"offset":13816}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"当你调用上面的函数，它静默失败，赋值操作被简单忽略。让我们将 f() 在严格模式下运行：","position":{"start":{"line":775,"column":1,"offset":13817},"end":{"line":775,"column":45,"offset":13861}}}],"position":{"start":{"line":775,"column":1,"offset":13817},"end":{"line":775,"column":45,"offset":13861}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">f_strict</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token string\">'use strict'</span><span class=\"token punctuation\">;</span>\n    <span class=\"token string\">'abc'</span><span class=\"token punctuation\">.</span>length <span class=\"token operator\">=</span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":776,"column":1,"offset":13862},"end":{"line":781,"column":4,"offset":13943}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"现在浏览器报给我们一些错误：","position":{"start":{"line":782,"column":1,"offset":13944},"end":{"line":782,"column":15,"offset":13958}}}],"position":{"start":{"line":782,"column":1,"offset":13944},"end":{"line":782,"column":15,"offset":13958}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token operator\">></span> <span class=\"token function\">f_strict</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nTypeError<span class=\"token punctuation\">:</span> Cannot assign to read only property <span class=\"token string\">'length'</span> <span class=\"token keyword\">of</span> abc</code></pre></div>","position":{"start":{"line":783,"column":1,"offset":13959},"end":{"line":786,"column":4,"offset":14052}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"不是方法的函数中的this（this in non-method functions）","position":{"start":{"line":787,"column":1,"offset":14053},"end":{"line":787,"column":44,"offset":14096}}}],"position":{"start":{"line":787,"column":1,"offset":14053},"end":{"line":787,"column":44,"offset":14096}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"在严格模式下，不作为方法的函数中的this值是undefined：","position":{"start":{"line":789,"column":1,"offset":14098},"end":{"line":789,"column":34,"offset":14131}}}],"position":{"start":{"line":789,"column":1,"offset":14098},"end":{"line":789,"column":34,"offset":14131}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">f_strict</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token string\">'use strict'</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token function\">f_strict</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">===</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// true</span></code></pre></div>","position":{"start":{"line":790,"column":1,"offset":14132},"end":{"line":796,"column":4,"offset":14256}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"在非严格模式下，this的值是被称作全局对象（global object）（在浏览器里是window）：","position":{"start":{"line":797,"column":1,"offset":14257},"end":{"line":797,"column":53,"offset":14309}}}],"position":{"start":{"line":797,"column":1,"offset":14257},"end":{"line":797,"column":53,"offset":14309}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">f</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token function\">f</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">===</span> window<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// true</span></code></pre></div>","position":{"start":{"line":798,"column":1,"offset":14310},"end":{"line":803,"column":4,"offset":14399}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"不再自动创建全局变量（No auto-created global variables）","position":{"start":{"line":804,"column":5,"offset":14404},"end":{"line":804,"column":49,"offset":14448}}}],"position":{"start":{"line":804,"column":1,"offset":14400},"end":{"line":804,"column":49,"offset":14448}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"在非严格模式下，如果你给不存在的变量赋值，JavaScript会自动创建一个全局变量：","position":{"start":{"line":806,"column":1,"offset":14450},"end":{"line":806,"column":44,"offset":14493}}}],"position":{"start":{"line":806,"column":1,"offset":14450},"end":{"line":806,"column":44,"offset":14493}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token operator\">></span> <span class=\"token keyword\">function</span> <span class=\"token function\">f</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> foo <span class=\"token operator\">=</span> <span class=\"token number\">5</span> <span class=\"token punctuation\">}</span>\n<span class=\"token operator\">></span> <span class=\"token function\">f</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\">// 不会报错</span>\n<span class=\"token operator\">></span> foo\n<span class=\"token number\">5</span></code></pre></div>","position":{"start":{"line":807,"column":1,"offset":14494},"end":{"line":812,"column":4,"offset":14561}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"在严格模式下，这会产生一个错误：","position":{"start":{"line":813,"column":1,"offset":14562},"end":{"line":813,"column":17,"offset":14578}}}],"position":{"start":{"line":813,"column":1,"offset":14562},"end":{"line":813,"column":17,"offset":14578}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token operator\">></span> <span class=\"token keyword\">function</span> <span class=\"token function\">f_strict</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token string\">'use strict'</span><span class=\"token punctuation\">;</span> foo2 <span class=\"token operator\">=</span> <span class=\"token number\">4</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n<span class=\"token operator\">></span> <span class=\"token function\">f_strict</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nReferenceError<span class=\"token punctuation\">:</span> foo2 is not defined</code></pre></div>","position":{"start":{"line":814,"column":1,"offset":14579},"end":{"line":818,"column":4,"offset":14695}}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":818,"column":4,"offset":14695}}}}