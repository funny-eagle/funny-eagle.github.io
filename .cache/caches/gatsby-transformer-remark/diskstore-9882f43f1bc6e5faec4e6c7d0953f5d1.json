{"expireTime":9007200810533797000,"key":"transformer-remark-markdown-html-ast-6eb51d706acd84256962490869d3b975-gatsby-remark-imagesgatsby-remark-responsive-iframegatsby-remark-prismjsgatsby-remark-copy-linked-filesgatsby-remark-smartypants-","val":{"type":"root","children":[{"type":"element","tagName":"blockquote","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"第十五周 ARTS。这周约了几个好久不见的“狱友”聚餐（因为我们同在的上家公司是做司法行业业务系统的，所以调侃称为“狱友”），聊了很多，让我感触最深刻的就是关于读书和学习的思维力和金字塔原理，怎么样高效的读书学习也是有套路可寻的，掌握一些模式可以更快的掌握书中的有效信息，本周的Share分享几本相关的书，与大家共勉。","position":{"start":{"line":2,"column":3,"offset":3},"end":{"line":2,"column":162,"offset":162}}}],"position":{"start":{"line":2,"column":3,"offset":3},"end":{"line":2,"column":162,"offset":162}}},{"type":"text","value":"\n"}],"position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":162,"offset":162}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"Algorithm","position":{"start":{"line":4,"column":4,"offset":167},"end":{"line":4,"column":13,"offset":176}}}],"position":{"start":{"line":4,"column":1,"offset":164},"end":{"line":4,"column":13,"offset":176}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">package</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>nocoder<span class=\"token punctuation\">.</span>leetcode<span class=\"token punctuation\">.</span>solution</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">/**\n * Given a sorted array nums, remove the duplicates in-place such that each element\n *\n * appear only once and return the new length.\n *\n * Do not allocate extra space for another array, you must do this by modifying the\n *\n * input array in-place with O(1) extra memory.\n *\n * Example 1:\n *\n * Given nums = [1,1,2],\n *\n * Your function should return length = 2, with the first two elements of nums being 1 and 2 respectively.\n *\n * It doesn't matter what you leave beyond the returned length.\n * Example 2:\n *\n * Given nums = [0,0,1,1,1,2,2,3,3,4],\n *\n * Your function should return length = 5, with the first five elements of\n *\n * nums being modified to 0, 1, 2, 3, and 4 respectively.\n *\n * It doesn't matter what values are set beyond the returned length.\n * Clarification:\n *\n * Confused why the returned value is an integer but your answer is an array?\n *\n * Note that the input array is passed in by reference,\n *\n * which means modification to the input array will be known to the caller as well.\n *\n * Internally you can think of this:\n *\n * // nums is passed in by reference. (i.e., without making a copy)\n * int len = removeDuplicates(nums);\n *\n * // any modification to nums in your function would be known by the caller.\n * // using the length returned by your function, it prints the first len elements.\n * for (int i = 0; i &lt; len; i++) {\n *     print(nums[i]);\n * }\n * @author jason\n * @date 2018/10/13.\n */</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">RemoveDuplicatesFromSortedArray</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">int</span> <span class=\"token function\">removeDuplicates</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> nums<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>nums <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">||</span> nums<span class=\"token punctuation\">.</span>length <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">int</span> count <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> nums<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>nums<span class=\"token punctuation\">[</span>i <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">!=</span> nums<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                nums<span class=\"token punctuation\">[</span>count<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> nums<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token keyword\">return</span> count<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":6,"column":1,"offset":178},"end":{"line":71,"column":4,"offset":2038}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"Review","position":{"start":{"line":73,"column":4,"offset":2043},"end":{"line":73,"column":10,"offset":2049}}}],"position":{"start":{"line":73,"column":1,"offset":2040},"end":{"line":73,"column":10,"offset":2049}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"https://kafka.apache.org/quickstart"},"children":[{"type":"text","value":"Apache Kafka Quickstart","position":{"start":{"line":75,"column":6,"offset":2056},"end":{"line":75,"column":29,"offset":2079}}}],"position":{"start":{"line":75,"column":5,"offset":2055},"end":{"line":75,"column":67,"offset":2117}}}],"position":{"start":{"line":75,"column":1,"offset":2051},"end":{"line":75,"column":67,"offset":2117}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"最近计划对系统内部、系统与系统间的接口调用进行解耦，春哥推荐使用kafka，之前我们都没有用过kafka，于是花了一个下午的时间来入门kafka，把官网的introduction啃了一遍，照着quickstart操作，体验了一把。","position":{"start":{"line":77,"column":1,"offset":2119},"end":{"line":77,"column":116,"offset":2234}}}],"position":{"start":{"line":77,"column":1,"offset":2119},"end":{"line":77,"column":116,"offset":2234}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Kafka 中的几个基本概念：","position":{"start":{"line":79,"column":1,"offset":2236},"end":{"line":79,"column":16,"offset":2251}}}],"position":{"start":{"line":79,"column":1,"offset":2236},"end":{"line":79,"column":16,"offset":2251}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Broker","position":{"start":{"line":81,"column":3,"offset":2255},"end":{"line":81,"column":9,"offset":2261}}}],"position":{"start":{"line":81,"column":3,"offset":2255},"end":{"line":81,"column":9,"offset":2261}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"代理是负责维护发布数据的简单系统。 每个代理中的每个主题可以具有零个或多个分区。 假设，如果在一个主题和N个代理中有N个分区，每个代理将有一个分区。","position":{"start":{"line":83,"column":5,"offset":2267},"end":{"line":83,"column":79,"offset":2341}}}],"position":{"start":{"line":83,"column":3,"offset":2265},"end":{"line":83,"column":79,"offset":2341}}},{"type":"text","value":"\n"}],"position":{"start":{"line":83,"column":3,"offset":2265},"end":{"line":83,"column":79,"offset":2341}}},{"type":"text","value":"\n"}],"position":{"start":{"line":81,"column":1,"offset":2253},"end":{"line":84,"column":1,"offset":2342}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Topic","position":{"start":{"line":85,"column":3,"offset":2345},"end":{"line":85,"column":8,"offset":2350}}}],"position":{"start":{"line":85,"column":3,"offset":2345},"end":{"line":85,"column":8,"offset":2350}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"属于特定类别的消息流称为主题。 数据存储在主题中。","position":{"start":{"line":87,"column":5,"offset":2356},"end":{"line":87,"column":30,"offset":2381}}}],"position":{"start":{"line":87,"column":3,"offset":2354},"end":{"line":87,"column":30,"offset":2381}}},{"type":"text","value":"\n"}],"position":{"start":{"line":87,"column":3,"offset":2354},"end":{"line":87,"column":30,"offset":2381}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"主题被拆分成分区。 对于每个主题，Kafka保存一个分区的数据。 每个这样的分区包含不可变有序序列的消息。 分区被实现为具有相等大小的一组分段文件。","position":{"start":{"line":89,"column":5,"offset":2387},"end":{"line":89,"column":79,"offset":2461}}}],"position":{"start":{"line":89,"column":5,"offset":2387},"end":{"line":89,"column":79,"offset":2461}}},{"type":"text","value":"\n"}],"position":{"start":{"line":85,"column":1,"offset":2343},"end":{"line":90,"column":1,"offset":2462}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Partition","position":{"start":{"line":91,"column":3,"offset":2465},"end":{"line":91,"column":12,"offset":2474}}}],"position":{"start":{"line":91,"column":3,"offset":2465},"end":{"line":91,"column":12,"offset":2474}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"主题可能有许多分区，因此它可以处理任意数量的数据。","position":{"start":{"line":93,"column":5,"offset":2480},"end":{"line":93,"column":30,"offset":2505}}}],"position":{"start":{"line":93,"column":3,"offset":2478},"end":{"line":93,"column":30,"offset":2505}}},{"type":"text","value":"\n"}],"position":{"start":{"line":93,"column":3,"offset":2478},"end":{"line":93,"column":30,"offset":2505}}},{"type":"text","value":"\n"}],"position":{"start":{"line":91,"column":1,"offset":2463},"end":{"line":94,"column":1,"offset":2506}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Producer","position":{"start":{"line":95,"column":3,"offset":2509},"end":{"line":95,"column":11,"offset":2517}}}],"position":{"start":{"line":95,"column":3,"offset":2509},"end":{"line":95,"column":11,"offset":2517}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"生产者是发送给一个或多个Kafka主题的消息的发布者。 生产者向代理发送数据。 每当生产者将消息发布给代理时，代理只需将消息附加到最后一个段文件。 实际上，该消息将被附加到分区。 生产者还可以向他们选择的分区发送消息。","position":{"start":{"line":97,"column":5,"offset":2523},"end":{"line":97,"column":114,"offset":2632}}}],"position":{"start":{"line":97,"column":3,"offset":2521},"end":{"line":97,"column":114,"offset":2632}}},{"type":"text","value":"\n"}],"position":{"start":{"line":97,"column":3,"offset":2521},"end":{"line":97,"column":114,"offset":2632}}},{"type":"text","value":"\n"}],"position":{"start":{"line":95,"column":1,"offset":2507},"end":{"line":98,"column":1,"offset":2633}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Consumer","position":{"start":{"line":99,"column":3,"offset":2636},"end":{"line":99,"column":11,"offset":2644}}}],"position":{"start":{"line":99,"column":3,"offset":2636},"end":{"line":99,"column":11,"offset":2644}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"消费者从代理处读取数据。 消费者订阅一个或多个主题，并通过从代理中提取数据来使用已发布的消息。","position":{"start":{"line":101,"column":5,"offset":2650},"end":{"line":101,"column":52,"offset":2697}}}],"position":{"start":{"line":101,"column":3,"offset":2648},"end":{"line":101,"column":52,"offset":2697}}},{"type":"text","value":"\n"}],"position":{"start":{"line":101,"column":3,"offset":2648},"end":{"line":101,"column":52,"offset":2697}}},{"type":"text","value":"\n"}],"position":{"start":{"line":99,"column":1,"offset":2634},"end":{"line":102,"column":1,"offset":2698}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Leader","position":{"start":{"line":103,"column":3,"offset":2701},"end":{"line":103,"column":9,"offset":2707}}}],"position":{"start":{"line":103,"column":3,"offset":2701},"end":{"line":103,"column":9,"offset":2707}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Leader是负责给定分区的所有读取和写入的节点。每个分区都有一个服务器充当Leader","position":{"start":{"line":105,"column":6,"offset":2714},"end":{"line":105,"column":50,"offset":2758}}}],"position":{"start":{"line":105,"column":3,"offset":2711},"end":{"line":105,"column":50,"offset":2758}}},{"type":"text","value":"\n"}],"position":{"start":{"line":105,"column":3,"offset":2711},"end":{"line":105,"column":50,"offset":2758}}},{"type":"text","value":"\n"}],"position":{"start":{"line":103,"column":1,"offset":2699},"end":{"line":105,"column":50,"offset":2758}}},{"type":"text","value":"\n"}],"position":{"start":{"line":81,"column":1,"offset":2253},"end":{"line":105,"column":50,"offset":2758}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"https://kafka.apache.org/documentation/streams/"},"children":[{"type":"text","value":"Kafka Streams","position":{"start":{"line":107,"column":6,"offset":2765},"end":{"line":107,"column":19,"offset":2778}}}],"position":{"start":{"line":107,"column":5,"offset":2764},"end":{"line":107,"column":69,"offset":2828}}}],"position":{"start":{"line":107,"column":1,"offset":2760},"end":{"line":107,"column":69,"offset":2828}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"使用kafka streams 进行消息的发布、处理、消费，比较神奇的流式操作使用起来很爽，不能打断点进行debug，但是可以通过peek()方法来查看运行时变量的值。","position":{"start":{"line":109,"column":1,"offset":2830},"end":{"line":109,"column":85,"offset":2914}}}],"position":{"start":{"line":109,"column":1,"offset":2830},"end":{"line":109,"column":85,"offset":2914}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"Tip","position":{"start":{"line":111,"column":4,"offset":2919},"end":{"line":111,"column":7,"offset":2922}}}],"position":{"start":{"line":111,"column":1,"offset":2916},"end":{"line":111,"column":7,"offset":2922}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"eureka ribbon 负载均衡遇到的坑","position":{"start":{"line":113,"column":3,"offset":2926},"end":{"line":113,"column":25,"offset":2948}}}],"position":{"start":{"line":113,"column":3,"offset":2926},"end":{"line":113,"column":25,"offset":2948}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"服务下线时client会向eureka server 发送下线请求，服务端会把下线的客户端剔除，但是此时访问服务，依然会向已经下线的服务发送请求，抛出","position":{"start":{"line":114,"column":5,"offset":2953},"end":{"line":114,"column":80,"offset":3028}}},{"type":"raw","value":"<code class=\"language-text\">connect failed</code>","position":{"start":{"line":114,"column":80,"offset":3028},"end":{"line":114,"column":96,"offset":3044}}},{"type":"text","value":"异常 ，原因是客户端有缓存，默认30s刷新一次，缓存刷新后，再次访问才会返回","position":{"start":{"line":114,"column":96,"offset":3044},"end":{"line":114,"column":134,"offset":3082}}},{"type":"raw","value":"<code class=\"language-text\">no instance</code>","position":{"start":{"line":114,"column":134,"offset":3082},"end":{"line":114,"column":147,"offset":3095}}},{"type":"text","value":"异常信息。","position":{"start":{"line":114,"column":147,"offset":3095},"end":{"line":114,"column":152,"offset":3100}}}],"position":{"start":{"line":114,"column":3,"offset":2951},"end":{"line":114,"column":152,"offset":3100}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"解决方案暂时没有确定：","position":{"start":{"line":115,"column":5,"offset":3105},"end":{"line":115,"column":16,"offset":3116}}}],"position":{"start":{"line":115,"column":3,"offset":3103},"end":{"line":115,"column":16,"offset":3116}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"修改默认缓存的刷新时间（如果时间很短，频繁请求，担心eureka server 压力大扛不住）","position":{"start":{"line":116,"column":7,"offset":3123},"end":{"line":116,"column":54,"offset":3170}}}],"position":{"start":{"line":116,"column":5,"offset":3121},"end":{"line":116,"column":54,"offset":3170}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"单独调用下线接口（尝试调用之后发现，30s后client会重新向eureka注册）","position":{"start":{"line":117,"column":7,"offset":3177},"end":{"line":117,"column":48,"offset":3218}}}],"position":{"start":{"line":117,"column":5,"offset":3175},"end":{"line":117,"column":48,"offset":3218}}},{"type":"text","value":"\n"}],"position":{"start":{"line":114,"column":3,"offset":2951},"end":{"line":117,"column":48,"offset":3218}}},{"type":"text","value":"\n"}],"position":{"start":{"line":113,"column":1,"offset":2924},"end":{"line":118,"column":1,"offset":3219}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"复习 java 基础中的","position":{"start":{"line":119,"column":3,"offset":3222},"end":{"line":119,"column":15,"offset":3234}}},{"type":"raw","value":"<code class=\"language-text\">值传递</code>","position":{"start":{"line":119,"column":15,"offset":3234},"end":{"line":119,"column":20,"offset":3239}}}],"position":{"start":{"line":119,"column":3,"offset":3222},"end":{"line":119,"column":20,"offset":3239}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"java 中的参数传递都是","position":{"start":{"line":121,"column":5,"offset":3245},"end":{"line":121,"column":18,"offset":3258}}},{"type":"raw","value":"<code class=\"language-text\">值传递</code>","position":{"start":{"line":121,"column":18,"offset":3258},"end":{"line":121,"column":23,"offset":3263}}},{"type":"text","value":"，","position":{"start":{"line":121,"column":23,"offset":3263},"end":{"line":121,"column":24,"offset":3264}}},{"type":"raw","value":"<code class=\"language-text\">值</code>","position":{"start":{"line":121,"column":24,"offset":3264},"end":{"line":121,"column":27,"offset":3267}}},{"type":"text","value":"包括基本类型和对象的引用，基本类型值和对象的引用存放在JVM内存的","position":{"start":{"line":121,"column":27,"offset":3267},"end":{"line":121,"column":60,"offset":3300}}},{"type":"raw","value":"<code class=\"language-text\">栈内存</code>","position":{"start":{"line":121,"column":60,"offset":3300},"end":{"line":121,"column":65,"offset":3305}}},{"type":"text","value":"中，对象的实例本身是存放在","position":{"start":{"line":121,"column":65,"offset":3305},"end":{"line":121,"column":78,"offset":3318}}},{"type":"raw","value":"<code class=\"language-text\">堆内存</code>","position":{"start":{"line":121,"column":78,"offset":3318},"end":{"line":121,"column":83,"offset":3323}}},{"type":"text","value":"中，栈内存中的引用指向堆内存中的对象实例。","position":{"start":{"line":121,"column":83,"offset":3323},"end":{"line":121,"column":104,"offset":3344}}}],"position":{"start":{"line":121,"column":5,"offset":3245},"end":{"line":121,"column":104,"offset":3344}}},{"type":"text","value":"\n"}],"position":{"start":{"line":121,"column":3,"offset":3243},"end":{"line":122,"column":1,"offset":3345}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"传递基本类型值","position":{"start":{"line":123,"column":5,"offset":3350},"end":{"line":123,"column":12,"offset":3357}}}],"position":{"start":{"line":123,"column":5,"offset":3350},"end":{"line":123,"column":12,"offset":3357}}},{"type":"text","value":"\n"}],"position":{"start":{"line":123,"column":3,"offset":3348},"end":{"line":123,"column":12,"offset":3357}}},{"type":"text","value":"\n"}],"position":{"start":{"line":121,"column":3,"offset":3243},"end":{"line":123,"column":12,"offset":3357}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    i <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>  args<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">test</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 输出结果：0</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":125,"column":5,"offset":3363},"end":{"line":135,"column":8,"offset":3568}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"传递对象的引用","position":{"start":{"line":137,"column":5,"offset":3574},"end":{"line":137,"column":12,"offset":3581}}}],"position":{"start":{"line":137,"column":3,"offset":3572},"end":{"line":137,"column":12,"offset":3581}}},{"type":"text","value":"\n"}],"position":{"start":{"line":137,"column":3,"offset":3572},"end":{"line":137,"column":12,"offset":3581}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">User</span> user<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    user<span class=\"token punctuation\">.</span><span class=\"token function\">setName</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"jason\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>  args<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token class-name\">User</span> user <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">User</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"freda\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">test</span><span class=\"token punctuation\">(</span>user<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>user<span class=\"token punctuation\">.</span><span class=\"token function\">getName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 输出结果：jason</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":139,"column":5,"offset":3587},"end":{"line":149,"column":8,"offset":3852}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"上面两个例子应该比较直观了，java 的参数传递始终都是值传递，int 类型i始终不会被改变；User 类型的 user 是引用值，其指向的堆内存里的User实例是可以修改的。","position":{"start":{"line":151,"column":5,"offset":3858},"end":{"line":151,"column":93,"offset":3946}}}],"position":{"start":{"line":151,"column":3,"offset":3856},"end":{"line":151,"column":93,"offset":3946}}},{"type":"text","value":"\n"}],"position":{"start":{"line":151,"column":3,"offset":3856},"end":{"line":151,"column":93,"offset":3946}}},{"type":"text","value":"\n"}],"position":{"start":{"line":119,"column":1,"offset":3220},"end":{"line":151,"column":93,"offset":3946}}},{"type":"text","value":"\n"}],"position":{"start":{"line":113,"column":1,"offset":2924},"end":{"line":151,"column":93,"offset":3946}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"Share","position":{"start":{"line":153,"column":4,"offset":3951},"end":{"line":153,"column":9,"offset":3956}}}],"position":{"start":{"line":153,"column":1,"offset":3948},"end":{"line":153,"column":9,"offset":3956}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"https://book.douban.com/subject/1020644/"},"children":[{"type":"text","value":"金字塔原理","position":{"start":{"line":155,"column":2,"offset":3959},"end":{"line":155,"column":7,"offset":3964}}}],"position":{"start":{"line":155,"column":1,"offset":3958},"end":{"line":155,"column":50,"offset":4007}}}],"position":{"start":{"line":155,"column":1,"offset":3958},"end":{"line":155,"column":50,"offset":4007}}},{"type":"text","value":"\n"},{"type":"element","tagName":"blockquote","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"《金字塔原理》是一本讲解写作逻辑与思维逻辑的读物，全书分为四个部分。","position":{"start":{"line":157,"column":3,"offset":4011},"end":{"line":157,"column":37,"offset":4045}}}],"position":{"start":{"line":157,"column":3,"offset":4011},"end":{"line":157,"column":37,"offset":4045}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"第一篇主要对金字塔原理的概念进行了解释，介绍了如何利用这一原理构建基本的金字塔结构。目的是使读者理解和运用简单文书的写作技巧。","position":{"start":{"line":159,"column":3,"offset":4050},"end":{"line":159,"column":66,"offset":4113}}}],"position":{"start":{"line":159,"column":3,"offset":4050},"end":{"line":159,"column":66,"offset":4113}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"第二篇介绍了如何深入细致地把握思维的环节，以保证使用的语句能够真实地反映希望表达的思想要点。书中列举了许多实例，突出了强迫自己进行“冷静思维”对明确表达思想的重要性。","position":{"start":{"line":161,"column":3,"offset":4118},"end":{"line":161,"column":86,"offset":4201}}}],"position":{"start":{"line":161,"column":3,"offset":4118},"end":{"line":161,"column":86,"offset":4201}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"第三篇主要针对的对象是需要写研究分析报告的人士，以及需要对复杂的问题进行分析、提出结论供决策使用的人士。这一篇介绍了如何在解决问题过程中的不同阶段使用多种框架来组织分析过程，使写作者的思维在实际上进行了预先组织，从而能够更方便地应用金字塔原理。","position":{"start":{"line":163,"column":3,"offset":4206},"end":{"line":163,"column":125,"offset":4328}}}],"position":{"start":{"line":163,"column":3,"offset":4206},"end":{"line":163,"column":125,"offset":4328}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"第四篇介绍了一些演示技巧，能够写作者在以幻灯片等书面形式演示具有金字塔结构的思想时，能让读者或观众感受到金字塔结构的存在。","position":{"start":{"line":165,"column":3,"offset":4333},"end":{"line":165,"column":64,"offset":4394}}}],"position":{"start":{"line":165,"column":3,"offset":4333},"end":{"line":165,"column":64,"offset":4394}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"附有三个附录。附录一涉及的是分析法和科学法在解决问题过程中的区别；附录二列举了序言部分的各种常用写作模式；附录三是全书要点的详细提纲，突出了《金字塔原理》的关键概念和关键思维技巧，以便读者快速查阅。","position":{"start":{"line":167,"column":3,"offset":4399},"end":{"line":167,"column":102,"offset":4498}}}],"position":{"start":{"line":167,"column":3,"offset":4399},"end":{"line":167,"column":102,"offset":4498}}},{"type":"text","value":"\n"}],"position":{"start":{"line":157,"column":1,"offset":4009},"end":{"line":167,"column":102,"offset":4498}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"https://book.douban.com/subject/26948875/"},"children":[{"type":"text","value":"思维力：高效的系统思维","position":{"start":{"line":169,"column":2,"offset":4501},"end":{"line":169,"column":13,"offset":4512}}}],"position":{"start":{"line":169,"column":1,"offset":4500},"end":{"line":169,"column":57,"offset":4556}}}],"position":{"start":{"line":169,"column":1,"offset":4500},"end":{"line":169,"column":57,"offset":4556}}},{"type":"text","value":"\n"},{"type":"element","tagName":"blockquote","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"“真正有用”正是这本书不同于其它思维书籍之处！","position":{"start":{"line":171,"column":3,"offset":4560},"end":{"line":171,"column":26,"offset":4583}}}],"position":{"start":{"line":171,"column":3,"offset":4560},"end":{"line":171,"column":26,"offset":4583}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"你有没有遇到过以下窘境——分析时想不明白、表达时说不清楚、学习时学不快速？你想不想全面提升你的思维能力？你知道问题解决技巧和表达技巧有哪些吗？","position":{"start":{"line":173,"column":3,"offset":4588},"end":{"line":173,"column":74,"offset":4659}}}],"position":{"start":{"line":173,"column":3,"offset":4588},"end":{"line":173,"column":74,"offset":4659}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"此书中有你想知道的答案。","position":{"start":{"line":175,"column":3,"offset":4664},"end":{"line":175,"column":15,"offset":4676}}}],"position":{"start":{"line":175,"column":3,"offset":4664},"end":{"line":175,"column":15,"offset":4676}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"本书分为3个部分共10章，各章可自成体系地解决一个问题，同时整书又形成一套体系化的系统思维。","position":{"start":{"line":177,"column":3,"offset":4681},"end":{"line":177,"column":49,"offset":4727}}}],"position":{"start":{"line":177,"column":3,"offset":4681},"end":{"line":177,"column":49,"offset":4727}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"第一部分探秘了“框架”力量的根源。万事万物的本质其实是一个个的系统，而掌握了系统的“框架”也就把握了事物的本质。没有什么问题是不能利用框架解决的，如果一个不行，那就两个。","position":{"start":{"line":179,"column":3,"offset":4732},"end":{"line":179,"column":88,"offset":4817}}}],"position":{"start":{"line":179,"column":3,"offset":4732},"end":{"line":179,"column":88,"offset":4817}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"第二部分将运用“框架”解决问题分解为五个步骤——界定问题、构建框架、明晰关键、高效执行及检查调整，并精炼了相应的优秀思考方法和工具。此外，还传授了在有限时间、有限资源限制下高质量地解决问题的秘诀——“假设思考”。","position":{"start":{"line":181,"column":3,"offset":4822},"end":{"line":181,"column":109,"offset":4928}}}],"position":{"start":{"line":181,"column":3,"offset":4822},"end":{"line":181,"column":109,"offset":4928}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"第三部分传授如何运用“框架”有效表达。逐层递进地演示了自上而下表达的魅力，并用丰富的图表阐述了何为“形象化表达”。","position":{"start":{"line":183,"column":3,"offset":4933},"end":{"line":183,"column":60,"offset":4990}}}],"position":{"start":{"line":183,"column":3,"offset":4933},"end":{"line":183,"column":60,"offset":4990}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"对于想全面提升思维能力的读者，建议按照本书章节顺序阅读；对于迫切想寻求具体问题解决技巧或表达技巧的读者，也可以直接阅读相应章节。","position":{"start":{"line":185,"column":3,"offset":4995},"end":{"line":185,"column":67,"offset":5059}}}],"position":{"start":{"line":185,"column":3,"offset":4995},"end":{"line":185,"column":67,"offset":5059}}},{"type":"text","value":"\n"}],"position":{"start":{"line":171,"column":1,"offset":4558},"end":{"line":185,"column":67,"offset":5059}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"https://book.douban.com/subject/1013208/"},"children":[{"type":"text","value":"如何阅读一本书","position":{"start":{"line":187,"column":2,"offset":5062},"end":{"line":187,"column":9,"offset":5069}}}],"position":{"start":{"line":187,"column":1,"offset":5061},"end":{"line":187,"column":52,"offset":5112}}}],"position":{"start":{"line":187,"column":1,"offset":5061},"end":{"line":187,"column":52,"offset":5112}}},{"type":"text","value":"\n"},{"type":"element","tagName":"blockquote","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"每本书的封面之下都有一套自己的骨架，作为一个分析阅读的读者，责任就是要找出这个骨架。一本书出现在面前时，肌肉包着骨头，衣服包裹着肌肉，可说是盛装而来。读者用不着揭开它的外衣或是撕去它的肌肉来得到在柔软表皮下的那套骨架，但是一定要用一双X光般的透视眼来看这本书，因为那是了解一本书、掌握其骨架的基础。","position":{"start":{"line":189,"column":3,"offset":5116},"end":{"line":189,"column":152,"offset":5265}}}],"position":{"start":{"line":189,"column":3,"offset":5116},"end":{"line":189,"column":152,"offset":5265}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"《如何阅读一本书》初版于1940年，1972年大幅增订改写为新版。不懂阅读的人，初探阅读的人，读这本书可以少走冤枉路。对阅读有所体会的人，读这本书可以有更深的印证和领悟。","position":{"start":{"line":191,"column":3,"offset":5270},"end":{"line":191,"column":88,"offset":5355}}}],"position":{"start":{"line":191,"column":3,"offset":5270},"end":{"line":191,"column":88,"offset":5355}}},{"type":"text","value":"\n"}],"position":{"start":{"line":189,"column":1,"offset":5114},"end":{"line":191,"column":88,"offset":5355}}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":193,"column":1,"offset":5357}}}}