{"expireTime":9007200811184991000,"key":"transformer-remark-markdown-html-ast-3016834e4f710db1aaada01a11d2e2bb-gatsby-remark-imagesgatsby-remark-responsive-iframegatsby-remark-prismjsgatsby-remark-copy-linked-filesgatsby-remark-smartypants-","val":{"type":"root","children":[{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"Algorithm","position":{"start":{"line":2,"column":4,"offset":4},"end":{"line":2,"column":13,"offset":13}}}],"position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":13,"offset":13}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Median of Two Sorted Arrays","position":{"start":{"line":4,"column":5,"offset":19},"end":{"line":4,"column":32,"offset":46}}}],"position":{"start":{"line":4,"column":1,"offset":15},"end":{"line":4,"column":32,"offset":46}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">package</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>nocoder<span class=\"token punctuation\">.</span>leetcode<span class=\"token punctuation\">.</span>solution</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util</span><span class=\"token punctuation\">.</span><span class=\"token class-name\">Arrays</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">/**\n * 4. Median of Two Sorted Arrays\n * &lt;p>\n * There are two sorted arrays nums1 and nums2 of size m and n respectively.\n * &lt;p>\n * Find the median of the two sorted arrays. The overall run time complexity should be O(log (m+n)).\n * &lt;p>\n * You may assume nums1 and nums2 cannot be both empty.\n * &lt;p>\n * Example 1:\n * &lt;p>\n * nums1 = [1, 3]\n * nums2 = [2]\n * &lt;p>\n * The median is 2.0\n * &lt;p>\n * Example 2:\n * &lt;p>\n * nums1 = [1, 2]\n * nums2 = [3, 4]\n * &lt;p>\n * The median is (2 + 3)/2 = 2.5\n *\n * @author jason\n * @date 18/7/27.\n */</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">MedianofTwoSortedArrays</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">double</span> <span class=\"token function\">findMedianSortedArrays</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> nums1<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> nums2<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">int</span> m <span class=\"token operator\">=</span> nums1<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">int</span> n <span class=\"token operator\">=</span> nums2<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">// 创建一个新数组 a， 存放nums1和nums2的元素</span>\n        <span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> a <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span>m <span class=\"token operator\">+</span> n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> m<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            a<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> nums1<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> j <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;</span> n<span class=\"token punctuation\">;</span> j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            a<span class=\"token punctuation\">[</span>m <span class=\"token operator\">+</span> j<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> nums2<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token comment\">// 数组a排序</span>\n        <span class=\"token class-name\">Arrays</span><span class=\"token punctuation\">.</span><span class=\"token function\">sort</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">double</span> result<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">int</span> len <span class=\"token operator\">=</span> a<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>len <span class=\"token operator\">==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">return</span> a<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>len <span class=\"token operator\">==</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> a<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token number\">2.0</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>len <span class=\"token operator\">%</span> <span class=\"token number\">2</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token comment\">// 数组a的长度为偶数时，取中间的两个值，数组下标取 length/2 - 1, length/2</span>\n            result <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span>len <span class=\"token operator\">/</span> <span class=\"token number\">2</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">[</span>len <span class=\"token operator\">/</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token number\">2.0</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token comment\">// 数组a的长度为基数时，取最中间的一个值返回，数组下标取 length%2</span>\n            result <span class=\"token operator\">=</span> a<span class=\"token punctuation\">[</span><span class=\"token class-name\">Math</span><span class=\"token punctuation\">.</span><span class=\"token function\">round</span><span class=\"token punctuation\">(</span>len <span class=\"token operator\">/</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">return</span> result<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> nums1 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> nums2 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">{</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token number\">5</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">double</span> result <span class=\"token operator\">=</span> <span class=\"token function\">findMedianSortedArrays</span><span class=\"token punctuation\">(</span>nums1<span class=\"token punctuation\">,</span> nums2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":6,"column":1,"offset":48},"end":{"line":82,"column":4,"offset":1822}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"Review","position":{"start":{"line":84,"column":4,"offset":1827},"end":{"line":84,"column":10,"offset":1833}}}],"position":{"start":{"line":84,"column":1,"offset":1824},"end":{"line":84,"column":10,"offset":1833}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Docker for beginners","position":{"start":{"line":86,"column":5,"offset":1839},"end":{"line":86,"column":25,"offset":1859}}}],"position":{"start":{"line":86,"column":1,"offset":1835},"end":{"line":86,"column":25,"offset":1859}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"https://docker-curriculum.com/"},"children":[{"type":"text","value":"https://docker-curriculum.com/","position":{"start":{"line":87,"column":1,"offset":1860},"end":{"line":87,"column":31,"offset":1890}}}],"position":{"start":{"line":87,"column":1,"offset":1860},"end":{"line":87,"column":31,"offset":1890}}}],"position":{"start":{"line":87,"column":1,"offset":1860},"end":{"line":87,"column":31,"offset":1890}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"公司最近刚好在搞CI和CD，初步选择了Docker + Jenkins pipline 来配置自动化流程。这篇文章是耗子叔在极客时间专栏《程序员练级攻略（2018）：容器化和自动化运维》文中推荐的入门Docker的文章，对docker的基本概念和和入门操作讲的很到位，很适合跟着搭一遍环境初步感受一下docker。文章中对docker run、docker pull、 docker images、docker ps、docker rm命令都给出了示例，并根据Dockerfile来创建Docker镜像，演示了在AWS上怎么运行Docker应用、多容器的环境、Docker Network，Docker Compse等，使用Elastic Container 等。我在实际操作中也参考了《Docker Practice》、《第一本Docker书》，私有镜像仓库使用nexus3来搭建。跟着操作下来，对docker有了初步的认识。","position":{"start":{"line":89,"column":1,"offset":1892},"end":{"line":89,"column":415,"offset":2306}}}],"position":{"start":{"line":89,"column":1,"offset":1892},"end":{"line":89,"column":415,"offset":2306}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Best practices for writing Dockerfiles","position":{"start":{"line":91,"column":5,"offset":2312},"end":{"line":91,"column":43,"offset":2350}}}],"position":{"start":{"line":91,"column":1,"offset":2308},"end":{"line":91,"column":43,"offset":2350}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"https://docs.docker.com/develop/develop-images/dockerfile_best-practices/"},"children":[{"type":"text","value":"https://docs.docker.com/develop/develop-images/dockerfile_best-practices/","position":{"start":{"line":92,"column":1,"offset":2351},"end":{"line":92,"column":74,"offset":2424}}}],"position":{"start":{"line":92,"column":1,"offset":2351},"end":{"line":92,"column":74,"offset":2424}}},{"type":"text","value":"\n啃英文文章的速度还是非常慢，英文词汇量很小，边查词边理解内容，啃下来感觉还是很吃力，继续努力吧！","position":{"start":{"line":92,"column":74,"offset":2424},"end":{"line":93,"column":49,"offset":2473}}}],"position":{"start":{"line":92,"column":1,"offset":2351},"end":{"line":93,"column":49,"offset":2473}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Create ephemeral containers","position":{"start":{"line":94,"column":3,"offset":2476},"end":{"line":94,"column":30,"offset":2503}}}],"position":{"start":{"line":94,"column":1,"offset":2474},"end":{"line":94,"column":30,"offset":2503}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Understand build context","position":{"start":{"line":95,"column":3,"offset":2506},"end":{"line":95,"column":27,"offset":2530}}}],"position":{"start":{"line":95,"column":1,"offset":2504},"end":{"line":95,"column":27,"offset":2530}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Pipe Dockerfile through stdin","position":{"start":{"line":96,"column":3,"offset":2533},"end":{"line":96,"column":32,"offset":2562}}}],"position":{"start":{"line":96,"column":1,"offset":2531},"end":{"line":96,"column":32,"offset":2562}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Exclude with .dockerignore","position":{"start":{"line":97,"column":3,"offset":2565},"end":{"line":97,"column":29,"offset":2591}}}],"position":{"start":{"line":97,"column":1,"offset":2563},"end":{"line":97,"column":29,"offset":2591}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Use multi-stage builds","position":{"start":{"line":98,"column":3,"offset":2594},"end":{"line":98,"column":25,"offset":2616}}}],"position":{"start":{"line":98,"column":1,"offset":2592},"end":{"line":98,"column":25,"offset":2616}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Don’t install unnecessary packages","position":{"start":{"line":99,"column":3,"offset":2619},"end":{"line":99,"column":37,"offset":2653}}}],"position":{"start":{"line":99,"column":1,"offset":2617},"end":{"line":99,"column":37,"offset":2653}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Decouple applications","position":{"start":{"line":100,"column":3,"offset":2656},"end":{"line":100,"column":24,"offset":2677}}}],"position":{"start":{"line":100,"column":1,"offset":2654},"end":{"line":100,"column":24,"offset":2677}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Minimize the number of layers","position":{"start":{"line":101,"column":3,"offset":2680},"end":{"line":101,"column":32,"offset":2709}}}],"position":{"start":{"line":101,"column":1,"offset":2678},"end":{"line":101,"column":32,"offset":2709}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Sort multi-line arguments","position":{"start":{"line":102,"column":3,"offset":2712},"end":{"line":102,"column":28,"offset":2737}}}],"position":{"start":{"line":102,"column":1,"offset":2710},"end":{"line":102,"column":28,"offset":2737}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Leverage build cache","position":{"start":{"line":103,"column":3,"offset":2740},"end":{"line":103,"column":23,"offset":2760}}}],"position":{"start":{"line":103,"column":1,"offset":2738},"end":{"line":103,"column":23,"offset":2760}}},{"type":"text","value":"\n"}],"position":{"start":{"line":94,"column":1,"offset":2474},"end":{"line":103,"column":23,"offset":2760}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"Tip","position":{"start":{"line":105,"column":4,"offset":2765},"end":{"line":105,"column":7,"offset":2768}}}],"position":{"start":{"line":105,"column":1,"offset":2762},"end":{"line":105,"column":7,"offset":2768}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"Canal 找不到binlog问题分析","position":{"start":{"line":107,"column":4,"offset":2773},"end":{"line":107,"column":23,"offset":2792}}}],"position":{"start":{"line":107,"column":1,"offset":2770},"end":{"line":107,"column":23,"offset":2792}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"项目中使用了阿里的canal，主要用来实时往统计相关表里更新数据，使用的1.0.22版本，经常会抛出binlog找不到的异常，难过的是之前异常的log被误删，排查起来很吃力，最终决定先升级到1.0.24版本，观察一段时间看看情况。排查过程中也学习到了一些mysql bin log相关的知识。","position":{"start":{"line":108,"column":1,"offset":2793},"end":{"line":108,"column":147,"offset":2939}}}],"position":{"start":{"line":108,"column":1,"offset":2793},"end":{"line":108,"column":147,"offset":2939}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"https://github.com/alibaba/canal"},"children":[{"type":"text","value":"https://github.com/alibaba/canal","position":{"start":{"line":109,"column":3,"offset":2942},"end":{"line":109,"column":35,"offset":2974}}}],"position":{"start":{"line":109,"column":3,"offset":2942},"end":{"line":109,"column":35,"offset":2974}}}],"position":{"start":{"line":109,"column":1,"offset":2940},"end":{"line":109,"column":35,"offset":2974}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"canal模拟mysql slave的交互协议，伪装自己为mysql slave，向mysql master发送dump协议","position":{"start":{"line":110,"column":3,"offset":2977},"end":{"line":110,"column":65,"offset":3039}}}],"position":{"start":{"line":110,"column":1,"offset":2975},"end":{"line":110,"column":65,"offset":3039}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"mysql master收到dump请求，开始推送binary log给slave(也就是canal)","position":{"start":{"line":111,"column":3,"offset":3042},"end":{"line":111,"column":54,"offset":3093}}}],"position":{"start":{"line":111,"column":1,"offset":3040},"end":{"line":111,"column":54,"offset":3093}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"canal解析binary log对象(原始为byte流)","position":{"start":{"line":112,"column":3,"offset":3096},"end":{"line":112,"column":32,"offset":3125}}}],"position":{"start":{"line":112,"column":1,"offset":3094},"end":{"line":112,"column":32,"offset":3125}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"raw","value":"<code class=\"language-text\">meta.dat</code>","position":{"start":{"line":113,"column":3,"offset":3128},"end":{"line":113,"column":13,"offset":3138}}},{"type":"text","value":"中记录的是客户端最后一次","position":{"start":{"line":113,"column":13,"offset":3138},"end":{"line":113,"column":25,"offset":3150}}},{"type":"raw","value":"<code class=\"language-text\">ack</code>","position":{"start":{"line":113,"column":25,"offset":3150},"end":{"line":113,"column":30,"offset":3155}}},{"type":"text","value":"的binlog信息","position":{"start":{"line":113,"column":30,"offset":3155},"end":{"line":113,"column":39,"offset":3164}}}],"position":{"start":{"line":113,"column":1,"offset":3126},"end":{"line":113,"column":39,"offset":3164}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"如果删除了","position":{"start":{"line":114,"column":3,"offset":3167},"end":{"line":114,"column":8,"offset":3172}}},{"type":"raw","value":"<code class=\"language-text\">meta.dat</code>","position":{"start":{"line":114,"column":8,"offset":3172},"end":{"line":114,"column":18,"offset":3182}}},{"type":"text","value":"记录中对应的的binlog文件，并且此时重新启动canal server，会HY000抛异常，提示找不到对应的binlog，解决办法是删除","position":{"start":{"line":114,"column":18,"offset":3182},"end":{"line":114,"column":87,"offset":3251}}},{"type":"raw","value":"<code class=\"language-text\">meta.dat</code>","position":{"start":{"line":114,"column":87,"offset":3251},"end":{"line":114,"column":97,"offset":3261}}}],"position":{"start":{"line":114,"column":1,"offset":3165},"end":{"line":114,"column":97,"offset":3261}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"使用","position":{"start":{"line":115,"column":3,"offset":3264},"end":{"line":115,"column":5,"offset":3266}}},{"type":"raw","value":"<code class=\"language-text\">purge master logs before</code>","position":{"start":{"line":115,"column":5,"offset":3266},"end":{"line":115,"column":31,"offset":3292}}},{"type":"text","value":"语句无法删除当前正在使用的binlog","position":{"start":{"line":115,"column":31,"offset":3292},"end":{"line":115,"column":50,"offset":3311}}}],"position":{"start":{"line":115,"column":1,"offset":3262},"end":{"line":115,"column":50,"offset":3311}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"raw","value":"<code class=\"language-text\">reset master</code>","position":{"start":{"line":116,"column":3,"offset":3314},"end":{"line":116,"column":17,"offset":3328}}},{"type":"text","value":" 可以清空所有的binlog文件，并新生成一个从1开始计数的binlog文件","position":{"start":{"line":116,"column":17,"offset":3328},"end":{"line":116,"column":55,"offset":3366}}}],"position":{"start":{"line":116,"column":1,"offset":3312},"end":{"line":116,"column":55,"offset":3366}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Connection reset by peer","position":{"start":{"line":117,"column":3,"offset":3369},"end":{"line":117,"column":27,"offset":3393}}}],"position":{"start":{"line":117,"column":3,"offset":3369},"end":{"line":117,"column":27,"offset":3393}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"https://github.com/alibaba/otter/issues/244"},"children":[{"type":"text","value":"https://github.com/alibaba/otter/issues/244","position":{"start":{"line":118,"column":5,"offset":3398},"end":{"line":118,"column":48,"offset":3441}}}],"position":{"start":{"line":118,"column":5,"offset":3398},"end":{"line":118,"column":48,"offset":3441}}}],"position":{"start":{"line":118,"column":3,"offset":3396},"end":{"line":118,"column":48,"offset":3441}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"https://github.com/alibaba/canal/issues/297"},"children":[{"type":"text","value":"https://github.com/alibaba/canal/issues/297","position":{"start":{"line":119,"column":5,"offset":3446},"end":{"line":119,"column":48,"offset":3489}}}],"position":{"start":{"line":119,"column":5,"offset":3446},"end":{"line":119,"column":48,"offset":3489}}}],"position":{"start":{"line":119,"column":3,"offset":3444},"end":{"line":119,"column":48,"offset":3489}}},{"type":"text","value":"\n"}],"position":{"start":{"line":118,"column":3,"offset":3396},"end":{"line":119,"column":48,"offset":3489}}},{"type":"text","value":"\n"}],"position":{"start":{"line":117,"column":1,"offset":3367},"end":{"line":119,"column":48,"offset":3489}}},{"type":"text","value":"\n"}],"position":{"start":{"line":109,"column":1,"offset":2940},"end":{"line":119,"column":48,"offset":3489}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token comment\">-- 查看bin log</span>\n<span class=\"token keyword\">show</span> <span class=\"token keyword\">binary</span> logs<span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">-- 新生成一个binlog文件</span>\nflush logs<span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">-- 查看binlong清理时间</span>\n<span class=\"token keyword\">show</span> variables <span class=\"token operator\">like</span> <span class=\"token string\">'expire_logs_days'</span>\n\n<span class=\"token comment\">-- 删除指定日期之前的binlog</span>\n<span class=\"token keyword\">purge</span> master logs before<span class=\"token string\">'2018-07-25 13:29:59'</span><span class=\"token punctuation\">;</span></code></pre></div>","position":{"start":{"line":121,"column":1,"offset":3491},"end":{"line":133,"column":4,"offset":3686}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"Share","position":{"start":{"line":134,"column":4,"offset":3690},"end":{"line":134,"column":9,"offset":3695}}}],"position":{"start":{"line":134,"column":1,"offset":3687},"end":{"line":134,"column":9,"offset":3695}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"本周的 ","position":{"start":{"line":136,"column":1,"offset":3697},"end":{"line":136,"column":5,"offset":3701}}},{"type":"raw","value":"<code class=\"language-text\">Share</code>","position":{"start":{"line":136,"column":5,"offset":3701},"end":{"line":136,"column":12,"offset":3708}}},{"type":"text","value":" 聊一些跟技术本身不相关的吧，主题是日常学习时间的安排。","position":{"start":{"line":136,"column":12,"offset":3708},"end":{"line":136,"column":40,"offset":3736}}}],"position":{"start":{"line":136,"column":1,"offset":3697},"end":{"line":136,"column":40,"offset":3736}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"工作六年了，距离自己理想的技术水平还差的非常远，危机意识很重，接下来我聊聊我的日常学习。","position":{"start":{"line":138,"column":1,"offset":3738},"end":{"line":138,"column":45,"offset":3782}}}],"position":{"start":{"line":138,"column":1,"offset":3738},"end":{"line":138,"column":45,"offset":3782}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"对于我这个夜猫子型的人来说，早晨起床看书学习是一件很痛苦的事情，效率极低，所以很多时候是老婆孩子睡觉了以后，我再看书学习、写写程序，一般是1、2点睡觉，有时debug到3、4点。我很享受这种感觉，夜晚无干扰的coding，思路很清晰，效率很高，我初中背单词就是晚上背，然后第二天很自信的拿到高分的单词听写成绩，哈哈。","position":{"start":{"line":140,"column":1,"offset":3784},"end":{"line":140,"column":159,"offset":3942}}}],"position":{"start":{"line":140,"column":1,"offset":3784},"end":{"line":140,"column":159,"offset":3942}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"我家小孩刚刚10个月，双方父母都在工作也比较远，所以我媳妇儿全职带孩子，真的很累啊，更心疼我媳妇儿，没办法，终究要经历这一过程。下班回家陪我儿子玩，小孩睡的也晚，非得闹腾到11-12点才肯睡觉。之后的时间就可以任我嗨了，可是有的时候也困得要命，喝咖啡也不管用，扛不住就只能去睡了。","position":{"start":{"line":142,"column":1,"offset":3944},"end":{"line":142,"column":141,"offset":4084}}}],"position":{"start":{"line":142,"column":1,"offset":3944},"end":{"line":142,"column":141,"offset":4084}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"这几次的ARTS，我自己是很不满意的，因为连着两次都是短时间突击出来的，更像是在完成任务。我更希望能通过解决日常工作的问题和工作积累中就把Review、Tip、Share给完成，花2个小时写两道leetcode算法题、2个小时整理文档。为了能达到轻松完成ARTS，我修改了日常worklog的模板，把遇到的问题及解决办法也一并记录下来，包括查了哪些资料，链接也贴上去，供每周ARTS的内容参考。希望通过这份热忱和不断的坚持，不断的提高自己。","position":{"start":{"line":144,"column":1,"offset":4086},"end":{"line":144,"column":221,"offset":4306}}}],"position":{"start":{"line":144,"column":1,"offset":4086},"end":{"line":144,"column":221,"offset":4306}}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":145,"column":1,"offset":4307}}}}