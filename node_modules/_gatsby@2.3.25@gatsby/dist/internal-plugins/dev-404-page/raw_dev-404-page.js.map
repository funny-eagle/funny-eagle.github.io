{"version":3,"sources":["../../../src/internal-plugins/dev-404-page/raw_dev-404-page.js"],"names":["Dev404Page","React","Component","constructor","props","state","showCustom404","bind","setState","render","pathname","location","data","pagePaths","allSitePage","nodes","map","node","path","newFilePath","slice","custom404","length","pagePath","PropTypes","object","element","pagesQuery","graphql"],"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;AAEA,MAAMA,UAAN,SAAyBC,eAAMC,SAA/B,CAAyC;AAOvCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AAAEC,MAAAA,aAAa,EAAE;AAAjB,KAAb;AACA,SAAKA,aAAL,GAAqB,KAAKA,aAAL,CAAmBC,IAAnB,CAAwB,IAAxB,CAArB;AACD;;AAEDD,EAAAA,aAAa,GAAG;AACd,SAAKE,QAAL,CAAc;AAAEF,MAAAA,aAAa,EAAE;AAAjB,KAAd;AACD;;AAEDG,EAAAA,MAAM,GAAG;AAAA,UACCC,QADD,GACc,KAAKN,KAAL,CAAWO,QADzB,CACCD,QADD;AAAA,UAECE,IAFD,GAEU,KAAKR,KAFf,CAECQ,IAFD;AAGP,UAAMC,SAAS,GAAGD,IAAI,CAACE,WAAL,CAAiBC,KAAjB,CAAuBC,GAAvB,CAA2BC,IAAI,IAAIA,IAAI,CAACC,IAAxC,CAAlB;AACA,QAAIC,WAAJ;;AACA,QAAIT,QAAQ,KAAM,GAAlB,EAAsB;AACpBS,MAAAA,WAAW,GAAI,oBAAf;AACD,KAFD,MAEO,IAAIT,QAAQ,CAACU,KAAT,CAAe,CAAC,CAAhB,MAAwB,GAA5B,EAAgC;AACrCD,MAAAA,WAAW,GAAI,YAAWT,QAAQ,CAACU,KAAT,CAAe,CAAf,EAAkB,CAAC,CAAnB,CAAsB,KAAhD;AACD,KAFM,MAEA;AACLD,MAAAA,WAAW,GAAI,YAAWT,QAAS,KAAnC;AACD;;AAED,WAAO,KAAKL,KAAL,CAAWC,aAAX,GACL,KAAKF,KAAL,CAAWiB,SADN,GAGL,0CACE,0EADF,EAEE,wCACI,4BADJ,EAEE,2CAAOX,QAAP,CAFF,CAFF,EAMG,KAAKN,KAAL,CAAWiB,SAAX,GACC,wCACE;AAAQ,MAAA,OAAO,EAAE,KAAKf;AAAtB,iCADF,CADD,GAOC,wCACI,iHADJ,EAEE,8DAFF,MAbJ,EAkBE,iGAEI,GAFJ,EAGE,2CAAOa,WAAP,CAHF,EAII,GAJJ,yFAlBF,EA0BGN,SAAS,CAACS,MAAV,GAAmB,CAAnB,IACC,0CACE,mHADF,EAKE,oDAAYT,SAAS,CAACS,MAAtB,MALF,EAME,yCACGT,SAAS,CAACG,GAAV,CAAcO,QAAQ,IACrB;AAAI,MAAA,GAAG,EAAEA;AAAT,OACE,6BAAC,YAAD;AAAM,MAAA,EAAE,EAAEA;AAAV,OAAqBA,QAArB,CADF,CADD,CADH,CANF,CA3BJ,CAHF;AA+CD;;AA7EsC;;8BAAnCvB,U,eACe;AACjBY,EAAAA,IAAI,EAAEY,mBAAUC,MADC;AAEjBJ,EAAAA,SAAS,EAAEG,mBAAUE,OAFJ;AAGjBf,EAAAA,QAAQ,EAAEa,mBAAUC;AAHH,C;eA+ENzB,U;;AAER,MAAM2B,UAAU,GAAGC,eAAQ;;;;;;;;CAA3B","sourcesContent":["import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { graphql, Link } from \"gatsby\"\n\nclass Dev404Page extends React.Component {\n  static propTypes = {\n    data: PropTypes.object,\n    custom404: PropTypes.element,\n    location: PropTypes.object,\n  }\n\n  constructor(props) {\n    super(props)\n    this.state = { showCustom404: false }\n    this.showCustom404 = this.showCustom404.bind(this)\n  }\n\n  showCustom404() {\n    this.setState({ showCustom404: true })\n  }\n\n  render() {\n    const { pathname } = this.props.location\n    const { data } = this.props\n    const pagePaths = data.allSitePage.nodes.map(node => node.path)\n    let newFilePath\n    if (pathname === `/`) {\n      newFilePath = `src/pages/index.js`\n    } else if (pathname.slice(-1) === `/`) {\n      newFilePath = `src/pages${pathname.slice(0, -1)}.js`\n    } else {\n      newFilePath = `src/pages${pathname}.js`\n    }\n\n    return this.state.showCustom404 ? (\n      this.props.custom404\n    ) : (\n      <div>\n        <h1>Gatsby.js development 404 page</h1>\n        <p>\n          {`There's not a page yet at `}\n          <code>{pathname}</code>\n        </p>\n        {this.props.custom404 ? (\n          <p>\n            <button onClick={this.showCustom404}>\n              Preview custom 404 page\n            </button>\n          </p>\n        ) : (\n          <p>\n            {`A custom 404 page wasn't detected - if you would like to add one, create a component in your site directory at `}\n            <code>src/pages/404.js</code>.\n          </p>\n        )}\n        <p>\n          Create a React.js component in your site directory at\n          {` `}\n          <code>{newFilePath}</code>\n          {` `}\n          and this page will automatically refresh to show the new page\n          component you created.\n        </p>\n        {pagePaths.length > 0 && (\n          <div>\n            <p>\n              If you were trying to reach another page, perhaps you can find it\n              below.\n            </p>\n            <h2>Pages ({pagePaths.length})</h2>\n            <ul>\n              {pagePaths.map(pagePath => (\n                <li key={pagePath}>\n                  <Link to={pagePath}>{pagePath}</Link>\n                </li>\n              ))}\n            </ul>\n          </div>\n        )}\n      </div>\n    )\n  }\n}\n\nexport default Dev404Page\n\nexport const pagesQuery = graphql`\n  query PagesQuery {\n    allSitePage(filter: { path: { ne: \"/dev-404-page/\" } }) {\n      nodes {\n        path\n      }\n    }\n  }\n`\n"],"file":"raw_dev-404-page.js"}