{"version":3,"sources":["../../src/query/pages-writer.js"],"names":["_","require","fs","crypto","store","emitter","lastHash","writePages","bootstrapFinished","getState","program","jsonDataPaths","pages","values","pagesComponentDependencies","pagesData","matchPaths","forEach","path","matchPath","componentChunkName","jsonName","pageComponentsChunkNames","push","sortBy","p","split","length","value","newHash","createHash","update","JSON","stringify","digest","Promise","resolve","components","component","uniqBy","c","syncRequires","map","join","asyncRequires","directory","writeAndMove","file","data","destination","tmp","Date","now","writeFile","then","move","overwrite","result","all","dataPaths","toPairs","fromPairs","exports","resetLastHash","debouncedWritePages","debounce","leading","on"],"mappings":"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","sourcesContent":["const _ = require(`lodash`)\nconst fs = require(`fs-extra`)\nconst crypto = require(`crypto`)\n\nconst { store, emitter } = require(`../redux/`)\n\nimport { joinPath } from \"../utils/path\"\n\nlet lastHash = null\n\n// Write out pages information.\nconst writePages = async () => {\n  bootstrapFinished = true\n  let { program, jsonDataPaths, pages } = store.getState()\n  pages = [...pages.values()]\n\n  const pagesComponentDependencies = {}\n\n  // Write out pages.json\n  let pagesData = []\n  let matchPaths = []\n  pages.forEach(({ path, matchPath, componentChunkName, jsonName }) => {\n    const pageComponentsChunkNames = {\n      componentChunkName,\n    }\n\n    if (program._[0] === `develop`) {\n      pagesComponentDependencies[path] = pageComponentsChunkNames\n    }\n\n    pagesData.push({\n      ...pageComponentsChunkNames,\n      jsonName,\n      path,\n      matchPath,\n    })\n\n    if (matchPath) {\n      matchPaths[matchPath] = path\n    }\n  })\n\n  pagesData = _(pagesData)\n    // Ensure pages keep the same sorting through builds.\n    // Pages without matchPath come first, then pages with matchPath,\n    // where more specific patterns come before less specific patterns.\n    // This ensures explicit routes will match before general.\n    // Specificity is inferred from number of path segments.\n    .sortBy(\n      p =>\n        `${p.matchPath ? 9999 - p.matchPath.split(`/`).length : `0000`}${\n          p.path\n        }`\n    )\n    .value()\n  const newHash = crypto\n    .createHash(`md5`)\n    .update(JSON.stringify(pagesComponentDependencies))\n    .digest(`hex`)\n\n  if (newHash === lastHash) {\n    // components didn't change - no need to rewrite pages.json\n    return Promise.resolve()\n  }\n\n  lastHash = newHash\n\n  // Get list of components, and json files.\n  let components = []\n  pages.forEach(p => {\n    components.push({\n      componentChunkName: p.componentChunkName,\n      component: p.component,\n    })\n  })\n\n  components = _.uniqBy(components, c => c.componentChunkName)\n\n  // Create file with sync requires of components/json files.\n  let syncRequires = `const { hot } = require(\"react-hot-loader/root\")\n\n// prefer default export if available\nconst preferDefault = m => m && m.default || m\n\\n\\n`\n  syncRequires += `exports.components = {\\n${components\n    .map(\n      c =>\n        `  \"${c.componentChunkName}\": hot(preferDefault(require(\"${joinPath(\n          c.component\n        )}\")))`\n    )\n    .join(`,\\n`)}\n}\\n\\n`\n\n  // Create file with async requires of components/json files.\n  let asyncRequires = `// prefer default export if available\nconst preferDefault = m => m && m.default || m\n\\n`\n  asyncRequires += `exports.components = {\\n${components\n    .map(\n      c =>\n        `  \"${c.componentChunkName}\": () => import(\"${joinPath(\n          c.component\n        )}\" /* webpackChunkName: \"${c.componentChunkName}\" */)`\n    )\n    .join(`,\\n`)}\n}\\n\\n`\n\n  asyncRequires += `exports.data = () => import(/* webpackChunkName: \"pages-manifest\" */ \"${joinPath(\n    program.directory,\n    `.cache`,\n    `data.json`\n  )}\")\\n\\n`\n\n  const writeAndMove = (file, data) => {\n    const destination = joinPath(program.directory, `.cache`, file)\n    const tmp = `${destination}.${Date.now()}`\n    return fs\n      .writeFile(tmp, data)\n      .then(() => fs.move(tmp, destination, { overwrite: true }))\n  }\n\n  const result = await Promise.all([\n    writeAndMove(`pages.json`, JSON.stringify(pagesData, null, 4)),\n    writeAndMove(`sync-requires.js`, syncRequires),\n    writeAndMove(`async-requires.js`, asyncRequires),\n    writeAndMove(`match-paths.json`, JSON.stringify(matchPaths, null, 4)),\n    writeAndMove(\n      `data.json`,\n      JSON.stringify({\n        pages: pagesData,\n        // Sort dataPaths by keys to ensure keeping the same\n        // sorting through builds\n        dataPaths: _(jsonDataPaths)\n          .toPairs()\n          .sortBy(0)\n          .fromPairs()\n          .value(),\n      })\n    ),\n  ])\n\n  return result\n}\n\nexports.writePages = writePages\n\nconst resetLastHash = () => {\n  lastHash = null\n}\n\nexports.resetLastHash = resetLastHash\n\nlet bootstrapFinished = false\nconst debouncedWritePages = _.debounce(\n  () => {\n    // Don't write pages again until bootstrap has finished.\n    if (bootstrapFinished) {\n      writePages()\n    }\n  },\n  500,\n  { leading: true }\n)\nemitter.on(`CREATE_PAGE`, () => {\n  // Ignore CREATE_PAGE until bootstrap is finished\n  // as this is called many many times during bootstrap and\n  // we can ignore them until CREATE_PAGE_END is called.\n  //\n  // After bootstrap, we need to listen for this as stateful page\n  // creators e.g. the plugin \"gatsby-plugin-page-creator\"\n  // calls createPage directly so CREATE_PAGE_END won't get fired.\n  if (bootstrapFinished) {\n    debouncedWritePages()\n  }\n})\n\nemitter.on(`CREATE_PAGE_END`, () => {\n  debouncedWritePages()\n})\nemitter.on(`DELETE_PAGE`, () => {\n  debouncedWritePages()\n})\nemitter.on(`DELETE_PAGE_BY_PATH`, () => {\n  debouncedWritePages()\n})\n"],"file":"pages-writer.js"}