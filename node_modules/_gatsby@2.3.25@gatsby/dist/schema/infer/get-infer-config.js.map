{"version":3,"sources":["../../../src/schema/infer/get-infer-config.js"],"names":["DEFAULT_INFER_CONFIG","infer","addDefaultResolvers","getInferConfig","typeComposer","hasExtension","getExtension","module","exports"],"mappings":";;AAOA,MAAMA,oBAAiC,GAAG;AACxCC,EAAAA,KAAK,EAAE,IADiC;AAExCC,EAAAA,mBAAmB,EAAE,IAFmB,CAK1C;;AAL0C,CAA1C;;AAMA,MAAMC,cAEU,GAAGC,YAAY,IAAI;AACjC,SAAO;AACLH,IAAAA,KAAK,EAAEG,YAAY,CAACC,YAAb,CAA2B,OAA3B,IACHD,YAAY,CAACE,YAAb,CAA2B,OAA3B,CADG,GAEHN,oBAAoB,CAACC,KAHpB;AAILC,IAAAA,mBAAmB,EAAEE,YAAY,CAACC,YAAb,CAA2B,qBAA3B,IACjBD,YAAY,CAACE,YAAb,CAA2B,qBAA3B,CADiB,GAEjBN,oBAAoB,CAACE;AANpB,GAAP;AAQD,CAXD;;AAaAK,MAAM,CAACC,OAAP,GAAiBL,cAAjB","sourcesContent":["// @flow\n\nexport interface InferConfig {\n  infer: boolean;\n  addDefaultResolvers: boolean;\n}\n\nconst DEFAULT_INFER_CONFIG: InferConfig = {\n  infer: true,\n  addDefaultResolvers: true,\n}\n\n// Get inferance config from type directives\nconst getInferConfig: (\n  typeComposer: TypeComposer\n) => InferConfig = typeComposer => {\n  return {\n    infer: typeComposer.hasExtension(`infer`)\n      ? typeComposer.getExtension(`infer`)\n      : DEFAULT_INFER_CONFIG.infer,\n    addDefaultResolvers: typeComposer.hasExtension(`addDefaultResolvers`)\n      ? typeComposer.getExtension(`addDefaultResolvers`)\n      : DEFAULT_INFER_CONFIG.addDefaultResolvers,\n  }\n}\n\nmodule.exports = getInferConfig\n"],"file":"get-infer-config.js"}