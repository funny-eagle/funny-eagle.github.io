{"version":3,"sources":["../../src/commands/build-html.js"],"names":["webpack","require","fs","webpackConfig","createErrorFromString","renderHTMLQueue","telemetry","runWebpack","compilerConfig","Promise","resolve","reject","run","err","stats","doBuildRenderer","program","directory","outputFile","hasErrors","webpackErrors","toJson","errors","filter","Boolean","error","length","Error","toString","buildRenderer","stage","config","deleteRenderer","rendererPath","remove","e","doBuildPages","pagePaths","activity","decorateEvent","siteMeasurements","pagesCount","prettyError","stack","context","buildPages","module","exports"],"mappings":"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","sourcesContent":["/* @flow */\nconst webpack = require(`webpack`)\nconst fs = require(`fs-extra`)\n\nconst webpackConfig = require(`../utils/webpack.config`)\nconst { createErrorFromString } = require(`gatsby-cli/lib/reporter/errors`)\nconst renderHTMLQueue = require(`../utils/html-renderer-queue`)\nconst telemetry = require(`gatsby-telemetry`)\n\nconst runWebpack = compilerConfig =>\n  new Promise((resolve, reject) => {\n    webpack(compilerConfig).run((err, stats) => {\n      if (err) {\n        reject(err)\n      } else {\n        resolve(stats)\n      }\n    })\n  })\n\nconst doBuildRenderer = async (program, webpackConfig) => {\n  const { directory } = program\n  const stats = await runWebpack(webpackConfig)\n  // render-page.js is hard coded in webpack.config\n  const outputFile = `${directory}/public/render-page.js`\n  if (stats.hasErrors()) {\n    let webpackErrors = stats.toJson().errors.filter(Boolean)\n    const error = webpackErrors.length\n      ? createErrorFromString(webpackErrors[0], `${outputFile}.map`)\n      : new Error(\n          `There was an issue while building the site: ` +\n            `\\n\\n${stats.toString()}`\n        )\n    throw error\n  }\n  return outputFile\n}\n\nconst buildRenderer = async (program, stage) => {\n  const { directory } = program\n  const config = await webpackConfig(program, directory, stage, null)\n  return await doBuildRenderer(program, config)\n}\n\nconst deleteRenderer = async rendererPath => {\n  try {\n    await fs.remove(rendererPath)\n    await fs.remove(`${rendererPath}.map`)\n  } catch (e) {\n    // This function will fail on Windows with no further consequences.\n  }\n}\n\nconst doBuildPages = async ({ rendererPath, pagePaths, activity }) => {\n  telemetry.decorateEvent(`BUILD_END`, {\n    siteMeasurements: { pagesCount: pagePaths.length },\n  })\n\n  try {\n    await renderHTMLQueue(rendererPath, pagePaths, activity)\n  } catch (e) {\n    const prettyError = createErrorFromString(e.stack, `${rendererPath}.map`)\n    prettyError.context = e.context\n    throw prettyError\n  }\n}\n\nconst buildPages = async ({ program, stage, pagePaths, activity }) => {\n  const rendererPath = await buildRenderer(program, stage)\n  await doBuildPages({ rendererPath, pagePaths, activity })\n  await deleteRenderer(rendererPath)\n}\n\nmodule.exports = {\n  buildPages,\n}\n"],"file":"build-html.js"}