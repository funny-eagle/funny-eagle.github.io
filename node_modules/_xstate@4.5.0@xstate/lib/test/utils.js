"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var chai_1 = require("chai");
var lib_1 = require("../lib");
function testMultiTransition(machine, fromState, eventTypes) {
    var resultState = eventTypes
        .split(/,\s?/)
        .reduce(function (state, eventType) {
        if (typeof state === 'string' && state[0] === '{') {
            state = JSON.parse(state);
        }
        var nextState = machine.transition(state, eventType);
        return nextState;
    }, fromState);
    return resultState;
}
exports.testMultiTransition = testMultiTransition;
function testAll(machine, expected) {
    Object.keys(expected).forEach(function (fromState) {
        Object.keys(expected[fromState]).forEach(function (eventTypes) {
            var toState = expected[fromState][eventTypes];
            it("should go from " + fromState + " to " + JSON.stringify(toState) + " on " + eventTypes, function () {
                var resultState = testMultiTransition(machine, fromState, eventTypes);
                if (toState === undefined) {
                    // undefined means that the state didn't transition
                    chai_1.assert.isEmpty(resultState.actions);
                    chai_1.assert.isFalse(resultState.changed);
                }
                else if (typeof toState === 'string') {
                    chai_1.assert.ok(lib_1.matchesState(toState, resultState.value), JSON.stringify(resultState.value) + " does not match " + toState);
                }
                else {
                    chai_1.assert.deepEqual(resultState.value, toState);
                }
            });
        });
    });
}
exports.testAll = testAll;
