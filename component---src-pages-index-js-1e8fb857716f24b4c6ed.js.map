{"version":3,"file":"component---src-pages-index-js-1e8fb857716f24b4c6ed.js","mappings":"mJAqDA,IA1CYA,KAAO,IAADC,EAAAC,EAChB,MAAMC,GAAOC,EAAAA,EAAAA,gBAAe,cAiBtBC,EAA+B,QAAzBJ,EAAGE,EAAKG,KAAKC,oBAAY,IAAAN,OAAA,EAAtBA,EAAwBI,OACF,QAAzBH,EAAGC,EAAKG,KAAKC,oBAAY,IAAAL,GAAtBA,EAAwBM,OAEvC,OACEC,EAAAA,cAAA,OAAKC,UAAU,OACbD,EAAAA,cAACE,EAAAA,EAAW,CACVD,UAAU,aACVE,OAAO,QACPC,QAAS,CAAC,OAAQ,OAAQ,QAC1BC,IAAI,4BACJC,MAAO,GACPC,OAAQ,GACRC,QAAS,GACTC,IAAI,kBAAiBC,YAAAC,EAAA,SAEtBf,aAAM,EAANA,EAAQgB,OACPZ,EAAAA,cAAA,SACEA,EAAAA,cAAA,cAASJ,EAAOgB,MAAc,IAACZ,EAAAA,cAAA,WAAK,KAAEJ,aAAM,EAANA,EAAQiB,UAAW,MAGzD,C,uHCcV,UAxDkBC,IAAyB,IAADtB,EAAA,IAAvB,KAAEE,EAAI,SAAEqB,GAAUD,EACnC,MAAME,GAAkC,QAAtBxB,EAAAE,EAAKG,KAAKC,oBAAY,IAAAN,OAAA,EAAtBA,EAAwByB,QAAK,QACzCC,EAAQxB,EAAKyB,kBAAkBC,MAErC,OAAqB,IAAjBF,EAAMG,OAENrB,EAAAA,cAACsB,EAAAA,EAAM,CAACP,SAAUA,EAAUE,MAAOD,GACjChB,EAAAA,cAACT,EAAAA,EAAG,MACJS,EAAAA,cAAA,SAAG,8JAUPA,EAAAA,cAACsB,EAAAA,EAAM,CAACP,SAAUA,EAAUE,MAAOD,GACjChB,EAAAA,cAACT,EAAAA,EAAG,MACJS,EAAAA,cAAA,MAAIuB,MAAO,CAAEC,UAAU,SACpBN,EAAMO,KAAIC,IACT,MAAMT,EAAQS,EAAKC,YAAYV,OAASS,EAAKE,OAAOC,KAEpD,OACE7B,EAAAA,cAAA,MAAI8B,IAAKJ,EAAKE,OAAOC,MACnB7B,EAAAA,cAAA,WACEC,UAAU,iBACV8B,WAAS,EACTC,SAAS,6BAEThC,EAAAA,cAAA,cACEA,EAAAA,cAAA,UACEA,EAAAA,cAACiC,EAAAA,KAAI,CAACC,GAAIR,EAAKE,OAAOC,KAAMM,SAAS,OACnCnC,EAAAA,cAAA,QAAMmC,SAAS,YAAYlB,KAG/BjB,EAAAA,cAAA,aAAQ0B,EAAKC,YAAYS,OAE3BpC,EAAAA,cAAA,eACEA,EAAAA,cAAA,KACEqC,wBAAyB,CACvBC,OAAQZ,EAAKC,YAAYY,aAAeb,EAAKc,SAE/CL,SAAS,kBAIZ,KAIJ,EAWN,MAAMM,EAAOA,IAAMzC,EAAAA,cAAC0C,EAAAA,EAAG,CAACzB,MAAM,c","sources":["webpack://nocoder-blog/./src/components/bio.js","webpack://nocoder-blog/./src/pages/index.js"],"sourcesContent":["/**\n * Bio component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\n */\n\nimport * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport { StaticImage } from \"gatsby-plugin-image\"\n\nconst Bio = () => {\n  const data = useStaticQuery(graphql`\n    query BioQuery {\n      site {\n        siteMetadata {\n          author {\n            name\n            summary\n          }\n          social {\n            twitter\n          }\n        }\n      }\n    }\n  `)\n\n  // Set these values by editing \"siteMetadata\" in gatsby-config.js\n  const author = data.site.siteMetadata?.author\n  const social = data.site.siteMetadata?.social\n\n  return (\n    <div className=\"bio\">\n      <StaticImage\n        className=\"bio-avatar\"\n        layout=\"fixed\"\n        formats={[\"auto\", \"webp\", \"avif\"]}\n        src=\"../images/profile-pic.png\"\n        width={50}\n        height={50}\n        quality={95}\n        alt=\"Profile picture\"\n      />\n      {author?.name && (\n        <p>\n          <strong>{author.name}</strong> <br/> {author?.summary || null}\n        </p>\n      )}\n    </div>\n  )\n}\n\nexport default Bio\n","import * as React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Bio from \"../components/bio\"\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\n\nconst BlogIndex = ({ data, location }) => {\n  const siteTitle = data.site.siteMetadata?.title || `Title`\n  const posts = data.allMarkdownRemark.nodes\n\n  if (posts.length === 0) {\n    return (\n      <Layout location={location} title={siteTitle}>\n        <Bio />\n        <p>\n          No blog posts found. Add markdown posts to \"content/blog\" (or the\n          directory you specified for the \"gatsby-source-filesystem\" plugin in\n          gatsby-config.js).\n        </p>\n      </Layout>\n    )\n  }\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <Bio />\n      <ol style={{ listStyle: `none` }}>\n        {posts.map(post => {\n          const title = post.frontmatter.title || post.fields.slug\n\n          return (\n            <li key={post.fields.slug}>\n              <article\n                className=\"post-list-item\"\n                itemScope\n                itemType=\"http://schema.org/Article\"\n              >\n                <header>\n                  <h2>\n                    <Link to={post.fields.slug} itemProp=\"url\">\n                      <span itemProp=\"headline\">{title}</span>\n                    </Link>\n                  </h2>\n                  <small>{post.frontmatter.date}</small>\n                </header>\n                <section>\n                  <p\n                    dangerouslySetInnerHTML={{\n                      __html: post.frontmatter.description || post.excerpt,\n                    }}\n                    itemProp=\"description\"\n                  />\n                </section>\n              </article>\n            </li>\n          )\n        })}\n      </ol>\n    </Layout>\n  )\n}\n\nexport default BlogIndex\n\n/**\n * Head export to define metadata for the page\n *\n * See: https://www.gatsbyjs.com/docs/reference/built-in-components/gatsby-head/\n */\nexport const Head = () => <Seo title=\"Jason Yang\" />\n\nexport const pageQuery = graphql`\n  {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(sort: { frontmatter: { date: DESC } }) {\n      nodes {\n        excerpt\n        fields {\n          slug\n        }\n        frontmatter {\n          date(formatString: \"YYYY-MM-DD\")\n          title\n          description\n        }\n      }\n    }\n  }\n`\n"],"names":["Bio","_data$site$siteMetada","_data$site$siteMetada2","data","useStaticQuery","author","site","siteMetadata","social","React","className","StaticImage","layout","formats","src","width","height","quality","alt","__imageData","require","name","summary","_ref","location","siteTitle","title","posts","allMarkdownRemark","nodes","length","Layout","style","listStyle","map","post","frontmatter","fields","slug","key","itemScope","itemType","Link","to","itemProp","date","dangerouslySetInnerHTML","__html","description","excerpt","Head","Seo"],"sourceRoot":""}