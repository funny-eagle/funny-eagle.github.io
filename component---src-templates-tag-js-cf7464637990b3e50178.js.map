{"version":3,"file":"component---src-templates-tag-js-cf7464637990b3e50178.js","mappings":"mMAGA,IACqBA,EAAI,SAAAC,GAAA,SAAAD,IAAA,OAAAC,EAAAC,MAAA,KAAAC,YAAA,KAiBtB,OAjBsBC,EAAAA,EAAAA,GAAAJ,EAAAC,GAAAD,EAAAK,UACvBC,OAAA,WACE,OACEC,EAAAA,EAAAA,KAAA,OACEC,UACE,aAAwC,WAAzBC,KAAKC,MAAMC,UAAyB,SAAW,OAC/DC,SAGAC,EAAAA,GAAKC,KAAKC,IACTC,EAAAA,EAAAA,MAAA,KAAGC,OAAQF,EAAKE,OAAQC,KAAMH,EAAKG,KAAKN,SAAA,EACtCL,EAAAA,EAAAA,KAAA,KAAGC,UAAW,iBAAmBO,EAAKI,OACrCJ,EAAKK,OAFsCL,EAAKK,SAO3D,EAACpB,CAAA,CAjBsB,CAASqB,EAAAA,WCE9BC,EAAc,CAChBC,aAAc,QAIhB,MAAMC,EAAuB,CAC3BC,UAAW,QACXC,QAAS,OACTC,cAAe,UAIXC,EAAmB,CACvBC,SAAU,EACVC,MAAO,QAGT,IACMC,EAAM,SAAAC,GAAA,SAAAD,IAAA,QAAAE,EAAAC,EAAA/B,UAAAgC,OAAAC,EAAA,IAAAC,MAAAH,GAAAI,EAAA,EAAAA,EAAAJ,EAAAI,IAAAF,EAAAE,GAAAnC,UAAAmC,GAmET,OAnESL,EAAAD,EAAAO,KAAArC,MAAA8B,EAAA,OAAAQ,OAAAJ,KAAA,MAEVK,MAAQ,CACNC,WAAW,EACXC,QAAS,GACTC,UAAW,GACXC,KAAM,GACNC,KAAM,GACNC,MAAO,GACPC,KAAM,0BAeRf,EACAgB,SAAYC,IACVC,aAAaC,QAAQ,QAAS,QAC9BC,SAASC,gBAAgB9C,UAAY,aACrCyB,EAAKsB,SAAS,CACZR,MAAO,QACP,EAGJd,EACAuB,gBAAkB,KAChBvB,EAAKsB,SAAS,CACZb,WAAYT,EAAKQ,MAAMC,WACvB,EAGJT,EACAwB,OAAUC,IACRzB,EAAKsB,SAAS,CACZZ,QAASe,EAAEzC,OAAO0C,OAClB,EAGJ1B,EACA2B,OAAS,KACPC,OAAOC,KACL,uDACE7B,EAAKQ,MAAME,QACd,EAGHV,EACA8B,WAAcC,IACZ,MAAMC,EAAOD,EAAS,IAEtB,MAAM,IADME,KAAKC,MAAMF,EAAO,GAAK,GAAK,IAC1B,MAGhBhC,EACAmC,YAAeV,IACK,KAAdA,EAAEW,SACJpC,EAAK2B,QACP,EACD3B,CAAA,EAnES7B,EAAAA,EAAAA,GAAA2B,EAAAC,GAmET,IAAAsC,EAAAvC,EAAA1B,UAyGA,OAhKDiE,EACAC,kBAAA,WAEE9D,KAAKwC,SAAS,QAEdxC,KAAK8C,SAAS,CACZR,MAAO,OACPF,MAAM,IAAI2B,MAAOC,cACjBzB,KAAM,0BAEV,EAACsB,EA+CDhE,OAAA,WACE,MAAM,UAAEoC,EAAS,KAAEI,EAAI,KAAED,EAAI,MAAEE,EAAK,KAAGC,GAAQvC,KAAKgC,OAC9C,SAAEiC,EAAQ,aAAEC,EAAY,SAAE/D,EAAQ,MAAEgE,EAAK,UAAEpE,GAAcC,KAAKC,MAG9DmE,GACJ7D,EAAAA,EAAAA,MAAA,OAAAJ,SAAA,EACEL,EAAAA,EAAAA,KAACuE,EAAAA,GAAI,CACHC,MAAO,CACLC,UAAW,OACXC,eAAgB,OAChBC,WAAY,KAEd1E,UAAU,UACV2E,GAAI,IAAIvE,UAERL,EAAAA,EAAAA,KAAA,QAAMC,UAAU,cAAaI,SAAEwE,EAAAA,OAGhCV,GACCnE,EAAAA,EAAAA,KAAA,OAAKC,UAAU,YAAWI,SACvB,IAAM8D,IAEP,QAOR,OACE1D,EAAAA,EAAAA,MAAA,OAAKR,UAAWA,EAAWuE,MAAOvD,EAAqBZ,SAAA,EACrDI,EAAAA,EAAAA,MAAA,OAAKR,UAAU,WAAWuE,MAAOnD,EAAiBhB,SAAA,EAEhDI,EAAAA,EAAAA,MAAA,SAAOR,UAAW,cAAgBkC,EAAY,OAAS,SAAS9B,SAAA,EAC9DI,EAAAA,EAAAA,MAAA,UAAQR,UAAU,aAAYI,SAAA,CAC3BiE,GACDtE,EAAAA,EAAAA,KAAA,OAAKC,UAAU,cAAc6E,QAAS5E,KAAK+C,gBAAgB5C,UACzDL,EAAAA,EAAAA,KAAA,KACEC,UACE,kBAAoBkC,EAAY,QAAU,eAKjDkC,GACCrE,EAAAA,EAAAA,KAAA,OACEC,UAAU,UACV6E,QAAS5E,KAAK+C,gBACd8B,wBAAyB,CACvBC,OAAQX,MAIZ5D,EAAAA,EAAAA,MAACwE,EAAAA,SAAc,CAAA5E,SAAA,EACbL,EAAAA,EAAAA,KAACP,EAAI,CAACW,UAAU,YAChBJ,EAAAA,EAAAA,KAAA,OAAKwE,MAAO,CAAEU,UAAW,SAAUlE,aAAc,QAASX,UACxDL,EAAAA,EAAAA,KAAA,SACEmF,YAAY,eACZC,SAAUlF,KAAKgD,OACfmC,QAASnF,KAAK2D,uBAOxB7D,EAAAA,EAAAA,KAAA,WAASC,UAAU,WAAUI,SAAEA,QAGjCI,EAAAA,EAAAA,MAAA,UAAAJ,SAAA,EACEL,EAAAA,EAAAA,KAAA,OAAKC,UAAU,eAAeuE,MAAOzD,EAAYV,SAC9CiF,EAAAA,GAAY/E,KAAKC,IAChBR,EAAAA,EAAAA,KAAA,KAAmBU,OAAO,SAASC,KAAMH,EAAKG,KAAKN,UACjDL,EAAAA,EAAAA,KAAA,KAAGC,UAAW,iBAAmBO,EAAKI,QADhCJ,EAAKI,WAKjBH,EAAAA,EAAAA,MAAA,OAAK+D,MAAOzD,EAAYV,SAAA,CAAC,KAEpBiC,EAAK,yBAAuB,KAC/BtC,EAAAA,EAAAA,KAAA,KACEC,UAAU,UACVS,OAAO,SACPC,KAAK,oDAAmDN,SACzD,YAEI,IAAI,eACI,KACbL,EAAAA,EAAAA,KAAA,KACEC,UAAU,UACVS,OAAO,SACPC,KAAK,4BAA2BN,SACjC,cAGDL,EAAAA,EAAAA,KAAA,UACAA,EAAAA,EAAAA,KAAA,KAAGW,KAAK,4BAA2BN,SAAC,+BAM9C,EAACmB,CAAA,CA5KS,CAASyD,EAAAA,WA+KrB,O,uFCnMe,SAAS,EAAC9E,GAEvB,MAAM,YAAEoF,EAAW,UAAEC,EAAS,OAAEC,GAAWtF,EAC3C,OACEM,EAAAA,EAAAA,MAAA,OAAKR,UAAU,iBAAgBI,SAAA,CAE5BkF,EAAc,EAAI,IACjBvF,EAAAA,EAAAA,KAACuE,EAAAA,GAAI,CACHK,GAAIa,GAAUF,EAAc,GAAM,EAAI,GAAKA,EAAc,GACzDG,IAAI,OAAMrF,UAEVL,EAAAA,EAAAA,KAAA,UAAQC,UAAU,cAAaI,SAAC,WAIpCL,EAAAA,EAAAA,KAAA,OAAAK,SAASkF,EAAW,MAAMC,IAEzBD,EAAc,GAAKC,IAClBxF,EAAAA,EAAAA,KAACuE,EAAAA,GAAI,CAACK,GAAIa,GAAUF,EAAc,GAAIG,IAAI,OAAMrF,UAC9CL,EAAAA,EAAAA,KAAA,UAAQC,UAAU,cAAaI,SAAC,YAK1C,C,wFCxBe,SAAS,EAACF,GACvB,OACEM,EAAAA,EAAAA,MAAA,OAAKR,UAAU,WAAUI,SAAA,EAEvBL,EAAAA,EAAAA,KAAA,QACEwE,MAAO,CACLmB,aAAc,QACdtF,SAEDF,EAAMyF,OAGRzF,EAAM0F,MACL7F,EAAAA,EAAAA,KAACiF,EAAAA,SAAc,CAAA5E,SACZF,EAAM0F,KAAKtF,KAAI,CAACuF,EAAKC,KACpB/F,EAAAA,EAAAA,KAAA,QAEEwE,MAAO,CACLmB,aAAc,OACdtF,UAEFI,EAAAA,EAAAA,MAAC8D,EAAAA,GAAI,CAACK,GAAE,QAAUkB,EAAMzF,SAAA,CAAC,IAAEyF,MALtBA,OAST,OAGV,C,2FC2BA,MAtDA,SAAYE,GAMR,IANS,YACXC,EAAW,SACXC,EAAQ,MACRC,EAAK,MACLC,EAAK,SACLC,GACDL,EAEC,MAAMM,GCVOC,EAAAA,EAAAA,IAAe,cAchBC,KAAKC,aDDXC,EAAM,CACVN,MAAUA,EAAK,MAAME,EAAKF,MAC1BO,IAAI,GAAIL,EAAKM,SAAUP,GAAY,IACnCJ,YAAaA,GAAeK,EAAKL,YACjCC,SAAUA,GAAYI,EAAKJ,SAC3BW,OAAQP,EAAKO,OACbV,SAGF,OACE1F,EAAAA,EAAAA,MAAAqG,EAAAA,SAAA,CAAAzG,SAAA,EAEEL,EAAAA,EAAAA,KAAA,SAAAK,SAAQqG,EAAIN,SAEZpG,EAAAA,EAAAA,KAAA,QAAM0F,IAAI,YAAY/E,KAAM+F,EAAIC,OAEhC3G,EAAAA,EAAAA,KAAA,QAAMa,KAAK,WAAWkG,QAASL,EAAIR,SAASc,KAAK,QAEjDhH,EAAAA,EAAAA,KAAA,QAAMa,KAAK,cAAckG,QAASL,EAAIT,eAGtCjG,EAAAA,EAAAA,KAAA,QAAMiH,SAAS,WAAWF,QAASL,EAAIN,SACvCpG,EAAAA,EAAAA,KAAA,QAAMiH,SAAS,iBAAiBF,QAASL,EAAIT,eAG7CjG,EAAAA,EAAAA,KAAA,QAAMa,KAAK,gBAAgBkG,QAASL,EAAIN,SACxCpG,EAAAA,EAAAA,KAAA,QAAMa,KAAK,eAAekG,QAAQ,aAClC/G,EAAAA,EAAAA,KAAA,QAAMa,KAAK,cAAckG,QAASL,EAAIC,OACtC3G,EAAAA,EAAAA,KAAA,QAAMa,KAAK,sBAAsBkG,QAASL,EAAIT,eAC9CjG,EAAAA,EAAAA,KAAA,QAAMa,KAAK,kBAAkBkG,QAASL,EAAIG,SAGzCH,EAAIQ,KAAMzG,EAAAA,EAAAA,MAAAqG,EAAAA,SAAA,CAAAzG,SAAA,EACTL,EAAAA,EAAAA,KAAA,QAAMa,KAAK,eAAekG,QAAQ,yBAClC/G,EAAAA,EAAAA,KAAA,QAAMa,KAAK,gBAAgBkG,QAASL,EAAIP,MAAMgB,OAC9CnH,EAAAA,EAAAA,KAAA,QAAMa,KAAK,QAAQkG,QAASL,EAAIP,MAAMgB,OACtCnH,EAAAA,EAAAA,KAAA,QAAMiH,SAAS,iBAAiBF,QAASL,EAAIP,MAAM5E,SACnDvB,EAAAA,EAAAA,KAAA,QAAMiH,SAAS,kBAAkBF,QAASL,EAAIP,MAAMiB,YAChD,OAGZ,C,gLEzDO,MAAMvC,EAAW,cAKXwC,EAAe,CACxBC,SAAS,EACTC,KAAM,oCACNC,OAAQ,mCACRC,SAAU,WACVC,WAAY,uBACZC,QAAS,WACTC,iBAAkB,IAClBC,aAAc,IACdC,cAAe,SACftF,MAAO,OACPuF,KAAM,QACNC,QAAS,QAGA1H,EAAO,CAClB,CACEM,KAAM,SACNC,KAAM,KACNF,KAAM,gBAER,CACEC,KAAM,QACNC,KAAM,KACNF,KAAM,eAER,CACEC,KAAM,OACNC,KAAM,KACNF,KAAM,cAER,CACEC,KAAM,MACNC,KAAM,KACNF,KAAM,SAER,CACEC,KAAM,UACNC,KAAM,KACNF,KAAM,YAER,CACEC,KAAM,SACNC,KAAM,KACNF,KAAM,WAIG2E,EAAc,CACzB,CACE1E,KAAM,QACND,KAAM,+BAER,CACEC,KAAM,cACND,KAAM,kCAER,CACEC,KAAM,UACND,KAAM,qCAER,CACEC,KAAM,MACND,KAAM,iCAIGsH,EAAY,CACvB,CACE7B,MAAO,wBACPH,YAAa,kBACbtF,KAAM,6DACNuG,IAAK,sEAIIgB,EAAU,CACrB,CACE9B,MAAO,aACPH,YAAa,QACbtF,KAAM,uBACNuG,IAAK,uF,oJC9ET,MAAMiB,EAAoB,CAAC,EAE3B,IAGMC,EAAS,SAAA3G,GAAA,SAAA2G,IAAA,OAAA3G,EAAA9B,MAAA,KAAAC,YAAA,KAkCZ,OAlCYC,EAAAA,EAAAA,GAAAuI,EAAA3G,GAAA2G,EAAAtI,UACbC,OAAA,WAEE,MAAM,KAAEsI,GAASnI,KAAKC,MAEhBmI,EAAQD,EAAKE,kBAAkBC,OAE/B,UAAEhD,EAAS,YAAED,EAAW,IAAEO,GAAQ5F,KAAKC,MAAMsI,YACnD,OAEEhI,EAAAA,EAAAA,MAACe,EAAAA,EAAM,CAAC2C,SAAU2B,EAAK1B,aAAc+D,EAAkBrC,GAAKzF,SAAA,CACzDiI,EAAM/H,KAAIyF,IAAe,IAAd,KAAE0C,GAAM1C,EAClB,MAAMI,EAAQsC,EAAKC,YAAYvC,OAASsC,EAAKE,OAAOC,KACpD,OACEpI,EAAAA,EAAAA,MAAA,OAAKR,UAAU,YAAWI,SAAA,EACxBL,EAAAA,EAAAA,KAAA,OAAKC,UAAU,aAAYI,UACzBL,EAAAA,EAAAA,KAACuE,EAAAA,GAAI,CAACC,MAAO,CAAEC,UAAW,QAAUG,GAAI8D,EAAKE,OAAOC,KAAKxI,SACtD+F,OAGLpG,EAAAA,EAAAA,KAAC8I,EAAAA,EAAI,CAAClD,KAAM8C,EAAKC,YAAY/C,KAAMC,KAAM6C,EAAKC,YAAY9C,QAC1D7F,EAAAA,EAAAA,KAAA,KAAGC,UAAU,eAAcI,SACxBqI,EAAKC,YAAY1C,aAAeyC,EAAKK,YARVL,EAAKE,OAAOC,KAUtC,KAGV7I,EAAAA,EAAAA,KAACgJ,EAAAA,EAAU,CACTzD,YAAaA,EACbC,UAAWA,EACXC,OAAM,QAAUK,EAAG,QAI3B,EAACsC,CAAA,CAlCY,CAASnD,EAAAA,WAqCxB,YAGO,MAAMgE,EAAOC,IAAA,IAAC,SAAEC,EAAQ,YAAEV,GAAaS,EAAA,OAC5ClJ,EAAAA,EAAAA,KAACoJ,EAAAA,EAAG,CACFhD,MAAOqC,EAAY3C,IACnBO,SAAU8C,EAAS9C,SACnBJ,YAAakC,EAAkBM,EAAY3C,MAC3C,C","sources":["webpack://funnyeagle/./src/components/Menu.js","webpack://funnyeagle/./src/components/Layout.js","webpack://funnyeagle/./src/components/Pagination.js","webpack://funnyeagle/./src/components/PostInfo.js","webpack://funnyeagle/./src/components/Seo.js","webpack://funnyeagle/./src/hooks/use-site-metadata.js","webpack://funnyeagle/./src/settings.js","webpack://funnyeagle/./src/templates/tag.js"],"sourcesContent":["import React, { Component } from 'react'\r\nimport { menu } from '../settings'\r\n\r\n// 菜单组件，用于渲染网站导航菜单\r\nexport default class Menu extends Component {\r\n  render() {\r\n    return (\r\n      <div\r\n        className={\r\n          'css-menu ' + (this.props.direction === 'column' ? 'column' : 'row')\r\n        }\r\n      >\r\n        {/* 遍历菜单项并渲染链接 */}\r\n        {menu.map((item) => (\r\n          <a target={item.target} href={item.href} key={item.name}>\r\n            <i className={'iconfont icon-' + item.icon} />\r\n            {item.name}\r\n          </a>\r\n        ))}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React from 'react'\r\nimport { Link } from 'gatsby'\r\nimport Menu from './Menu'\r\nimport { siteName, socialMedia } from '../settings'\r\n\r\n// 页脚样式\r\nlet footerStyle = {\r\n  marginBottom: '1rem',\r\n}\r\n\r\n// 布局容器样式\r\nconst layoutContainerStyle = {\r\n  minHeight: '100vh', // 确保容器至少占满整个视口高度\r\n  display: 'flex',\r\n  flexDirection: 'column',\r\n}\r\n\r\n// 主内容区域样式\r\nconst mainContentStyle = {\r\n  flexGrow: 1, // 让主内容区域自动填充剩余空间\r\n  width: '100%',\r\n}\r\n\r\n// 布局组件，用于管理网站的整体布局\r\nclass Layout extends React.Component {\r\n  // 组件状态，包含菜单状态、搜索关键词、动画、年份、天数、主题和logo等\r\n  state = {\r\n    menuState: false, // false表示关闭，true表示打开\r\n    keyword: '',\r\n    animation: [],\r\n    year: '',\r\n    days: '',\r\n    theme: '',\r\n    logo: '/funny-eagle-light.jpg'\r\n  }\r\n  \r\n  // 组件挂载后执行的生命周期方法\r\n  componentDidMount() {\r\n    // 直接设置为dark主题，不再支持切换\r\n    this.setTheme('dark');\r\n    \r\n    this.setState({\r\n      theme: 'dark',\r\n      year: new Date().getFullYear(),\r\n      logo: \"/funny-eagle-light.jpg\",\r\n    });\r\n  }\r\n  \r\n  // 设置主题（只保留dark主题设置）\r\n  setTheme = (themeName) => {\r\n    localStorage.setItem('theme', 'dark'); // 强制使用dark主题\r\n    document.documentElement.className = 'dark-theme';\r\n    this.setState({\r\n      theme: 'dark',\r\n    });\r\n  }\r\n  \r\n  // 切换菜单状态\r\n  toggleMenuState = () => {\r\n    this.setState({\r\n      menuState: !this.state.menuState,\r\n    })\r\n  }\r\n  \r\n  // 处理搜索关键词变化\r\n  change = (e) => {\r\n    this.setState({\r\n      keyword: e.target.value,\r\n    })\r\n  }\r\n  \r\n  // 执行搜索\r\n  search = () => {\r\n    window.open(\r\n      'https://cn.bing.com/search?q=site%3Afunnyeagle.cn%20' +\r\n        this.state.keyword\r\n    )\r\n  }\r\n  \r\n  // 格式化时间\r\n  formatTime = (msTime) => {\r\n    const time = msTime / 1000\r\n    const day = Math.floor(time / 60 / 60 / 24)\r\n    return ` ${day} 天`\r\n  }\r\n  \r\n  // 处理回车键事件\r\n  handleEnter = (e) => {\r\n    if (e.keyCode === 13) {\r\n      this.search()\r\n    }\r\n  }\r\n  \r\n  render() {\r\n    const { menuState, days, year, theme , logo} = this.state\r\n    const { pageName, pageDescript, children, aside, className } = this.props\r\n\r\n    // 网站名称组件\r\n    const websiteName = (\r\n      <div>\r\n        <Link\r\n          style={{\r\n            boxShadow: 'none',\r\n            textDecoration: 'none',\r\n            fontWeight: 200,\r\n          }}\r\n          className=\"usubeni\"\r\n          to={'/'}\r\n        >\r\n          <span className=\"logo-mobile\">{siteName}</span>\r\n        </Link>\r\n        \r\n        {pageName ? (\r\n          <div className=\"page-name\">\r\n            {'#' + pageName}\r\n          </div>\r\n        ) : null}\r\n      </div>\r\n    )\r\n    \r\n    // 页面描述组件\r\n    const descript = <div className=\"page-description\">{pageDescript}</div>\r\n    \r\n    return (\r\n      <div className={className} style={layoutContainerStyle}>\r\n        <div className=\"css-main\" style={mainContentStyle}>\r\n          {/* 侧边栏 */}\r\n          <aside className={'css-aside ' + (menuState ? 'open' : 'close')}>\r\n            <header className=\"css-header\">\r\n              {websiteName}\r\n              <div className=\"menu-button\" onClick={this.toggleMenuState}>\r\n                <i\r\n                  className={\r\n                    'iconfont icon-' + (menuState ? 'close' : 'menu')\r\n                  }\r\n                />\r\n              </div>\r\n            </header>\r\n            {aside ? (\r\n              <div\r\n                className=\"css-toc\"\r\n                onClick={this.toggleMenuState}\r\n                dangerouslySetInnerHTML={{\r\n                  __html: aside,\r\n                }}\r\n              />\r\n            ) : (\r\n              <React.Fragment>\r\n                <Menu direction=\"column\" />\r\n                <div style={{ textAlign: 'center', marginBottom: '20px' }}>\r\n                  <input\r\n                    placeholder=\"关键字，然后 Enter\"\r\n                    onChange={this.change}\r\n                    onKeyUp={this.handleEnter}\r\n                  />\r\n                </div>\r\n              </React.Fragment>\r\n            )}\r\n          </aside>\r\n          {/* 主内容区域 */}\r\n          <article className=\"css-post\">{children}</article>\r\n        </div>\r\n        {/* 页脚 - 现在会始终显示在页面底部 */}\r\n        <footer>\r\n          <div className=\"social-media\" style={footerStyle}>\r\n            {socialMedia.map((item) => (\r\n              <a key={item.icon} target=\"_blank\" href={item.href}>\r\n                <i className={'iconfont icon-' + item.icon}></i>\r\n              </a>\r\n            ))}\r\n          </div>\r\n          <div style={footerStyle}>\r\n            \r\n            © {year} funnyeagle.cn • Theme{' '}\r\n            <a\r\n              className=\"usubeni\"\r\n              target=\"_blank\"\r\n              href=\"https://github.com/ssshooter/gatsby-theme-usubeni\"\r\n            >\r\n              usubeni\r\n            </a>{' '}\r\n            • Powered by{' '}\r\n            <a\r\n              className=\"usubeni\"\r\n              target=\"_blank\"\r\n              href=\"https://www.gatsbyjs.org/\"\r\n            >\r\n              Gatsbyjs\r\n            </a>\r\n            <br/>\r\n            <a href=\"https://beian.miit.gov.cn\">蜀ICP备2023036051号-1</a>\r\n            \r\n          </div>\r\n        </footer>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Layout\r\n","import React from 'react'\r\nimport { Link } from 'gatsby'\r\n\r\n// 分页组件，用于在博客列表等页面中实现分页功能\r\nexport default function (props) {\r\n  // 获取当前页码、总页数和URL前缀\r\n  const { currentPage, totalPage, prefix } = props\r\n  return (\r\n    <div className=\"button-wrapper\">\r\n      {/* 当前页码大于1时显示上一页按钮 */}\r\n      {currentPage - 1 > 0 && (\r\n        <Link\r\n          to={prefix + (currentPage - 1 === 1 ? '' : currentPage - 1)}\r\n          rel=\"prev\"\r\n        >\r\n          <button className=\"page-button\">上一页</button>\r\n        </Link>\r\n      )}\r\n      {/* 显示当前页码和总页数 */}\r\n      <div>{`${currentPage} / ${totalPage}`}</div>\r\n      {/* 当前页码小于总页数时显示下一页按钮 */}\r\n      {currentPage + 1 <= totalPage && (\r\n        <Link to={prefix + (currentPage + 1)} rel=\"next\">\r\n          <button className=\"page-button\">下一页</button>\r\n        </Link>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { Link } from 'gatsby'\r\n\r\n// 文章信息组件，用于显示文章的日期和标签信息\r\nexport default function (props) {\r\n  return (\r\n    <div className=\"css-info\">\r\n      {/* 显示文章日期 */}\r\n      <span\r\n        style={{\r\n          paddingRight: '12px',\r\n        }}\r\n      >\r\n        {props.date}\r\n      </span>\r\n      {/* 如果有标签则显示标签列表 */}\r\n      {props.tags ? (\r\n        <React.Fragment>\r\n          {props.tags.map((tag, index) => (\r\n            <span\r\n              key={tag}\r\n              style={{\r\n                paddingRight: '8px',\r\n              }}\r\n            >\r\n              <Link to={`/tag/${tag}`}>#{tag}</Link>\r\n            </span>\r\n          ))}\r\n        </React.Fragment>\r\n      ) : null}\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { useSiteMetadata } from \"../hooks/use-site-metadata\"\r\n\r\n// SEO组件，用于设置页面的搜索引擎优化相关标签\r\nfunction SEO({\r\n  description,\r\n  keywords,\r\n  image,\r\n  title,\r\n  pathname,\r\n}) {\r\n  // 获取网站元数据\r\n  const meta = useSiteMetadata()\r\n  \r\n  // 构建SEO相关数据\r\n  const seo = {\r\n    title: `${title} | ${meta.title}`,\r\n    url: `${meta.siteUrl}${pathname || ''}`,\r\n    description: description || meta.description,\r\n    keywords: keywords || meta.keywords,\r\n    author: meta.author,\r\n    image,\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {/* 页面标题 */}\r\n      <title>{seo.title}</title>\r\n      {/* 规范链接 */}\r\n      <link rel=\"canonical\" href={seo.url} />\r\n      {/* 关键词 */}\r\n      <meta name=\"keywords\" content={seo.keywords.join(',')} />\r\n      {/* 页面描述 */}\r\n      <meta name=\"description\" content={seo.description} />\r\n\r\n      {/* Open Graph标签 */}\r\n      <meta property=\"og:title\" content={seo.title} />\r\n      <meta property=\"og:description\" content={seo.description} />\r\n\r\n      {/* Twitter标签 */}\r\n      <meta name=\"twitter:title\" content={seo.title} />\r\n      <meta name=\"twitter:card\" content=\"summary\" />\r\n      <meta name=\"twitter:url\" content={seo.url} />\r\n      <meta name=\"twitter:description\" content={seo.description} />\r\n      <meta name=\"twitter:creator\" content={seo.author} />\r\n\r\n      {/* 如果有图片则添加图片相关标签 */}\r\n      {seo.img ? <>\r\n        <meta name=\"twitter:card\" content=\"summary_large_image\" />\r\n        <meta name=\"twitter:image\" content={seo.image.src} />\r\n        <meta name=\"image\" content={seo.image.src} />\r\n        <meta property=\"og:image:width\" content={seo.image.width} />\r\n        <meta property=\"og:image:height\" content={seo.image.height} />\r\n      </> : null}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default SEO\r\n","import { graphql, useStaticQuery } from \"gatsby\"\r\n\r\nexport const useSiteMetadata = () => {\r\n  const data = useStaticQuery(graphql`\r\n    query {\r\n      site {\r\n        siteMetadata {\r\n          title\r\n          description\r\n          author\r\n          keywords\r\n          siteUrl\r\n        }\r\n      }\r\n    }\r\n  `)\r\n\r\n  return data.site.siteMetadata\r\n}","export const siteName = \"Funny Eagle\"\r\nexport const author = 'Jason Yang'\r\nexport const apiUrl = 'https://funnyeagle.cn'\r\n\r\n// Giscus评论系统配置\r\nexport const giscusConfig = {\r\n    enabled: true, \r\n    repo: 'funny-eagle/funny-eagle.github.io', \r\n    repoId: 'MDEwOlJlcG9zaXRvcnk1NTI1NDYxMg==', \r\n    category: 'Comments', \r\n    categoryId: 'DIC_kwDOA0seVM4CwBGj',\r\n    mapping: 'pathname',\r\n    reactionsEnabled: '1',\r\n    emitMetadata: '0', \r\n    inputPosition: 'bottom',\r\n    theme: 'dark', // 修改为dark主题\r\n    lang: 'zh-CN', \r\n    loading: 'lazy'\r\n  }\r\n\r\nexport const menu = [\r\n  {\r\n    icon: 'coding',\r\n    name: '编程',\r\n    href: '/tag/coding/',\r\n  },\r\n  {\r\n    icon: 'music',\r\n    name: '音乐',\r\n    href: '/tag/music/',\r\n  },\r\n  {\r\n    icon: 'life',\r\n    name: '生活',\r\n    href: '/tag/life/',\r\n  },\r\n  {\r\n    icon: 'tag',\r\n    name: '标签',\r\n    href: '/tags',\r\n  },\r\n  {\r\n    icon: 'archive',\r\n    name: '归档',\r\n    href: '/archive',\r\n  },\r\n  {\r\n    icon: 'person',\r\n    name: '关于',\r\n    href: '/about',\r\n  },\r\n]\r\n\r\nexport const socialMedia = [\r\n  {\r\n    icon: 'weibo',\r\n    href: 'https://weibo.com/227307890',\r\n  },\r\n  {\r\n    icon: 'github-fill',\r\n    href: 'https://github.com/funny-eagle',\r\n  },\r\n  {\r\n    icon: 'twitter',\r\n    href: 'https://twitter.com/yangjinlong86',\r\n  },\r\n  {\r\n    icon: 'rss',\r\n    href: 'http://funnyeagle.cn/rss.xml',\r\n  },\r\n]\r\n\r\nexport const recommend = [\r\n  {\r\n    title: 'ECMA-262, 9th edition',\r\n    description: 'ECMAScript 语言规范',\r\n    href: 'https://www.ecma-international.org/ecma-262/9.0/index.html',\r\n    img: 'https://www.ecma-international.org/ecma-262/9.0/img/ecma-logo.svg',\r\n  },\r\n]\r\n\r\nexport const friends = [\r\n  {\r\n    title: 'FunnyEagle',\r\n    description: '老鹰的博客',\r\n    href: 'http://funnyeagle.cn',\r\n    img: 'http://funnyeagle.cn/static/df1082d3ffc5b1288b5e7e78fe346036/ee81f/profile-pic.avif',\r\n  },\r\n]\r\n","import React from 'react'\r\nimport { Link, graphql } from 'gatsby'\r\nimport SEO from '../components/Seo'\r\nimport Layout from '../components/Layout'\r\nimport Info from '../components/PostInfo'\r\nimport Pagination from '../components/Pagination'\r\n\r\n// 标签描述映射表\r\nconst tagDescriptionMap = {}\r\n\r\n/**\r\n * 特定标签的博客列表页面\r\n */\r\nclass BlogIndex extends React.Component {\r\n  render() {\r\n    // 获取页面数据\r\n    const { data } = this.props\r\n    // 获取文章列表\r\n    const posts = data.allMarkdownRemark.edges\r\n    // 获取分页信息和标签信息\r\n    const { totalPage, currentPage, tag } = this.props.pageContext\r\n    return (\r\n      // 使用布局组件，传入标签名和描述\r\n      <Layout pageName={tag} pageDescript={tagDescriptionMap[tag]}>\r\n        {posts.map(({ node }) => {\r\n          const title = node.frontmatter.title || node.fields.slug\r\n          return (\r\n            <div className=\"list-item\" key={node.fields.slug}>\r\n              <div className=\"list-title\">\r\n                <Link style={{ boxShadow: 'none' }} to={node.fields.slug}>\r\n                  {title}\r\n                </Link>\r\n              </div>\r\n              <Info date={node.frontmatter.date} tags={node.frontmatter.tags} />\r\n              <p className=\"list-excerpt\">\r\n                {node.frontmatter.description || node.excerpt}\r\n              </p>\r\n            </div>\r\n          )\r\n        })}\r\n        <Pagination\r\n          currentPage={currentPage}\r\n          totalPage={totalPage}\r\n          prefix={`/tag/${tag}/`}\r\n        />\r\n      </Layout>\r\n    )\r\n  }\r\n}\r\n\r\nexport default BlogIndex\r\n\r\n// 页面头部SEO信息\r\nexport const Head = ({ location, pageContext }) => (\r\n  <SEO\r\n    title={pageContext.tag}\r\n    pathname={location.pathname}\r\n    description={tagDescriptionMap[pageContext.tag]}\r\n  />\r\n)\r\n\r\n// GraphQL查询，用于获取特定标签的文章列表数据\r\nexport const pageQuery = graphql`\r\n  query ($tag: String!, $skip: Int!, $limit: Int!) {\r\n    site {\r\n      siteMetadata {\r\n        title\r\n        description\r\n      }\r\n    }\r\n    allMarkdownRemark(\r\n      sort: {frontmatter: {date: DESC}}\r\n      filter: {frontmatter: {tags: {in: [$tag]}}}\r\n      limit: $limit\r\n      skip: $skip\r\n    ) {\r\n      edges {\r\n        node {\r\n          excerpt(truncate: true, pruneLength: 100)\r\n          fields {\r\n            slug\r\n          }\r\n          frontmatter {\r\n            date(formatString: \"YYYY-MM-DD\")\r\n            title\r\n            tags\r\n            description\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n"],"names":["Menu","_Component","apply","arguments","_inheritsLoose","prototype","render","_jsx","className","this","props","direction","children","menu","map","item","_jsxs","target","href","icon","name","Component","footerStyle","marginBottom","layoutContainerStyle","minHeight","display","flexDirection","mainContentStyle","flexGrow","width","Layout","_React$Component","_this","_len","length","args","Array","_key","call","concat","state","menuState","keyword","animation","year","days","theme","logo","setTheme","themeName","localStorage","setItem","document","documentElement","setState","toggleMenuState","change","e","value","search","window","open","formatTime","msTime","time","Math","floor","handleEnter","keyCode","_proto","componentDidMount","Date","getFullYear","pageName","pageDescript","aside","websiteName","Link","style","boxShadow","textDecoration","fontWeight","to","siteName","onClick","dangerouslySetInnerHTML","__html","React","textAlign","placeholder","onChange","onKeyUp","socialMedia","currentPage","totalPage","prefix","rel","paddingRight","date","tags","tag","index","_ref","description","keywords","image","title","pathname","meta","useStaticQuery","site","siteMetadata","seo","url","siteUrl","author","_Fragment","content","join","property","img","src","height","giscusConfig","enabled","repo","repoId","category","categoryId","mapping","reactionsEnabled","emitMetadata","inputPosition","lang","loading","recommend","friends","tagDescriptionMap","BlogIndex","data","posts","allMarkdownRemark","edges","pageContext","node","frontmatter","fields","slug","Info","excerpt","Pagination","Head","_ref2","location","SEO"],"sourceRoot":""}