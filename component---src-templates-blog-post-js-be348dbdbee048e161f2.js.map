{"version":3,"file":"component---src-templates-blog-post-js-be348dbdbee048e161f2.js","mappings":"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","sources":["webpack://FunnyEagle/./node_modules/@deckdeckgo/highlight-code/dist/esm/index-55dc676f.js","webpack://FunnyEagle/./node_modules/@deckdeckgo/highlight-code/dist/esm/ lazy ^\\.\\/.*\\.entry\\.js$ include: \\.entry\\.js$ exclude: \\.system\\.entry\\.js$ namespace object","webpack://FunnyEagle/./src/components/Menu.js","webpack://FunnyEagle/./src/components/Layout.js","webpack://FunnyEagle/./src/components/PostInfo.js","webpack://FunnyEagle/./src/components/Seo.js","webpack://FunnyEagle/./src/hooks/use-site-metadata.js","webpack://FunnyEagle/./src/settings.js","webpack://FunnyEagle/./node_modules/@deckdeckgo/highlight-code/dist/loader/index.js","webpack://FunnyEagle/./node_modules/@deckdeckgo/highlight-code/dist/esm/loader.js","webpack://FunnyEagle/./src/templates/blog-post.js"],"sourcesContent":["const NAMESPACE = 'deckdeckgo-highlight-code';\n\nlet scopeId;\nlet hostTagName;\nlet isSvgMode = false;\nlet queuePending = false;\nconst win = typeof window !== 'undefined' ? window : {};\nconst doc = win.document || { head: {} };\nconst plt = {\n    $flags$: 0,\n    $resourcesUrl$: '',\n    jmp: (h) => h(),\n    raf: (h) => requestAnimationFrame(h),\n    ael: (el, eventName, listener, opts) => el.addEventListener(eventName, listener, opts),\n    rel: (el, eventName, listener, opts) => el.removeEventListener(eventName, listener, opts),\n    ce: (eventName, opts) => new CustomEvent(eventName, opts),\n};\nconst promiseResolve = (v) => Promise.resolve(v);\nconst supportsConstructibleStylesheets = /*@__PURE__*/ (() => {\n        try {\n            new CSSStyleSheet();\n            return typeof new CSSStyleSheet().replace === 'function';\n        }\n        catch (e) { }\n        return false;\n    })()\n    ;\nconst addHostEventListeners = (elm, hostRef, listeners, attachParentListeners) => {\n    if (listeners) {\n        listeners.map(([flags, name, method]) => {\n            const target = getHostListenerTarget(elm, flags) ;\n            const handler = hostListenerProxy(hostRef, method);\n            const opts = hostListenerOpts(flags);\n            plt.ael(target, name, handler, opts);\n            (hostRef.$rmListeners$ = hostRef.$rmListeners$ || []).push(() => plt.rel(target, name, handler, opts));\n        });\n    }\n};\nconst hostListenerProxy = (hostRef, methodName) => (ev) => {\n    try {\n        {\n            if (hostRef.$flags$ & 256 /* isListenReady */) {\n                // instance is ready, let's call it's member method for this event\n                hostRef.$lazyInstance$[methodName](ev);\n            }\n            else {\n                (hostRef.$queuedListeners$ = hostRef.$queuedListeners$ || []).push([methodName, ev]);\n            }\n        }\n    }\n    catch (e) {\n        consoleError(e);\n    }\n};\nconst getHostListenerTarget = (elm, flags) => {\n    if (flags & 4 /* TargetDocument */)\n        return doc;\n    if (flags & 8 /* TargetWindow */)\n        return win;\n    return elm;\n};\n// prettier-ignore\nconst hostListenerOpts = (flags) => (flags & 2 /* Capture */) !== 0;\nconst HYDRATED_CSS = '{visibility:hidden}.hydrated{visibility:inherit}';\nconst XLINK_NS = 'http://www.w3.org/1999/xlink';\nconst createTime = (fnName, tagName = '') => {\n    {\n        return () => {\n            return;\n        };\n    }\n};\nconst uniqueTime = (key, measureText) => {\n    {\n        return () => {\n            return;\n        };\n    }\n};\nconst rootAppliedStyles = new WeakMap();\nconst registerStyle = (scopeId, cssText, allowCS) => {\n    let style = styles.get(scopeId);\n    if (supportsConstructibleStylesheets && allowCS) {\n        style = (style || new CSSStyleSheet());\n        style.replace(cssText);\n    }\n    else {\n        style = cssText;\n    }\n    styles.set(scopeId, style);\n};\nconst addStyle = (styleContainerNode, cmpMeta, mode, hostElm) => {\n    let scopeId = getScopeId(cmpMeta);\n    let style = styles.get(scopeId);\n    // if an element is NOT connected then getRootNode() will return the wrong root node\n    // so the fallback is to always use the document for the root node in those cases\n    styleContainerNode = styleContainerNode.nodeType === 11 /* DocumentFragment */ ? styleContainerNode : doc;\n    if (style) {\n        if (typeof style === 'string') {\n            styleContainerNode = styleContainerNode.head || styleContainerNode;\n            let appliedStyles = rootAppliedStyles.get(styleContainerNode);\n            let styleElm;\n            if (!appliedStyles) {\n                rootAppliedStyles.set(styleContainerNode, (appliedStyles = new Set()));\n            }\n            if (!appliedStyles.has(scopeId)) {\n                {\n                    {\n                        styleElm = doc.createElement('style');\n                        styleElm.innerHTML = style;\n                    }\n                    styleContainerNode.insertBefore(styleElm, styleContainerNode.querySelector('link'));\n                }\n                if (appliedStyles) {\n                    appliedStyles.add(scopeId);\n                }\n            }\n        }\n        else if (!styleContainerNode.adoptedStyleSheets.includes(style)) {\n            styleContainerNode.adoptedStyleSheets = [...styleContainerNode.adoptedStyleSheets, style];\n        }\n    }\n    return scopeId;\n};\nconst attachStyles = (hostRef) => {\n    const cmpMeta = hostRef.$cmpMeta$;\n    const elm = hostRef.$hostElement$;\n    const flags = cmpMeta.$flags$;\n    const endAttachStyles = createTime('attachStyles', cmpMeta.$tagName$);\n    const scopeId = addStyle(elm.shadowRoot ? elm.shadowRoot : elm.getRootNode(), cmpMeta);\n    if (flags & 10 /* needsScopedEncapsulation */) {\n        // only required when we're NOT using native shadow dom (slot)\n        // or this browser doesn't support native shadow dom\n        // and this host element was NOT created with SSR\n        // let's pick out the inner content for slot projection\n        // create a node to represent where the original\n        // content was first placed, which is useful later on\n        // DOM WRITE!!\n        elm['s-sc'] = scopeId;\n        elm.classList.add(scopeId + '-h');\n    }\n    endAttachStyles();\n};\nconst getScopeId = (cmp, mode) => 'sc-' + (cmp.$tagName$);\n/**\n * Default style mode id\n */\n/**\n * Reusable empty obj/array\n * Don't add values to these!!\n */\nconst EMPTY_OBJ = {};\nconst isDef = (v) => v != null;\nconst isComplexType = (o) => {\n    // https://jsperf.com/typeof-fn-object/5\n    o = typeof o;\n    return o === 'object' || o === 'function';\n};\n/**\n * Production h() function based on Preact by\n * Jason Miller (@developit)\n * Licensed under the MIT License\n * https://github.com/developit/preact/blob/master/LICENSE\n *\n * Modified for Stencil's compiler and vdom\n */\n// const stack: any[] = [];\n// export function h(nodeName: string | d.FunctionalComponent, vnodeData: d.PropsType, child?: d.ChildType): d.VNode;\n// export function h(nodeName: string | d.FunctionalComponent, vnodeData: d.PropsType, ...children: d.ChildType[]): d.VNode;\nconst h = (nodeName, vnodeData, ...children) => {\n    let child = null;\n    let key = null;\n    let simple = false;\n    let lastSimple = false;\n    let vNodeChildren = [];\n    const walk = (c) => {\n        for (let i = 0; i < c.length; i++) {\n            child = c[i];\n            if (Array.isArray(child)) {\n                walk(child);\n            }\n            else if (child != null && typeof child !== 'boolean') {\n                if ((simple = typeof nodeName !== 'function' && !isComplexType(child))) {\n                    child = String(child);\n                }\n                if (simple && lastSimple) {\n                    // If the previous child was simple (string), we merge both\n                    vNodeChildren[vNodeChildren.length - 1].$text$ += child;\n                }\n                else {\n                    // Append a new vNode, if it's text, we create a text vNode\n                    vNodeChildren.push(simple ? newVNode(null, child) : child);\n                }\n                lastSimple = simple;\n            }\n        }\n    };\n    walk(children);\n    if (vnodeData) {\n        // normalize class / classname attributes\n        if (vnodeData.key) {\n            key = vnodeData.key;\n        }\n        {\n            const classData = vnodeData.className || vnodeData.class;\n            if (classData) {\n                vnodeData.class =\n                    typeof classData !== 'object'\n                        ? classData\n                        : Object.keys(classData)\n                            .filter((k) => classData[k])\n                            .join(' ');\n            }\n        }\n    }\n    if (typeof nodeName === 'function') {\n        // nodeName is a functional component\n        return nodeName(vnodeData === null ? {} : vnodeData, vNodeChildren, vdomFnUtils);\n    }\n    const vnode = newVNode(nodeName, null);\n    vnode.$attrs$ = vnodeData;\n    if (vNodeChildren.length > 0) {\n        vnode.$children$ = vNodeChildren;\n    }\n    {\n        vnode.$key$ = key;\n    }\n    return vnode;\n};\nconst newVNode = (tag, text) => {\n    const vnode = {\n        $flags$: 0,\n        $tag$: tag,\n        $text$: text,\n        $elm$: null,\n        $children$: null,\n    };\n    {\n        vnode.$attrs$ = null;\n    }\n    {\n        vnode.$key$ = null;\n    }\n    return vnode;\n};\nconst Host = {};\nconst isHost = (node) => node && node.$tag$ === Host;\nconst vdomFnUtils = {\n    forEach: (children, cb) => children.map(convertToPublic).forEach(cb),\n    map: (children, cb) => children.map(convertToPublic).map(cb).map(convertToPrivate),\n};\nconst convertToPublic = (node) => ({\n    vattrs: node.$attrs$,\n    vchildren: node.$children$,\n    vkey: node.$key$,\n    vname: node.$name$,\n    vtag: node.$tag$,\n    vtext: node.$text$,\n});\nconst convertToPrivate = (node) => {\n    if (typeof node.vtag === 'function') {\n        const vnodeData = Object.assign({}, node.vattrs);\n        if (node.vkey) {\n            vnodeData.key = node.vkey;\n        }\n        if (node.vname) {\n            vnodeData.name = node.vname;\n        }\n        return h(node.vtag, vnodeData, ...(node.vchildren || []));\n    }\n    const vnode = newVNode(node.vtag, node.vtext);\n    vnode.$attrs$ = node.vattrs;\n    vnode.$children$ = node.vchildren;\n    vnode.$key$ = node.vkey;\n    vnode.$name$ = node.vname;\n    return vnode;\n};\n/**\n * Production setAccessor() function based on Preact by\n * Jason Miller (@developit)\n * Licensed under the MIT License\n * https://github.com/developit/preact/blob/master/LICENSE\n *\n * Modified for Stencil's compiler and vdom\n */\nconst setAccessor = (elm, memberName, oldValue, newValue, isSvg, flags) => {\n    if (oldValue !== newValue) {\n        let isProp = isMemberInElement(elm, memberName);\n        let ln = memberName.toLowerCase();\n        if (memberName === 'class') {\n            const classList = elm.classList;\n            const oldClasses = parseClassList(oldValue);\n            const newClasses = parseClassList(newValue);\n            classList.remove(...oldClasses.filter((c) => c && !newClasses.includes(c)));\n            classList.add(...newClasses.filter((c) => c && !oldClasses.includes(c)));\n        }\n        else if (memberName === 'style') {\n            // update style attribute, css properties and values\n            {\n                for (const prop in oldValue) {\n                    if (!newValue || newValue[prop] == null) {\n                        if (prop.includes('-')) {\n                            elm.style.removeProperty(prop);\n                        }\n                        else {\n                            elm.style[prop] = '';\n                        }\n                    }\n                }\n            }\n            for (const prop in newValue) {\n                if (!oldValue || newValue[prop] !== oldValue[prop]) {\n                    if (prop.includes('-')) {\n                        elm.style.setProperty(prop, newValue[prop]);\n                    }\n                    else {\n                        elm.style[prop] = newValue[prop];\n                    }\n                }\n            }\n        }\n        else if (memberName === 'key')\n            ;\n        else if (memberName === 'ref') {\n            // minifier will clean this up\n            if (newValue) {\n                newValue(elm);\n            }\n        }\n        else if ((!isProp ) &&\n            memberName[0] === 'o' &&\n            memberName[1] === 'n') {\n            // Event Handlers\n            // so if the member name starts with \"on\" and the 3rd characters is\n            // a capital letter, and it's not already a member on the element,\n            // then we're assuming it's an event listener\n            if (memberName[2] === '-') {\n                // on- prefixed events\n                // allows to be explicit about the dom event to listen without any magic\n                // under the hood:\n                // <my-cmp on-click> // listens for \"click\"\n                // <my-cmp on-Click> // listens for \"Click\"\n                // <my-cmp on-ionChange> // listens for \"ionChange\"\n                // <my-cmp on-EVENTS> // listens for \"EVENTS\"\n                memberName = memberName.slice(3);\n            }\n            else if (isMemberInElement(win, ln)) {\n                // standard event\n                // the JSX attribute could have been \"onMouseOver\" and the\n                // member name \"onmouseover\" is on the window's prototype\n                // so let's add the listener \"mouseover\", which is all lowercased\n                memberName = ln.slice(2);\n            }\n            else {\n                // custom event\n                // the JSX attribute could have been \"onMyCustomEvent\"\n                // so let's trim off the \"on\" prefix and lowercase the first character\n                // and add the listener \"myCustomEvent\"\n                // except for the first character, we keep the event name case\n                memberName = ln[2] + memberName.slice(3);\n            }\n            if (oldValue) {\n                plt.rel(elm, memberName, oldValue, false);\n            }\n            if (newValue) {\n                plt.ael(elm, memberName, newValue, false);\n            }\n        }\n        else {\n            // Set property if it exists and it's not a SVG\n            const isComplex = isComplexType(newValue);\n            if ((isProp || (isComplex && newValue !== null)) && !isSvg) {\n                try {\n                    if (!elm.tagName.includes('-')) {\n                        let n = newValue == null ? '' : newValue;\n                        // Workaround for Safari, moving the <input> caret when re-assigning the same valued\n                        if (memberName === 'list') {\n                            isProp = false;\n                        }\n                        else if (oldValue == null || elm[memberName] != n) {\n                            elm[memberName] = n;\n                        }\n                    }\n                    else {\n                        elm[memberName] = newValue;\n                    }\n                }\n                catch (e) { }\n            }\n            /**\n             * Need to manually update attribute if:\n             * - memberName is not an attribute\n             * - if we are rendering the host element in order to reflect attribute\n             * - if it's a SVG, since properties might not work in <svg>\n             * - if the newValue is null/undefined or 'false'.\n             */\n            let xlink = false;\n            {\n                if (ln !== (ln = ln.replace(/^xlink\\:?/, ''))) {\n                    memberName = ln;\n                    xlink = true;\n                }\n            }\n            if (newValue == null || newValue === false) {\n                if (newValue !== false || elm.getAttribute(memberName) === '') {\n                    if (xlink) {\n                        elm.removeAttributeNS(XLINK_NS, memberName);\n                    }\n                    else {\n                        elm.removeAttribute(memberName);\n                    }\n                }\n            }\n            else if ((!isProp || flags & 4 /* isHost */ || isSvg) && !isComplex) {\n                newValue = newValue === true ? '' : newValue;\n                if (xlink) {\n                    elm.setAttributeNS(XLINK_NS, memberName, newValue);\n                }\n                else {\n                    elm.setAttribute(memberName, newValue);\n                }\n            }\n        }\n    }\n};\nconst parseClassListRegex = /\\s/;\nconst parseClassList = (value) => (!value ? [] : value.split(parseClassListRegex));\nconst updateElement = (oldVnode, newVnode, isSvgMode, memberName) => {\n    // if the element passed in is a shadow root, which is a document fragment\n    // then we want to be adding attrs/props to the shadow root's \"host\" element\n    // if it's not a shadow root, then we add attrs/props to the same element\n    const elm = newVnode.$elm$.nodeType === 11 /* DocumentFragment */ && newVnode.$elm$.host\n        ? newVnode.$elm$.host\n        : newVnode.$elm$;\n    const oldVnodeAttrs = (oldVnode && oldVnode.$attrs$) || EMPTY_OBJ;\n    const newVnodeAttrs = newVnode.$attrs$ || EMPTY_OBJ;\n    {\n        // remove attributes no longer present on the vnode by setting them to undefined\n        for (memberName in oldVnodeAttrs) {\n            if (!(memberName in newVnodeAttrs)) {\n                setAccessor(elm, memberName, oldVnodeAttrs[memberName], undefined, isSvgMode, newVnode.$flags$);\n            }\n        }\n    }\n    // add new & update changed attributes\n    for (memberName in newVnodeAttrs) {\n        setAccessor(elm, memberName, oldVnodeAttrs[memberName], newVnodeAttrs[memberName], isSvgMode, newVnode.$flags$);\n    }\n};\nconst createElm = (oldParentVNode, newParentVNode, childIndex, parentElm) => {\n    // tslint:disable-next-line: prefer-const\n    let newVNode = newParentVNode.$children$[childIndex];\n    let i = 0;\n    let elm;\n    let childNode;\n    if (newVNode.$text$ !== null) {\n        // create text node\n        elm = newVNode.$elm$ = doc.createTextNode(newVNode.$text$);\n    }\n    else {\n        // create element\n        elm = newVNode.$elm$ = (doc.createElement(newVNode.$tag$));\n        // add css classes, attrs, props, listeners, etc.\n        {\n            updateElement(null, newVNode, isSvgMode);\n        }\n        if (isDef(scopeId) && elm['s-si'] !== scopeId) {\n            // if there is a scopeId and this is the initial render\n            // then let's add the scopeId as a css class\n            elm.classList.add((elm['s-si'] = scopeId));\n        }\n        if (newVNode.$children$) {\n            for (i = 0; i < newVNode.$children$.length; ++i) {\n                // create the node\n                childNode = createElm(oldParentVNode, newVNode, i);\n                // return node could have been null\n                if (childNode) {\n                    // append our new node\n                    elm.appendChild(childNode);\n                }\n            }\n        }\n    }\n    return elm;\n};\nconst addVnodes = (parentElm, before, parentVNode, vnodes, startIdx, endIdx) => {\n    let containerElm = (parentElm);\n    let childNode;\n    if (containerElm.shadowRoot && containerElm.tagName === hostTagName) {\n        containerElm = containerElm.shadowRoot;\n    }\n    for (; startIdx <= endIdx; ++startIdx) {\n        if (vnodes[startIdx]) {\n            childNode = createElm(null, parentVNode, startIdx);\n            if (childNode) {\n                vnodes[startIdx].$elm$ = childNode;\n                containerElm.insertBefore(childNode, before);\n            }\n        }\n    }\n};\nconst removeVnodes = (vnodes, startIdx, endIdx, vnode, elm) => {\n    for (; startIdx <= endIdx; ++startIdx) {\n        if ((vnode = vnodes[startIdx])) {\n            elm = vnode.$elm$;\n            callNodeRefs(vnode);\n            // remove the vnode's element from the dom\n            elm.remove();\n        }\n    }\n};\nconst updateChildren = (parentElm, oldCh, newVNode, newCh) => {\n    let oldStartIdx = 0;\n    let newStartIdx = 0;\n    let idxInOld = 0;\n    let i = 0;\n    let oldEndIdx = oldCh.length - 1;\n    let oldStartVnode = oldCh[0];\n    let oldEndVnode = oldCh[oldEndIdx];\n    let newEndIdx = newCh.length - 1;\n    let newStartVnode = newCh[0];\n    let newEndVnode = newCh[newEndIdx];\n    let node;\n    let elmToMove;\n    while (oldStartIdx <= oldEndIdx && newStartIdx <= newEndIdx) {\n        if (oldStartVnode == null) {\n            // Vnode might have been moved left\n            oldStartVnode = oldCh[++oldStartIdx];\n        }\n        else if (oldEndVnode == null) {\n            oldEndVnode = oldCh[--oldEndIdx];\n        }\n        else if (newStartVnode == null) {\n            newStartVnode = newCh[++newStartIdx];\n        }\n        else if (newEndVnode == null) {\n            newEndVnode = newCh[--newEndIdx];\n        }\n        else if (isSameVnode(oldStartVnode, newStartVnode)) {\n            patch(oldStartVnode, newStartVnode);\n            oldStartVnode = oldCh[++oldStartIdx];\n            newStartVnode = newCh[++newStartIdx];\n        }\n        else if (isSameVnode(oldEndVnode, newEndVnode)) {\n            patch(oldEndVnode, newEndVnode);\n            oldEndVnode = oldCh[--oldEndIdx];\n            newEndVnode = newCh[--newEndIdx];\n        }\n        else if (isSameVnode(oldStartVnode, newEndVnode)) {\n            patch(oldStartVnode, newEndVnode);\n            parentElm.insertBefore(oldStartVnode.$elm$, oldEndVnode.$elm$.nextSibling);\n            oldStartVnode = oldCh[++oldStartIdx];\n            newEndVnode = newCh[--newEndIdx];\n        }\n        else if (isSameVnode(oldEndVnode, newStartVnode)) {\n            patch(oldEndVnode, newStartVnode);\n            parentElm.insertBefore(oldEndVnode.$elm$, oldStartVnode.$elm$);\n            oldEndVnode = oldCh[--oldEndIdx];\n            newStartVnode = newCh[++newStartIdx];\n        }\n        else {\n            // createKeyToOldIdx\n            idxInOld = -1;\n            {\n                for (i = oldStartIdx; i <= oldEndIdx; ++i) {\n                    if (oldCh[i] && oldCh[i].$key$ !== null && oldCh[i].$key$ === newStartVnode.$key$) {\n                        idxInOld = i;\n                        break;\n                    }\n                }\n            }\n            if (idxInOld >= 0) {\n                elmToMove = oldCh[idxInOld];\n                if (elmToMove.$tag$ !== newStartVnode.$tag$) {\n                    node = createElm(oldCh && oldCh[newStartIdx], newVNode, idxInOld);\n                }\n                else {\n                    patch(elmToMove, newStartVnode);\n                    oldCh[idxInOld] = undefined;\n                    node = elmToMove.$elm$;\n                }\n                newStartVnode = newCh[++newStartIdx];\n            }\n            else {\n                // new element\n                node = createElm(oldCh && oldCh[newStartIdx], newVNode, newStartIdx);\n                newStartVnode = newCh[++newStartIdx];\n            }\n            if (node) {\n                {\n                    oldStartVnode.$elm$.parentNode.insertBefore(node, oldStartVnode.$elm$);\n                }\n            }\n        }\n    }\n    if (oldStartIdx > oldEndIdx) {\n        addVnodes(parentElm, newCh[newEndIdx + 1] == null ? null : newCh[newEndIdx + 1].$elm$, newVNode, newCh, newStartIdx, newEndIdx);\n    }\n    else if (newStartIdx > newEndIdx) {\n        removeVnodes(oldCh, oldStartIdx, oldEndIdx);\n    }\n};\nconst isSameVnode = (vnode1, vnode2) => {\n    // compare if two vnode to see if they're \"technically\" the same\n    // need to have the same element tag, and same key to be the same\n    if (vnode1.$tag$ === vnode2.$tag$) {\n        {\n            return vnode1.$key$ === vnode2.$key$;\n        }\n    }\n    return false;\n};\nconst patch = (oldVNode, newVNode) => {\n    const elm = (newVNode.$elm$ = oldVNode.$elm$);\n    const oldChildren = oldVNode.$children$;\n    const newChildren = newVNode.$children$;\n    const tag = newVNode.$tag$;\n    const text = newVNode.$text$;\n    if (text === null) {\n        // element node\n        {\n            if (tag === 'slot')\n                ;\n            else {\n                // either this is the first render of an element OR it's an update\n                // AND we already know it's possible it could have changed\n                // this updates the element's css classes, attrs, props, listeners, etc.\n                updateElement(oldVNode, newVNode, isSvgMode);\n            }\n        }\n        if (oldChildren !== null && newChildren !== null) {\n            // looks like there's child vnodes for both the old and new vnodes\n            updateChildren(elm, oldChildren, newVNode, newChildren);\n        }\n        else if (newChildren !== null) {\n            // no old child vnodes, but there are new child vnodes to add\n            if (oldVNode.$text$ !== null) {\n                // the old vnode was text, so be sure to clear it out\n                elm.textContent = '';\n            }\n            // add the new vnode children\n            addVnodes(elm, null, newVNode, newChildren, 0, newChildren.length - 1);\n        }\n        else if (oldChildren !== null) {\n            // no new child vnodes, but there are old child vnodes to remove\n            removeVnodes(oldChildren, 0, oldChildren.length - 1);\n        }\n    }\n    else if (oldVNode.$text$ !== text) {\n        // update the text content for the text only vnode\n        // and also only if the text is different than before\n        elm.data = text;\n    }\n};\nconst callNodeRefs = (vNode) => {\n    {\n        vNode.$attrs$ && vNode.$attrs$.ref && vNode.$attrs$.ref(null);\n        vNode.$children$ && vNode.$children$.map(callNodeRefs);\n    }\n};\nconst renderVdom = (hostRef, renderFnResults) => {\n    const hostElm = hostRef.$hostElement$;\n    const cmpMeta = hostRef.$cmpMeta$;\n    const oldVNode = hostRef.$vnode$ || newVNode(null, null);\n    const rootVnode = isHost(renderFnResults) ? renderFnResults : h(null, null, renderFnResults);\n    hostTagName = hostElm.tagName;\n    if (cmpMeta.$attrsToReflect$) {\n        rootVnode.$attrs$ = rootVnode.$attrs$ || {};\n        cmpMeta.$attrsToReflect$.map(([propName, attribute]) => (rootVnode.$attrs$[attribute] = hostElm[propName]));\n    }\n    rootVnode.$tag$ = null;\n    rootVnode.$flags$ |= 4 /* isHost */;\n    hostRef.$vnode$ = rootVnode;\n    rootVnode.$elm$ = oldVNode.$elm$ = (hostElm.shadowRoot || hostElm );\n    {\n        scopeId = hostElm['s-sc'];\n    }\n    // synchronous patch\n    patch(oldVNode, rootVnode);\n};\nconst getElement = (ref) => (getHostRef(ref).$hostElement$ );\nconst createEvent = (ref, name, flags) => {\n    const elm = getElement(ref);\n    return {\n        emit: (detail) => {\n            return emitEvent(elm, name, {\n                bubbles: !!(flags & 4 /* Bubbles */),\n                composed: !!(flags & 2 /* Composed */),\n                cancelable: !!(flags & 1 /* Cancellable */),\n                detail,\n            });\n        },\n    };\n};\n/**\n * Helper function to create & dispatch a custom Event on a provided target\n * @param elm the target of the Event\n * @param name the name to give the custom Event\n * @param opts options for configuring a custom Event\n * @returns the custom Event\n */\nconst emitEvent = (elm, name, opts) => {\n    const ev = plt.ce(name, opts);\n    elm.dispatchEvent(ev);\n    return ev;\n};\nconst attachToAncestor = (hostRef, ancestorComponent) => {\n    if (ancestorComponent && !hostRef.$onRenderResolve$ && ancestorComponent['s-p']) {\n        ancestorComponent['s-p'].push(new Promise((r) => (hostRef.$onRenderResolve$ = r)));\n    }\n};\nconst scheduleUpdate = (hostRef, isInitialLoad) => {\n    {\n        hostRef.$flags$ |= 16 /* isQueuedForUpdate */;\n    }\n    if (hostRef.$flags$ & 4 /* isWaitingForChildren */) {\n        hostRef.$flags$ |= 512 /* needsRerender */;\n        return;\n    }\n    attachToAncestor(hostRef, hostRef.$ancestorComponent$);\n    // there is no ancestor component or the ancestor component\n    // has already fired off its lifecycle update then\n    // fire off the initial update\n    const dispatch = () => dispatchHooks(hostRef, isInitialLoad);\n    return writeTask(dispatch) ;\n};\nconst dispatchHooks = (hostRef, isInitialLoad) => {\n    const endSchedule = createTime('scheduleUpdate', hostRef.$cmpMeta$.$tagName$);\n    const instance = hostRef.$lazyInstance$ ;\n    let promise;\n    if (isInitialLoad) {\n        {\n            hostRef.$flags$ |= 256 /* isListenReady */;\n            if (hostRef.$queuedListeners$) {\n                hostRef.$queuedListeners$.map(([methodName, event]) => safeCall(instance, methodName, event));\n                hostRef.$queuedListeners$ = null;\n            }\n        }\n        {\n            promise = safeCall(instance, 'componentWillLoad');\n        }\n    }\n    endSchedule();\n    return then(promise, () => updateComponent(hostRef, instance, isInitialLoad));\n};\nconst updateComponent = async (hostRef, instance, isInitialLoad) => {\n    // updateComponent\n    const elm = hostRef.$hostElement$;\n    const endUpdate = createTime('update', hostRef.$cmpMeta$.$tagName$);\n    const rc = elm['s-rc'];\n    if (isInitialLoad) {\n        // DOM WRITE!\n        attachStyles(hostRef);\n    }\n    const endRender = createTime('render', hostRef.$cmpMeta$.$tagName$);\n    {\n        callRender(hostRef, instance);\n    }\n    if (rc) {\n        // ok, so turns out there are some child host elements\n        // waiting on this parent element to load\n        // let's fire off all update callbacks waiting\n        rc.map((cb) => cb());\n        elm['s-rc'] = undefined;\n    }\n    endRender();\n    endUpdate();\n    {\n        const childrenPromises = elm['s-p'];\n        const postUpdate = () => postUpdateComponent(hostRef);\n        if (childrenPromises.length === 0) {\n            postUpdate();\n        }\n        else {\n            Promise.all(childrenPromises).then(postUpdate);\n            hostRef.$flags$ |= 4 /* isWaitingForChildren */;\n            childrenPromises.length = 0;\n        }\n    }\n};\nconst callRender = (hostRef, instance, elm) => {\n    try {\n        instance = instance.render() ;\n        {\n            hostRef.$flags$ &= ~16 /* isQueuedForUpdate */;\n        }\n        {\n            hostRef.$flags$ |= 2 /* hasRendered */;\n        }\n        {\n            {\n                // looks like we've got child nodes to render into this host element\n                // or we need to update the css class/attrs on the host element\n                // DOM WRITE!\n                {\n                    renderVdom(hostRef, instance);\n                }\n            }\n        }\n    }\n    catch (e) {\n        consoleError(e, hostRef.$hostElement$);\n    }\n    return null;\n};\nconst postUpdateComponent = (hostRef) => {\n    const tagName = hostRef.$cmpMeta$.$tagName$;\n    const elm = hostRef.$hostElement$;\n    const endPostUpdate = createTime('postUpdate', tagName);\n    const instance = hostRef.$lazyInstance$ ;\n    const ancestorComponent = hostRef.$ancestorComponent$;\n    if (!(hostRef.$flags$ & 64 /* hasLoadedComponent */)) {\n        hostRef.$flags$ |= 64 /* hasLoadedComponent */;\n        {\n            // DOM WRITE!\n            addHydratedFlag(elm);\n        }\n        {\n            safeCall(instance, 'componentDidLoad');\n        }\n        endPostUpdate();\n        {\n            hostRef.$onReadyResolve$(elm);\n            if (!ancestorComponent) {\n                appDidLoad();\n            }\n        }\n    }\n    else {\n        {\n            safeCall(instance, 'componentDidUpdate');\n        }\n        endPostUpdate();\n    }\n    {\n        hostRef.$onInstanceResolve$(elm);\n    }\n    // load events fire from bottom to top\n    // the deepest elements load first then bubbles up\n    {\n        if (hostRef.$onRenderResolve$) {\n            hostRef.$onRenderResolve$();\n            hostRef.$onRenderResolve$ = undefined;\n        }\n        if (hostRef.$flags$ & 512 /* needsRerender */) {\n            nextTick(() => scheduleUpdate(hostRef, false));\n        }\n        hostRef.$flags$ &= ~(4 /* isWaitingForChildren */ | 512 /* needsRerender */);\n    }\n    // ( •_•)\n    // ( •_•)>⌐■-■\n    // (⌐■_■)\n};\nconst appDidLoad = (who) => {\n    // on appload\n    // we have finish the first big initial render\n    {\n        addHydratedFlag(doc.documentElement);\n    }\n    nextTick(() => emitEvent(win, 'appload', { detail: { namespace: NAMESPACE } }));\n};\nconst safeCall = (instance, method, arg) => {\n    if (instance && instance[method]) {\n        try {\n            return instance[method](arg);\n        }\n        catch (e) {\n            consoleError(e);\n        }\n    }\n    return undefined;\n};\nconst then = (promise, thenFn) => {\n    return promise && promise.then ? promise.then(thenFn) : thenFn();\n};\nconst addHydratedFlag = (elm) => elm.classList.add('hydrated')\n    ;\nconst parsePropertyValue = (propValue, propType) => {\n    // ensure this value is of the correct prop type\n    if (propValue != null && !isComplexType(propValue)) {\n        if (propType & 4 /* Boolean */) {\n            // per the HTML spec, any string value means it is a boolean true value\n            // but we'll cheat here and say that the string \"false\" is the boolean false\n            return propValue === 'false' ? false : propValue === '' || !!propValue;\n        }\n        if (propType & 1 /* String */) {\n            // could have been passed as a number or boolean\n            // but we still want it as a string\n            return String(propValue);\n        }\n        // redundant return here for better minification\n        return propValue;\n    }\n    // not sure exactly what type we want\n    // so no need to change to a different type\n    return propValue;\n};\nconst getValue = (ref, propName) => getHostRef(ref).$instanceValues$.get(propName);\nconst setValue = (ref, propName, newVal, cmpMeta) => {\n    // check our new property value against our internal value\n    const hostRef = getHostRef(ref);\n    const elm = hostRef.$hostElement$ ;\n    const oldVal = hostRef.$instanceValues$.get(propName);\n    const flags = hostRef.$flags$;\n    const instance = hostRef.$lazyInstance$ ;\n    newVal = parsePropertyValue(newVal, cmpMeta.$members$[propName][0]);\n    if ((!(flags & 8 /* isConstructingInstance */) || oldVal === undefined) && newVal !== oldVal) {\n        // gadzooks! the property's value has changed!!\n        // set our new value!\n        hostRef.$instanceValues$.set(propName, newVal);\n        if (instance) {\n            // get an array of method names of watch functions to call\n            if (cmpMeta.$watchers$ && flags & 128 /* isWatchReady */) {\n                const watchMethods = cmpMeta.$watchers$[propName];\n                if (watchMethods) {\n                    // this instance is watching for when this property changed\n                    watchMethods.map((watchMethodName) => {\n                        try {\n                            // fire off each of the watch methods that are watching this property\n                            instance[watchMethodName](newVal, oldVal, propName);\n                        }\n                        catch (e) {\n                            consoleError(e, elm);\n                        }\n                    });\n                }\n            }\n            if ((flags & (2 /* hasRendered */ | 16 /* isQueuedForUpdate */)) === 2 /* hasRendered */) {\n                // looks like this value actually changed, so we've got work to do!\n                // but only if we've already rendered, otherwise just chill out\n                // queue that we need to do an update, but don't worry about queuing\n                // up millions cuz this function ensures it only runs once\n                scheduleUpdate(hostRef, false);\n            }\n        }\n    }\n};\nconst proxyComponent = (Cstr, cmpMeta, flags) => {\n    if (cmpMeta.$members$) {\n        if (Cstr.watchers) {\n            cmpMeta.$watchers$ = Cstr.watchers;\n        }\n        // It's better to have a const than two Object.entries()\n        const members = Object.entries(cmpMeta.$members$);\n        const prototype = Cstr.prototype;\n        members.map(([memberName, [memberFlags]]) => {\n            if ((memberFlags & 31 /* Prop */ ||\n                    ((flags & 2 /* proxyState */) && memberFlags & 32 /* State */))) {\n                // proxyComponent - prop\n                Object.defineProperty(prototype, memberName, {\n                    get() {\n                        // proxyComponent, get value\n                        return getValue(this, memberName);\n                    },\n                    set(newValue) {\n                        // proxyComponent, set value\n                        setValue(this, memberName, newValue, cmpMeta);\n                    },\n                    configurable: true,\n                    enumerable: true,\n                });\n            }\n            else if (flags & 1 /* isElementConstructor */ &&\n                memberFlags & 64 /* Method */) {\n                // proxyComponent - method\n                Object.defineProperty(prototype, memberName, {\n                    value(...args) {\n                        const ref = getHostRef(this);\n                        return ref.$onInstancePromise$.then(() => ref.$lazyInstance$[memberName](...args));\n                    },\n                });\n            }\n        });\n        if ((flags & 1 /* isElementConstructor */)) {\n            const attrNameToPropName = new Map();\n            prototype.attributeChangedCallback = function (attrName, _oldValue, newValue) {\n                plt.jmp(() => {\n                    const propName = attrNameToPropName.get(attrName);\n                    //  In a web component lifecycle the attributeChangedCallback runs prior to connectedCallback\n                    //  in the case where an attribute was set inline.\n                    //  ```html\n                    //    <my-component some-attribute=\"some-value\"></my-component>\n                    //  ```\n                    //\n                    //  There is an edge case where a developer sets the attribute inline on a custom element and then\n                    //  programmatically changes it before it has been upgraded as shown below:\n                    //\n                    //  ```html\n                    //    <!-- this component has _not_ been upgraded yet -->\n                    //    <my-component id=\"test\" some-attribute=\"some-value\"></my-component>\n                    //    <script>\n                    //      // grab non-upgraded component\n                    //      el = document.querySelector(\"#test\");\n                    //      el.someAttribute = \"another-value\";\n                    //      // upgrade component\n                    //      customElements.define('my-component', MyComponent);\n                    //    </script>\n                    //  ```\n                    //  In this case if we do not unshadow here and use the value of the shadowing property, attributeChangedCallback\n                    //  will be called with `newValue = \"some-value\"` and will set the shadowed property (this.someAttribute = \"another-value\")\n                    //  to the value that was set inline i.e. \"some-value\" from above example. When\n                    //  the connectedCallback attempts to unshadow it will use \"some-value\" as the initial value rather than \"another-value\"\n                    //\n                    //  The case where the attribute was NOT set inline but was not set programmatically shall be handled/unshadowed\n                    //  by connectedCallback as this attributeChangedCallback will not fire.\n                    //\n                    //  https://developers.google.com/web/fundamentals/web-components/best-practices#lazy-properties\n                    //\n                    //  TODO(STENCIL-16) we should think about whether or not we actually want to be reflecting the attributes to\n                    //  properties here given that this goes against best practices outlined here\n                    //  https://developers.google.com/web/fundamentals/web-components/best-practices#avoid-reentrancy\n                    if (this.hasOwnProperty(propName)) {\n                        newValue = this[propName];\n                        delete this[propName];\n                    }\n                    else if (prototype.hasOwnProperty(propName) &&\n                        typeof this[propName] === 'number' &&\n                        this[propName] == newValue) {\n                        // if the propName exists on the prototype of `Cstr`, this update may be a result of Stencil using native\n                        // APIs to reflect props as attributes. Calls to `setAttribute(someElement, propName)` will result in\n                        // `propName` to be converted to a `DOMString`, which may not be what we want for other primitive props.\n                        return;\n                    }\n                    this[propName] = newValue === null && typeof this[propName] === 'boolean' ? false : newValue;\n                });\n            };\n            // create an array of attributes to observe\n            // and also create a map of html attribute name to js property name\n            Cstr.observedAttributes = members\n                .filter(([_, m]) => m[0] & 15 /* HasAttribute */) // filter to only keep props that should match attributes\n                .map(([propName, m]) => {\n                const attrName = m[1] || propName;\n                attrNameToPropName.set(attrName, propName);\n                if (m[0] & 512 /* ReflectAttr */) {\n                    cmpMeta.$attrsToReflect$.push([propName, attrName]);\n                }\n                return attrName;\n            });\n        }\n    }\n    return Cstr;\n};\nconst initializeComponent = async (elm, hostRef, cmpMeta, hmrVersionId, Cstr) => {\n    // initializeComponent\n    if ((hostRef.$flags$ & 32 /* hasInitializedComponent */) === 0) {\n        {\n            // we haven't initialized this element yet\n            hostRef.$flags$ |= 32 /* hasInitializedComponent */;\n            // lazy loaded components\n            // request the component's implementation to be\n            // wired up with the host element\n            Cstr = loadModule(cmpMeta);\n            if (Cstr.then) {\n                // Await creates a micro-task avoid if possible\n                const endLoad = uniqueTime();\n                Cstr = await Cstr;\n                endLoad();\n            }\n            if (!Cstr.isProxied) {\n                // we've never proxied this Constructor before\n                // let's add the getters/setters to its prototype before\n                // the first time we create an instance of the implementation\n                {\n                    cmpMeta.$watchers$ = Cstr.watchers;\n                }\n                proxyComponent(Cstr, cmpMeta, 2 /* proxyState */);\n                Cstr.isProxied = true;\n            }\n            const endNewInstance = createTime('createInstance', cmpMeta.$tagName$);\n            // ok, time to construct the instance\n            // but let's keep track of when we start and stop\n            // so that the getters/setters don't incorrectly step on data\n            {\n                hostRef.$flags$ |= 8 /* isConstructingInstance */;\n            }\n            // construct the lazy-loaded component implementation\n            // passing the hostRef is very important during\n            // construction in order to directly wire together the\n            // host element and the lazy-loaded instance\n            try {\n                new Cstr(hostRef);\n            }\n            catch (e) {\n                consoleError(e);\n            }\n            {\n                hostRef.$flags$ &= ~8 /* isConstructingInstance */;\n            }\n            {\n                hostRef.$flags$ |= 128 /* isWatchReady */;\n            }\n            endNewInstance();\n        }\n        if (Cstr.style) {\n            // this component has styles but we haven't registered them yet\n            let style = Cstr.style;\n            const scopeId = getScopeId(cmpMeta);\n            if (!styles.has(scopeId)) {\n                const endRegisterStyles = createTime('registerStyles', cmpMeta.$tagName$);\n                registerStyle(scopeId, style, !!(cmpMeta.$flags$ & 1 /* shadowDomEncapsulation */));\n                endRegisterStyles();\n            }\n        }\n    }\n    // we've successfully created a lazy instance\n    const ancestorComponent = hostRef.$ancestorComponent$;\n    const schedule = () => scheduleUpdate(hostRef, true);\n    if (ancestorComponent && ancestorComponent['s-rc']) {\n        // this is the initial load and this component it has an ancestor component\n        // but the ancestor component has NOT fired its will update lifecycle yet\n        // so let's just cool our jets and wait for the ancestor to continue first\n        // this will get fired off when the ancestor component\n        // finally gets around to rendering its lazy self\n        // fire off the initial update\n        ancestorComponent['s-rc'].push(schedule);\n    }\n    else {\n        schedule();\n    }\n};\nconst connectedCallback = (elm) => {\n    if ((plt.$flags$ & 1 /* isTmpDisconnected */) === 0) {\n        const hostRef = getHostRef(elm);\n        const cmpMeta = hostRef.$cmpMeta$;\n        const endConnected = createTime('connectedCallback', cmpMeta.$tagName$);\n        if (!(hostRef.$flags$ & 1 /* hasConnected */)) {\n            // first time this component has connected\n            hostRef.$flags$ |= 1 /* hasConnected */;\n            {\n                // find the first ancestor component (if there is one) and register\n                // this component as one of the actively loading child components for its ancestor\n                let ancestorComponent = elm;\n                while ((ancestorComponent = ancestorComponent.parentNode || ancestorComponent.host)) {\n                    // climb up the ancestors looking for the first\n                    // component that hasn't finished its lifecycle update yet\n                    if (ancestorComponent['s-p']) {\n                        // we found this components first ancestor component\n                        // keep a reference to this component's ancestor component\n                        attachToAncestor(hostRef, (hostRef.$ancestorComponent$ = ancestorComponent));\n                        break;\n                    }\n                }\n            }\n            // Lazy properties\n            // https://developers.google.com/web/fundamentals/web-components/best-practices#lazy-properties\n            if (cmpMeta.$members$) {\n                Object.entries(cmpMeta.$members$).map(([memberName, [memberFlags]]) => {\n                    if (memberFlags & 31 /* Prop */ && elm.hasOwnProperty(memberName)) {\n                        const value = elm[memberName];\n                        delete elm[memberName];\n                        elm[memberName] = value;\n                    }\n                });\n            }\n            {\n                initializeComponent(elm, hostRef, cmpMeta);\n            }\n        }\n        else {\n            // not the first time this has connected\n            // reattach any event listeners to the host\n            // since they would have been removed when disconnected\n            addHostEventListeners(elm, hostRef, cmpMeta.$listeners$);\n        }\n        endConnected();\n    }\n};\nconst disconnectedCallback = (elm) => {\n    if ((plt.$flags$ & 1 /* isTmpDisconnected */) === 0) {\n        const hostRef = getHostRef(elm);\n        {\n            if (hostRef.$rmListeners$) {\n                hostRef.$rmListeners$.map((rmListener) => rmListener());\n                hostRef.$rmListeners$ = undefined;\n            }\n        }\n    }\n};\nconst bootstrapLazy = (lazyBundles, options = {}) => {\n    const endBootstrap = createTime();\n    const cmpTags = [];\n    const exclude = options.exclude || [];\n    const customElements = win.customElements;\n    const head = doc.head;\n    const metaCharset = /*@__PURE__*/ head.querySelector('meta[charset]');\n    const visibilityStyle = /*@__PURE__*/ doc.createElement('style');\n    const deferredConnectedCallbacks = [];\n    let appLoadFallback;\n    let isBootstrapping = true;\n    Object.assign(plt, options);\n    plt.$resourcesUrl$ = new URL(options.resourcesUrl || './', doc.baseURI).href;\n    lazyBundles.map((lazyBundle) => {\n        lazyBundle[1].map((compactMeta) => {\n            const cmpMeta = {\n                $flags$: compactMeta[0],\n                $tagName$: compactMeta[1],\n                $members$: compactMeta[2],\n                $listeners$: compactMeta[3],\n            };\n            {\n                cmpMeta.$members$ = compactMeta[2];\n            }\n            {\n                cmpMeta.$listeners$ = compactMeta[3];\n            }\n            {\n                cmpMeta.$attrsToReflect$ = [];\n            }\n            {\n                cmpMeta.$watchers$ = {};\n            }\n            const tagName = cmpMeta.$tagName$;\n            const HostElement = class extends HTMLElement {\n                // StencilLazyHost\n                constructor(self) {\n                    // @ts-ignore\n                    super(self);\n                    self = this;\n                    registerHost(self, cmpMeta);\n                    if (cmpMeta.$flags$ & 1 /* shadowDomEncapsulation */) {\n                        // this component is using shadow dom\n                        // and this browser supports shadow dom\n                        // add the read-only property \"shadowRoot\" to the host element\n                        // adding the shadow root build conditionals to minimize runtime\n                        {\n                            {\n                                self.attachShadow({ mode: 'open' });\n                            }\n                        }\n                    }\n                }\n                connectedCallback() {\n                    if (appLoadFallback) {\n                        clearTimeout(appLoadFallback);\n                        appLoadFallback = null;\n                    }\n                    if (isBootstrapping) {\n                        // connectedCallback will be processed once all components have been registered\n                        deferredConnectedCallbacks.push(this);\n                    }\n                    else {\n                        plt.jmp(() => connectedCallback(this));\n                    }\n                }\n                disconnectedCallback() {\n                    plt.jmp(() => disconnectedCallback(this));\n                }\n                componentOnReady() {\n                    return getHostRef(this).$onReadyPromise$;\n                }\n            };\n            cmpMeta.$lazyBundleId$ = lazyBundle[0];\n            if (!exclude.includes(tagName) && !customElements.get(tagName)) {\n                cmpTags.push(tagName);\n                customElements.define(tagName, proxyComponent(HostElement, cmpMeta, 1 /* isElementConstructor */));\n            }\n        });\n    });\n    {\n        visibilityStyle.innerHTML = cmpTags + HYDRATED_CSS;\n        visibilityStyle.setAttribute('data-styles', '');\n        head.insertBefore(visibilityStyle, metaCharset ? metaCharset.nextSibling : head.firstChild);\n    }\n    // Process deferred connectedCallbacks now all components have been registered\n    isBootstrapping = false;\n    if (deferredConnectedCallbacks.length) {\n        deferredConnectedCallbacks.map((host) => host.connectedCallback());\n    }\n    else {\n        {\n            plt.jmp(() => (appLoadFallback = setTimeout(appDidLoad, 30)));\n        }\n    }\n    // Fallback appLoad event\n    endBootstrap();\n};\nconst hostRefs = new WeakMap();\nconst getHostRef = (ref) => hostRefs.get(ref);\nconst registerInstance = (lazyInstance, hostRef) => hostRefs.set((hostRef.$lazyInstance$ = lazyInstance), hostRef);\nconst registerHost = (elm, cmpMeta) => {\n    const hostRef = {\n        $flags$: 0,\n        $hostElement$: elm,\n        $cmpMeta$: cmpMeta,\n        $instanceValues$: new Map(),\n    };\n    {\n        hostRef.$onInstancePromise$ = new Promise((r) => (hostRef.$onInstanceResolve$ = r));\n    }\n    {\n        hostRef.$onReadyPromise$ = new Promise((r) => (hostRef.$onReadyResolve$ = r));\n        elm['s-p'] = [];\n        elm['s-rc'] = [];\n    }\n    addHostEventListeners(elm, hostRef, cmpMeta.$listeners$);\n    return hostRefs.set(elm, hostRef);\n};\nconst isMemberInElement = (elm, memberName) => memberName in elm;\nconst consoleError = (e, el) => (0, console.error)(e, el);\nconst cmpModules = /*@__PURE__*/ new Map();\nconst loadModule = (cmpMeta, hostRef, hmrVersionId) => {\n    // loadModuleImport\n    const exportName = cmpMeta.$tagName$.replace(/-/g, '_');\n    const bundleId = cmpMeta.$lazyBundleId$;\n    const module = cmpModules.get(bundleId) ;\n    if (module) {\n        return module[exportName];\n    }\n    return import(\n    /* webpackInclude: /\\.entry\\.js$/ */\n    /* webpackExclude: /\\.system\\.entry\\.js$/ */\n    /* webpackMode: \"lazy\" */\n    `./${bundleId}.entry.js${''}`).then((importedModule) => {\n        {\n            cmpModules.set(bundleId, importedModule);\n        }\n        return importedModule[exportName];\n    }, consoleError);\n};\nconst styles = new Map();\nconst queueDomReads = [];\nconst queueDomWrites = [];\nconst queueTask = (queue, write) => (cb) => {\n    queue.push(cb);\n    if (!queuePending) {\n        queuePending = true;\n        if (write && plt.$flags$ & 4 /* queueSync */) {\n            nextTick(flush);\n        }\n        else {\n            plt.raf(flush);\n        }\n    }\n};\nconst consume = (queue) => {\n    for (let i = 0; i < queue.length; i++) {\n        try {\n            queue[i](performance.now());\n        }\n        catch (e) {\n            consoleError(e);\n        }\n    }\n    queue.length = 0;\n};\nconst flush = () => {\n    // always force a bunch of medium callbacks to run, but still have\n    // a throttle on how many can run in a certain time\n    // DOM READS!!!\n    consume(queueDomReads);\n    // DOM WRITES!!!\n    {\n        consume(queueDomWrites);\n        if ((queuePending = queueDomReads.length > 0)) {\n            // still more to do yet, but we've run out of time\n            // let's let this thing cool off and try again in the next tick\n            plt.raf(flush);\n        }\n    }\n};\nconst nextTick = /*@__PURE__*/ (cb) => promiseResolve().then(cb);\nconst writeTask = /*@__PURE__*/ queueTask(queueDomWrites, true);\n\nexport { Host as H, bootstrapLazy as b, createEvent as c, getElement as g, h, promiseResolve as p, registerInstance as r };\n","var map = {\n\t\"./deckgo-highlight-code.entry.js\": [\n\t\t5533,\n\t\t533\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function() { return Object.keys(map); };\nwebpackAsyncContext.id = 9047;\nmodule.exports = webpackAsyncContext;","import React, { Component } from 'react'\nimport { menu } from '../settings'\n\nexport default class Menu extends Component {\n  render() {\n    return (\n      <div\n        className={\n          'css-menu ' + (this.props.direction === 'column' ? 'column' : 'row')\n        }\n      >\n        {menu.map((item) => (\n          <a target={item.target} href={item.href} key={item.name}>\n            <i className={'iconfont icon-' + item.icon} />\n            {item.name}\n          </a>\n        ))}\n      </div>\n    )\n  }\n}\n","import React from 'react'\nimport { Link } from 'gatsby'\nimport Menu from './Menu'\nimport { siteName, socialMedia } from '../settings'\n\nlet footerStyle = {\n  marginBottom: '1rem',\n}\n\nclass Layout extends React.Component {\n  state = {\n    menuState: false, // false for close, true for open\n    keyword: '',\n    animation: [],\n    year: '',\n    days: '',\n    theme: '',\n    logo: '/funny-eagle-light.jpg'\n  }\n  componentDidMount() {\n    this.setState({\n      theme: window.theme,\n      year: new Date().getFullYear(),\n      logo: \"/funny-eagle-light.jpg\",\n    })\n\n    const darkModeMediaQuery = window.matchMedia('(prefers-color-scheme: dark)')\n    darkModeMediaQuery.addListener((e) => {\n      const darkModeOn = e.matches\n      if (darkModeOn) {\n        this.setTheme('dark')\n      } else {\n        this.setTheme('light')\n      }\n    })\n  }\n  toggleTheme = () => {\n    if (this.state.theme === 'light') {\n      this.setTheme('dark')\n    } else {\n      this.setTheme('light')\n    }\n  }\n  setTheme = (themeName) => {\n    localStorage.setItem('theme', themeName)\n    document.documentElement.className = themeName + '-theme'\n    this.setState({\n      theme: themeName,\n    })\n  }\n  toggleMenuState = () => {\n    this.setState({\n      menuState: !this.state.menuState,\n    })\n  }\n  change = (e) => {\n    this.setState({\n      keyword: e.target.value,\n    })\n  }\n  search = () => {\n    window.open(\n      'https://cn.bing.com/search?q=site%3Afunnyeagle.cn%20' +\n        this.state.keyword\n    )\n  }\n  formatTime = (msTime) => {\n    const time = msTime / 1000\n    const day = Math.floor(time / 60 / 60 / 24)\n    return ` ${day} 天`\n  }\n  handleEnter = (e) => {\n    if (e.keyCode === 13) {\n      this.search()\n    }\n  }\n  render() {\n    const { menuState, days, year, theme , logo} = this.state\n    const { pageName, pageDescript, children, aside, className } = this.props\n\n    const websiteName = (\n      <div>\n        <Link\n          style={{\n            boxShadow: 'none',\n            textDecoration: 'none',\n            fontWeight: 200,\n          }}\n          className=\"usubeni\"\n          to={'/'}\n        >\n          <span className=\"logo-mobile\">{siteName}</span>\n        </Link>\n        \n        {pageName ? (\n          <div className=\"page-name\">\n            {'#' + pageName}\n          </div>\n        ) : null}\n      </div>\n    )\n    const descript = <div className=\"page-description\">{pageDescript}</div>\n    return (\n      <div className={className}>\n        <div className=\"css-main\">\n          <aside className={'css-aside ' + (menuState ? 'open' : 'close')}>\n            <header className=\"css-header\">\n              {websiteName}\n              <div className=\"menu-button\" onClick={this.toggleMenuState}>\n                <i\n                  className={\n                    'iconfont icon-' + (menuState ? 'close' : 'menu')\n                  }\n                />\n              </div>\n              <meta name=\"google-adsense-account\" content=\"ca-pub-1730830298664620\"></meta>\n              <script async src=\"https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-1730830298664620\" crossorigin=\"anonymous\"></script>\n            </header>\n            {aside ? (\n              <div\n                className=\"css-toc\"\n                onClick={this.toggleMenuState}\n                dangerouslySetInnerHTML={{\n                  __html: aside,\n                }}\n              />\n            ) : (\n              <React.Fragment>\n                <Menu direction=\"column\" />\n                <div style={{ textAlign: 'center', marginBottom: '20px' }}>\n                  <input\n                    placeholder=\"关键字，然后 Enter\"\n                    onChange={this.change}\n                    onKeyUp={this.handleEnter}\n                  />\n                </div>\n              </React.Fragment>\n            )}\n          </aside>\n          <article className=\"css-post\">{children}</article>\n        </div>\n        <footer>\n          <div className=\"social-media\" style={footerStyle}>\n            {socialMedia.map((item) => (\n              <a key={item.icon} target=\"_blank\" href={item.href}>\n                <i className={'iconfont icon-' + item.icon}></i>\n              </a>\n            ))}\n          </div>\n          <div style={footerStyle}>\n            © {year} FunnyEagle.CN • Theme{' '}\n            <a\n              className=\"usubeni\"\n              target=\"_blank\"\n              href=\"https://github.com/ssshooter/gatsby-theme-usubeni\"\n            >\n              usubeni\n            </a>{' '}\n            • Powered by{' '}\n            <a\n              className=\"usubeni\"\n              target=\"_blank\"\n              href=\"https://www.gatsbyjs.org/\"\n            >\n              Gatsbyjs\n            </a>\n            <br/>\n            <a href=\"https://beian.miit.gov.cn\">蜀ICP备2023036051号</a>\n          </div>\n        </footer>\n      \n        <div className=\"theme-toggle\" onClick={this.toggleTheme}>\n          {theme === 'light' ? '☀' : '☾'}\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Layout\n","import React from 'react'\nimport { Link } from 'gatsby'\n\nexport default function (props) {\n  return (\n    <div className=\"css-info\">\n      <span\n        style={{\n          paddingRight: '12px',\n        }}\n      >\n        {props.date}\n      </span>\n      {props.tags ? (\n        <React.Fragment>\n          {props.tags.map((tag, index) => (\n            <span\n              key={tag}\n              style={{\n                paddingRight: '8px',\n              }}\n            >\n              <Link to={`/tag/${tag}`}>#{tag}</Link>\n            </span>\n          ))}\n        </React.Fragment>\n      ) : null}\n    </div>\n  )\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { useSiteMetadata } from \"../hooks/use-site-metadata\"\n\nfunction SEO({\n  description,\n  keywords,\n  image,\n  title,\n  pathname,\n}) {\n  const meta = useSiteMetadata()\n  const seo = {\n    title: `${title} | ${meta.title}`,\n    url: `${meta.siteUrl}${pathname || ''}`,\n    description: description || meta.description,\n    keywords: keywords || meta.keywords,\n    author: meta.author,\n    image,\n  }\n\n  return (\n    <>\n      <title>{seo.title}</title>\n      <meta name=\"google-adsense-account\" content=\"ca-pub-1730830298664620\"></meta>\n      <script async src=\"https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-1730830298664620\"\n     crossorigin=\"anonymous\"></script>\n      <link rel=\"canonical\" href={seo.url} />\n      <meta name=\"keywords\" content={seo.keywords.join(',')} />\n      <meta name=\"description\" content={seo.description} />\n\n      <meta property=\"og:title\" content={seo.title} />\n      <meta property=\"og:description\" content={seo.description} />\n\n      <meta name=\"twitter:title\" content={seo.title} />\n      <meta name=\"twitter:card\" content=\"summary\" />\n      <meta name=\"twitter:url\" content={seo.url} />\n      <meta name=\"twitter:description\" content={seo.description} />\n      <meta name=\"twitter:creator\" content={seo.author} />\n\n      {seo.img ? <>\n        <meta name=\"twitter:card\" content=\"summary_large_image\" />\n        <meta name=\"twitter:image\" content={seo.image.src} />\n        <meta name=\"image\" content={seo.image.src} />\n        <meta property=\"og:image:width\" content={seo.image.width} />\n        <meta property=\"og:image:height\" content={seo.image.height} />\n      </> : null}\n    </>\n  )\n}\n\nexport default SEO\n","import { graphql, useStaticQuery } from \"gatsby\"\n\nexport const useSiteMetadata = () => {\n  const data = useStaticQuery(graphql`\n    query {\n      site {\n        siteMetadata {\n          title\n          description\n          author\n          keywords\n          siteUrl\n        }\n      }\n    }\n  `)\n\n  return data.site.siteMetadata\n}","export const siteName = \"Funny Eagle\"\nexport const author = 'Jason Yang'\nexport const apiUrl = 'https://wwwiki.top'\n\nexport const menu = [\n  {\n    icon: 'coding',\n    name: '编程',\n    href: '/tag/coding/',\n  },\n  {\n    icon: 'music',\n    name: '音乐',\n    href: '/tag/music/',\n  },\n  {\n    icon: 'life',\n    name: '生活',\n    href: '/tag/life/',\n  },\n  {\n    icon: 'tag',\n    name: '标签',\n    href: '/tags',\n  },\n  {\n    icon: 'archive',\n    name: '归档',\n    href: '/archive',\n  },\n  {\n    icon: 'person',\n    name: '关于',\n    href: '/about',\n  },\n]\n\nexport const socialMedia = [\n  {\n    icon: 'weibo',\n    href: 'https://weibo.com/227307890',\n  },\n  {\n    icon: 'github-fill',\n    href: 'https://github.com/funny-eagle',\n  },\n  {\n    icon: 'twitter',\n    href: 'https://twitter.com/yangjinlong86',\n  },\n  {\n    icon: 'rss',\n    href: 'http://funnyeagle.cn/rss.xml',\n  },\n]\n\nexport const recommend = [\n  {\n    title: 'ECMA-262, 9th edition',\n    description: 'ECMAScript 语言规范',\n    href: 'https://www.ecma-international.org/ecma-262/9.0/index.html',\n    img: 'https://www.ecma-international.org/ecma-262/9.0/img/ecma-logo.svg',\n  },\n]\n\nexport const friends = [\n  {\n    title: 'FunnyEagle',\n    description: '老鹰的博客',\n    href: 'http://funnyeagle.cn',\n    img: 'http://funnyeagle.cn/static/df1082d3ffc5b1288b5e7e78fe346036/ee81f/profile-pic.avif',\n  },\n]\n","\n(function(){if(\"undefined\"!==typeof window&&void 0!==window.Reflect&&void 0!==window.customElements){var a=HTMLElement;window.HTMLElement=function(){return Reflect.construct(a,[],this.constructor)};HTMLElement.prototype=a.prototype;HTMLElement.prototype.constructor=HTMLElement;Object.setPrototypeOf(HTMLElement,a)}})();\nexport * from '../esm/polyfills/index.js';\nexport * from '../esm/loader.js';\n","import { p as promiseResolve, b as bootstrapLazy } from './index-55dc676f.js';\n\n/*\n Stencil Client Patch Esm v2.11.0 | MIT Licensed | https://stenciljs.com\n */\nconst patchEsm = () => {\n    return promiseResolve();\n};\n\nconst defineCustomElements = (win, options) => {\n  if (typeof window === 'undefined') return Promise.resolve();\n  return patchEsm().then(() => {\n  return bootstrapLazy([[\"deckgo-highlight-code\",[[1,\"deckgo-highlight-code\",{\"language\":[513],\"highlightLines\":[513,\"highlight-lines\"],\"lineNumbers\":[516,\"line-numbers\"],\"terminal\":[513],\"editable\":[4],\"theme\":[513],\"revealProgress\":[1025,\"reveal-progress\"],\"themeStyle\":[32],\"loaded\":[32],\"highlightRows\":[32],\"load\":[64],\"reveal\":[64],\"hide\":[64],\"revealAll\":[64],\"hideAll\":[64],\"nextHighlight\":[64],\"prevHighlight\":[64]},[[5,\"prismLanguageLoaded\",\"onLanguageLoaded\"],[5,\"prismLanguageError\",\"onLanguageError\"],[8,\"copy\",\"onCopyCleanZeroWidthSpaces\"]]]]]], options);\n  });\n};\n\nexport { defineCustomElements };\n","import React from 'react'\nimport { Link, graphql } from 'gatsby'\nimport Layout from '../components/Layout'\nimport Info from '../components/PostInfo'\nimport SEO from '../components/Seo'\nimport { defineCustomElements as deckDeckGoHighlightElement } from \"@deckdeckgo/highlight-code/dist/loader\";\ndeckDeckGoHighlightElement()\n\nclass BlogPostTemplate extends React.Component {\n  componentDidMount = () => {\n    let pre = location.hash || ''\n    if (pre)\n      document.querySelector(`.css-toc a[href*=\"${pre}\"]`).className = 'active'\n    let all = document.querySelectorAll(`.css-toc a`)\n    for (let item of Array.from(all)) {\n      item.addEventListener('click', (e) => {\n        if (pre) {\n          let menuItem = document.querySelector(`.css-toc a[href*=\"${pre}\"]`)\n          menuItem.className = ''\n        }\n        item.className = 'active'\n        pre = item.hash\n      })\n    }\n    document.addEventListener('scroll', () => {\n      let list = Array.from(document.querySelectorAll('h2,h3,h4,h5,h6'))\n      if (list.length === 0) return\n      let passedList = []\n      for (let item of list) {\n        let top = item.getBoundingClientRect().top\n        if (top <= 50) passedList.push(item)\n      }\n      if (!passedList.length) return // 第一条的情况\n      let last = passedList[passedList.length - 1]\n      if (pre !== last.hash) {\n        if (pre) {\n          let preItem = document.querySelector(`.css-toc a[href*=\"${pre}\"]`)\n          if (preItem) preItem.className = ''\n        }\n        let menuItem = document.querySelector(\n          `.css-toc a[href*=\"${encodeURIComponent(last.id)}\"]`\n        )\n        menuItem.className = 'active'\n        pre = menuItem.hash\n      }\n    })\n  }\n  render() {\n    const post = this.props.data.markdownRemark\n    const { slug, previous, next } = this.props.pageContext\n    return (\n      <Layout aside={post.tableOfContents}>\n        <h1>{post.frontmatter.title}</h1>\n        <Info date={post.frontmatter.date} tags={post.frontmatter.tags} />\n        <div\n          className=\"css-post-main\"\n          dangerouslySetInnerHTML={{ __html: post.html }}\n        />\n        <hr />\n        <ul className=\"button-wrapper\">\n          <li>\n            {previous && (\n              <Link to={previous.fields.slug} rel=\"prev\">\n                <button>Prev: {previous.frontmatter.title}</button>\n              </Link>\n            )}\n          </li>\n          <li>\n            {next && (\n              <Link to={next.fields.slug} rel=\"next\">\n                <button>Next: {next.frontmatter.title}</button>\n              </Link>\n            )}\n          </li>\n        </ul>\n      </Layout>\n    )\n  }\n}\n\nexport default BlogPostTemplate\n\nexport const Head = ({ data, location }) => {\n  const post = data.markdownRemark\n  const pathname = location.pathname\n  const siteDescription = post.frontmatter.description || post.excerpt\n  return <SEO\n    title={post.frontmatter.title}\n    description={siteDescription}\n    keywords={post.frontmatter.tags}\n    pathname={pathname}\n  />\n}\n\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug($slug: String!) {\n    site {\n      siteMetadata {\n        title\n        author\n      }\n    }\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      excerpt(truncate: true, pruneLength: 100)\n      html\n      tableOfContents\n      frontmatter {\n        title\n        tags\n        description\n        date(formatString: \"YYYY-MM-DD\")\n      }\n    }\n  }\n`\n"],"names":["scopeId","hostTagName","queuePending","win","window","doc","document","head","plt","$flags$","$resourcesUrl$","jmp","h","raf","requestAnimationFrame","ael","el","eventName","listener","opts","addEventListener","rel","removeEventListener","ce","CustomEvent","promiseResolve","v","Promise","resolve","supportsConstructibleStylesheets","CSSStyleSheet","replace","e","addHostEventListeners","elm","hostRef","listeners","attachParentListeners","map","flags","name","method","target","getHostListenerTarget","handler","hostListenerProxy","hostListenerOpts","$rmListeners$","push","methodName","ev","$lazyInstance$","$queuedListeners$","consoleError","XLINK_NS","rootAppliedStyles","WeakMap","attachStyles","cmpMeta","$cmpMeta$","$hostElement$","endAttachStyles","$tagName$","styleContainerNode","mode","hostElm","getScopeId","style","styles","get","nodeType","styleElm","appliedStyles","set","Set","has","createElement","innerHTML","insertBefore","querySelector","add","adoptedStyleSheets","includes","addStyle","shadowRoot","getRootNode","classList","cmp","EMPTY_OBJ","isComplexType","o","nodeName","vnodeData","children","child","key","simple","lastSimple","vNodeChildren","walk","c","i","length","Array","isArray","String","$text$","newVNode","classData","className","class","Object","keys","filter","k","join","vdomFnUtils","vnode","$attrs$","$children$","$key$","tag","text","$tag$","$elm$","Host","forEach","cb","convertToPublic","convertToPrivate","node","vattrs","vchildren","vkey","vname","$name$","vtag","vtext","assign","setAccessor","memberName","oldValue","newValue","isSvg","isProp","isMemberInElement","ln","toLowerCase","oldClasses","parseClassList","newClasses","remove","prop","removeProperty","setProperty","isComplex","tagName","n","xlink","getAttribute","removeAttributeNS","removeAttribute","setAttributeNS","setAttribute","slice","parseClassListRegex","value","split","updateElement","oldVnode","newVnode","isSvgMode","host","oldVnodeAttrs","newVnodeAttrs","undefined","createElm","oldParentVNode","newParentVNode","childIndex","parentElm","childNode","createTextNode","appendChild","addVnodes","before","parentVNode","vnodes","startIdx","endIdx","containerElm","removeVnodes","callNodeRefs","isSameVnode","vnode1","vnode2","patch","oldVNode","oldChildren","newChildren","oldCh","newCh","elmToMove","oldStartIdx","newStartIdx","idxInOld","oldEndIdx","oldStartVnode","oldEndVnode","newEndIdx","newStartVnode","newEndVnode","nextSibling","parentNode","updateChildren","textContent","data","vNode","ref","renderVdom","renderFnResults","$vnode$","rootVnode","$attrsToReflect$","propName","attribute","getElement","getHostRef","createEvent","emit","detail","emitEvent","bubbles","composed","cancelable","dispatchEvent","attachToAncestor","ancestorComponent","$onRenderResolve$","r","scheduleUpdate","isInitialLoad","$ancestorComponent$","writeTask","dispatchHooks","endSchedule","instance","promise","event","safeCall","then","updateComponent","async","endUpdate","rc","endRender","callRender","childrenPromises","postUpdate","postUpdateComponent","all","render","endPostUpdate","addHydratedFlag","$onReadyResolve$","appDidLoad","$onInstanceResolve$","nextTick","who","documentElement","namespace","arg","thenFn","setValue","newVal","oldVal","$instanceValues$","propValue","propType","$members$","$watchers$","watchMethods","watchMethodName","proxyComponent","Cstr","watchers","members","entries","prototype","memberFlags","defineProperty","this","configurable","enumerable","args","$onInstancePromise$","attrNameToPropName","Map","attributeChangedCallback","attrName","_oldValue","hasOwnProperty","observedAttributes","_","m","initializeComponent","hmrVersionId","loadModule","endLoad","isProxied","endNewInstance","endRegisterStyles","cssText","allowCS","registerStyle","schedule","bootstrapLazy","lazyBundles","options","endBootstrap","cmpTags","exclude","customElements","metaCharset","visibilityStyle","deferredConnectedCallbacks","appLoadFallback","isBootstrapping","URL","resourcesUrl","baseURI","href","lazyBundle","compactMeta","$listeners$","HostElement","HTMLElement","constructor","self","super","registerHost","attachShadow","connectedCallback","clearTimeout","endConnected","disconnectedCallback","rmListener","componentOnReady","$onReadyPromise$","$lazyBundleId$","define","firstChild","setTimeout","hostRefs","registerInstance","lazyInstance","console","error","cmpModules","exportName","bundleId","module","importedModule","queueDomReads","queueDomWrites","queueTask","queue","write","flush","consume","performance","now","webpackAsyncContext","req","__webpack_require__","Error","code","ids","id","exports","Menu","props","direction","menu","item","icon","Component","footerStyle","marginBottom","Layout","state","menuState","keyword","animation","year","days","theme","logo","toggleTheme","setTheme","themeName","localStorage","setItem","setState","toggleMenuState","change","search","open","formatTime","msTime","time","Math","floor","handleEnter","keyCode","componentDidMount","Date","getFullYear","matchMedia","addListener","matches","pageName","pageDescript","aside","websiteName","boxShadow","textDecoration","fontWeight","to","siteName","onClick","content","src","crossorigin","dangerouslySetInnerHTML","__html","textAlign","placeholder","onChange","onKeyUp","socialMedia","React","paddingRight","date","tags","index","description","keywords","image","title","pathname","meta","useStaticQuery","site","siteMetadata","seo","url","siteUrl","author","property","img","width","height","apiUrl","recommend","friends","Reflect","a","construct","setPrototypeOf","p","b","BlogPostTemplate","pre","location","hash","querySelectorAll","from","list","passedList","getBoundingClientRect","top","last","preItem","menuItem","encodeURIComponent","post","markdownRemark","slug","previous","next","pageContext","tableOfContents","frontmatter","html","fields","Head","siteDescription","excerpt"],"sourceRoot":""}